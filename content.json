{"meta":{"title":"Geek Coading","subtitle":"IT blog / Thanks to everyone!","description":"Geek IT blog","author":"Hyejin Shin","url":"https://dullyshin.github.io"},"pages":[],"posts":[{"title":"Hexo - commands 코멘드","slug":"Hexo-commands","date":"2023-08-22T11:33:01.000Z","updated":"2023-08-22T11:55:06.362Z","comments":true,"path":"2023/08/22/Hexo-commands/","link":"","permalink":"https://dullyshin.github.io/2023/08/22/Hexo-commands/","excerpt":"","text":"Hexo - Commands 코멘드init1$ hexo init [folder] 웹 사이트를 초기화합니다. folder가 준비되어 있지 않다면 Hexo는 현재 디렉토리에 웹 사이트를 세팅합니다. new1$ hexo new [layout] &lt;title&gt; 새 글(article)을 생성합니다. layout이 준비되어 있지 않다면, Hexo는 _config.yml에 정의된 default_layout을 사용합니다. 만약 title에 공백이 포함된다면 따옴표로 감싸주세요. generate1$ hexo generate 정적 파일들을 생성합니다. 옵션 설명 -d, –deploy 생성이 종료된 후 deploy 합니다. -w, –watch 파일의 변경사항을 감시(watch)합니다. 위의 옵션을 사용하여 제가 주로 줄여서 사용하는 코맨드는 $hexo g -d 입니다.그리하면 g로 정적파일을 생성한 후에 바로 -d배포되는 거지요. publish1$ hexo publish [layout] &lt;filename&gt; 작성한 내용을 배포합니다. 여기서 [layout] &lt;filename&gt;는 필수 인자는 아닙니다. server1$ hexo server 로컬 서버를 구동시킵니다. 기본적으로 http://localhost:4000/ 를 사용합니다. 옵션 설명 -p, –port 기본 포트를 덮어씁니다. -s, –static 정적인 파일만 구동합니다. -l, –log Logger를 활성화 시킵니다. Logger 형식을 덮어씁니다. 1$hexo server -p1234 위와 같이 사용하면 http://localhost:1234의 주소로 포트를 변경할 수 있습니다. deploy1$ hexo deploy 웹 사이트를 deploy 합니다. 옵션 설명 -g, –generate Deploy 하기 전에 generate를 수행합니다. render1$ hexo render &lt;file1&gt; [file2] ... 파일을 렌더링합니다. 옵션 설명 -o, –output Output destination migrate1$ hexo migrate &lt;type&gt; 다른 블로그 시스템의 내용을 Hexo로 마이그레이션 합니다. clean1$ hexo clean 캐시 파일 (db.json) 및 생성된 파일들 (public) 을 삭제합니다. list1$ hexo list &lt;type&gt; 경로(route) 목록을 보여줍니다. version1$ hexo version 버전 정보를 보여줍니다. #옵션 안전 모드1$ hexo --safe 플러그인과 스크립트를 불러오지 않습니다. 새로운 플러그인을 설치한 후 문제가 생기면 이 모드를 사용해 보시기 바랍니다. 디버그 모드1$ hexo --debug 터미널에 verbose 로그 메시지를 출력하고 debug.log 파일에 저장합니다. Hexo에 문제 발생 시 사용해 보시기 바랍니다. 에러 발견 시 raise a GitHub issue에 등록해 주세요. Silent 모드1$ hexo --silent 터미널에 내용을 출력하지 않습니다. 설정 파일의 변경(customizing)1$ hexo --config custom.yml _config.yml 대신 커스터미이징한 설정 파일을 사용할 수 있습니다. Draft 포스트 표시1$ hexo --draft Draft 포스트를 보여줍니다(source/_drafts 폴더에 저장되어 있습니다). 현재 작업 디렉토리의 변경(customizing)1$ hexo --cwd /path/to/cwd 현재 작업 디렉토리의 경로를 변경할 수 있습니다. Reference https://hexo.io/ko/docs/commands.html","categories":[{"name":"Hexo","slug":"Hexo","permalink":"https://dullyshin.github.io/categories/Hexo/"}],"tags":[{"name":"commands","slug":"commands","permalink":"https://dullyshin.github.io/tags/commands/"},{"name":"hexo commands","slug":"hexo-commands","permalink":"https://dullyshin.github.io/tags/hexo-commands/"},{"name":"헥소 코멘드","slug":"헥소-코멘드","permalink":"https://dullyshin.github.io/tags/헥소-코멘드/"},{"name":"헥소 코맨드","slug":"헥소-코맨드","permalink":"https://dullyshin.github.io/tags/헥소-코맨드/"},{"name":"hexo 코멘드","slug":"hexo-코멘드","permalink":"https://dullyshin.github.io/tags/hexo-코멘드/"},{"name":"hexo 코맨드","slug":"hexo-코맨드","permalink":"https://dullyshin.github.io/tags/hexo-코맨드/"}]},{"title":"PostgreSQL 주석 (comment 코멘트)","slug":"PostgreSQL-comment","date":"2023-08-21T13:37:36.000Z","updated":"2023-08-21T14:04:28.460Z","comments":true,"path":"2023/08/21/PostgreSQL-comment/","link":"","permalink":"https://dullyshin.github.io/2023/08/21/PostgreSQL-comment/","excerpt":"","text":"PostgreSQL - 주석 남기기다른 개발자들과 협업을 위해서나 자신이 무엇을 위해 쿼리를 적어 놓았는지 기억 및 구분하기 위해서 주로 사용합니다. 회사에 따른 주석 표준이 있을 수 있습니다. --으로 한줄을 주석 처리할때 사용합니다. 1-- 여기 밑에 직원 테이블 조회하는 쿼리 작업해주세요~ 여러 줄의 코멘트를 작성 하려면 /*으로 시작해서 */으로 닫아주면 됩니다. 123456/*각 도시의 일평균 기온을 구하는 방법여기서 AS 예약어는 생략되어도 되고, 이것은 그 칼럼의 새로운 이름을 지정할 때 사용합니다.*/SELECT city, (temp_hi+temp_lo)/2 AS temp_avg, date FROM weather; Reference https://www.postgresql.kr/docs/13/tutorial-select.html https://www.devkuma.com/docs/postgresql/%EC%A3%BC%EC%84%9D-comment-%EC%9E%91%EC%84%B1/ Related Posts PostgreSql 란? [java error]The content of elements must consist of well-formed character data or markup. (MS SQL) 삽입시Insert 최대값 추가 +1 SQL basic PostgreSQL - 베큠 `Vacuum` 간단한 소개 PostgreSQL-coalesce함수 (오라클 nvl함수 대체)","categories":[{"name":"Programming","slug":"Programming","permalink":"https://dullyshin.github.io/categories/Programming/"},{"name":"SQL","slug":"Programming/SQL","permalink":"https://dullyshin.github.io/categories/Programming/SQL/"}],"tags":[{"name":"PostgreSQL","slug":"PostgreSQL","permalink":"https://dullyshin.github.io/tags/PostgreSQL/"},{"name":"SQL","slug":"SQL","permalink":"https://dullyshin.github.io/tags/SQL/"},{"name":"PostgreSQL_Basic","slug":"PostgreSQL-Basic","permalink":"https://dullyshin.github.io/tags/PostgreSQL-Basic/"},{"name":"PostgreSQL 주석","slug":"PostgreSQL-주석","permalink":"https://dullyshin.github.io/tags/PostgreSQL-주석/"},{"name":"포스트그레스 주석","slug":"포스트그레스-주석","permalink":"https://dullyshin.github.io/tags/포스트그레스-주석/"},{"name":"PostgreSQL 주석 남기기","slug":"PostgreSQL-주석-남기기","permalink":"https://dullyshin.github.io/tags/PostgreSQL-주석-남기기/"},{"name":"PostgreSQL 주석 달기","slug":"PostgreSQL-주석-달기","permalink":"https://dullyshin.github.io/tags/PostgreSQL-주석-달기/"},{"name":"포스트그레스 주석 남기기","slug":"포스트그레스-주석-남기기","permalink":"https://dullyshin.github.io/tags/포스트그레스-주석-남기기/"},{"name":"포스트그레스 주석 달기","slug":"포스트그레스-주석-달기","permalink":"https://dullyshin.github.io/tags/포스트그레스-주석-달기/"},{"name":"PostgreSQL 코멘트","slug":"PostgreSQL-코멘트","permalink":"https://dullyshin.github.io/tags/PostgreSQL-코멘트/"},{"name":"PostgreSQL comment","slug":"PostgreSQL-comment","permalink":"https://dullyshin.github.io/tags/PostgreSQL-comment/"}]},{"title":"PostgreSQL-coalesce함수 (오라클 nvl함수 대체)","slug":"PostgreSQL-nvl","date":"2023-08-12T14:24:31.000Z","updated":"2023-08-12T15:33:20.742Z","comments":true,"path":"2023/08/12/PostgreSQL-nvl/","link":"","permalink":"https://dullyshin.github.io/2023/08/12/PostgreSQL-nvl/","excerpt":"","text":"PostgreSQL-coalesce함수 (오라클 nvl함수 대체)데이터를 조회할 시에 결과에 NULL 이 결과로 나오게 된다면 아주 당혹스러울 상황이 생기게 되는되요.그때 사용할 수 있는 함수가 오라클에서는 nvl 함수, PostgreSQL에서는 coalesce함수를 대체하여 사용할 수 있습니다. PostgreSQL coalesce 함수우선 PostgreSQL coalesce함수를 예시를 들어본다면 아래와 같습니다. 1234567-- COALESCE(A, B);-- A값이 NULL일 경우 B로 반환합니다.SELECT empno , ename , COALESCE(salary, 0) AS salary FROM emp; 위와같이 조회한다면 COALESCE(salary, 0) AS salary 에서 salary(급여) 값이 NULL이 나온다면 무조건 0으로 표시할 수 있게됩니다.좀 더 예시를 확인한다면 아래와 같습니다. 12345-- COALESCE(A, B, C);-- A값이 NULL일 경우 B로 반환합니다. A와 B 모두 NULL일 경우 C로 반환합니다.SELECT COALESCE(description, short_description, &apos;none&apos;)FROM paint; 위의 상황에서 description에 NULL이라면 short_description의 결과를 가져오고 short_description 마저 NULL이라면 ‘none’이라는 결과를 가지고 올 수 있습니다. Oracle NVL 함수위의 쿼리를 오라클의 nvl을 사용하려면 아래와 같이 사용할 수 있습니다. 1234567-- NVL(A, B);-- A값이 NULL일 경우 B로 반환합니다.SELECT empno , ename , NVL(salary, 0) AS salary FROM emp; Oracle NVL2 함수오라클의 NVL2 함수는 NULL이 아닌 경우 지정값1을 출력하고, NULL인 경우 지정값2를 출력한다. 123456789-- NVL2(A, B, C);-- A값이 NULL이 아니라면 B로 반환, NULL일 경우 C로 반환합니다.-- NVL2(&quot;값&quot;, &quot;NOT NULL&quot;, &quot;NULL&quot;)SELECT empno , ename , NVL(salary, 0) AS salary , NVL2(salary, &apos;Y&apos;, &apos;N&apos;) AS salary_yn FROM emp; 여기서 NVL2(salary, &#39;Y&#39;, &#39;N&#39;) AS salary_yn 급여가 있을경우에는 ‘Y’ 없을 경우에는 ‘N’으로 결과가 조회되도록 만들 수 있었습니다. Reference https://www.postgresql.kr/docs/13/functions-conditional.html#FUNCTIONS-COALESCE-NVL-IFNULL Related Posts PostgreSql 란? [java error]The content of elements must consist of well-formed character data or markup. (MS SQL) 삽입시Insert 최대값 추가 +1 SQL basic PostgreSQL - 베큠 `Vacuum` 간단한 소개","categories":[{"name":"Programming","slug":"Programming","permalink":"https://dullyshin.github.io/categories/Programming/"},{"name":"SQL","slug":"Programming/SQL","permalink":"https://dullyshin.github.io/categories/Programming/SQL/"}],"tags":[{"name":"PostgreSQL","slug":"PostgreSQL","permalink":"https://dullyshin.github.io/tags/PostgreSQL/"},{"name":"SQL","slug":"SQL","permalink":"https://dullyshin.github.io/tags/SQL/"},{"name":"PostgreSQL_Basic","slug":"PostgreSQL-Basic","permalink":"https://dullyshin.github.io/tags/PostgreSQL-Basic/"},{"name":"PostgreSQL COALESCE","slug":"PostgreSQL-COALESCE","permalink":"https://dullyshin.github.io/tags/PostgreSQL-COALESCE/"},{"name":"오라클 NVL","slug":"오라클-NVL","permalink":"https://dullyshin.github.io/tags/오라클-NVL/"},{"name":"Oracle PostgreSQL변환","slug":"Oracle-PostgreSQL변환","permalink":"https://dullyshin.github.io/tags/Oracle-PostgreSQL변환/"},{"name":"Oracle의 nvl함수","slug":"Oracle의-nvl함수","permalink":"https://dullyshin.github.io/tags/Oracle의-nvl함수/"},{"name":"PostgreSQL의 coalesce함수","slug":"PostgreSQL의-coalesce함수","permalink":"https://dullyshin.github.io/tags/PostgreSQL의-coalesce함수/"}]},{"title":"Hexo-github token","slug":"Hexo-github-token","date":"2021-10-25T07:31:08.000Z","updated":"2021-10-25T12:00:47.371Z","comments":true,"path":"2021/10/25/Hexo-github-token/","link":"","permalink":"https://dullyshin.github.io/2021/10/25/Hexo-github-token/","excerpt":"","text":"Hexo Github Token 사용법이번에 포스팅을 하면서 github에서 이메일이 왔습니다. 새로운 권한관리로 토큰을 사용해야 한다고 합니다.deploy를 사용하면서 토큰을 사용해야하기 때문에 아래의 파일을 수정해야 합니다. [블로그 디렉토리]/_config.yml 파일 안에 deploy 라는 부분이 있습니다. 그 중 url 부분을 수정해야 하는데 기존에 있는 url은 주석 처리를 한 후에 아래와 같이 수정하도록 합니다. 1234deploy: type: git //#수정 전 repo: https://github.com/DullyShin/dullyshin.github.io.git repo: https://$&#123;GITHUB_TOKEN&#125;@github.com/DullyShin/dullyshin.github.io.git ${GITHUB_TOKEN} 부분에 Github에서 받은 token을 사용하면 됩니다. github에서 토큰을 받기 위해서는 github에서 로그인을 한 뒤에 오른쪽 상단에 자신의 설정버튼을 클릭한 후에 Setting을 클릭합니다. 그 다음 왼쪽 하단에 있는 Developer setting을 클릭합니다. 그 후 왼쪽에 있는 Personal access token을 클릭합니다. 오른쪽에 있는 Generate new token을 클릭해 새로운 토큰을 생성합니다. 다시 말하면 Github의 Settings &gt; Developer Settings &gt; Personal access tokens &gt; Generate new token 순으로 버튼을 누르면 됩니다. 다음 토큰에 부여할 권한을 설정한 후 Generate token을 클릭하여 토큰을 생성합니다. (아래의 권한선택은 예시이므로 필요시에 변경하여 사용하면 됩니다.) 여기서 중요한게 생성된 토큰을 반드시 복사하여 다른곳에 저장해야 합니다. 다시는 볼 수 없을 것 입니다.아래의 이미지에서 검은색으로 칠해진 부분입니다. 다시 한번 말하지만 생성된 토큰을 반드시 복사하여 다른곳에 저장해야 합니다. 그 후 Hexo deploy 에서 사용하려면 위의 부분을 참고하시면 됩니다. Reference https://hexo.io/ko/docs/one-command-deployment.html Related Posts markdown MarkdownEditor Hexo error Hexo에서 사용 가능한 태그들","categories":[{"name":"Hexo","slug":"Hexo","permalink":"https://dullyshin.github.io/categories/Hexo/"}],"tags":[{"name":"Hexo","slug":"Hexo","permalink":"https://dullyshin.github.io/tags/Hexo/"},{"name":"github token","slug":"github-token","permalink":"https://dullyshin.github.io/tags/github-token/"},{"name":"hexo github token","slug":"hexo-github-token","permalink":"https://dullyshin.github.io/tags/hexo-github-token/"},{"name":"깃헙 토큰","slug":"깃헙-토큰","permalink":"https://dullyshin.github.io/tags/깃헙-토큰/"},{"name":"헥소 깃헙 토큰","slug":"헥소-깃헙-토큰","permalink":"https://dullyshin.github.io/tags/헥소-깃헙-토큰/"},{"name":"깃헙 토큰 사용법","slug":"깃헙-토큰-사용법","permalink":"https://dullyshin.github.io/tags/깃헙-토큰-사용법/"},{"name":"깃헙 토큰 사용","slug":"깃헙-토큰-사용","permalink":"https://dullyshin.github.io/tags/깃헙-토큰-사용/"},{"name":"헥소","slug":"헥소","permalink":"https://dullyshin.github.io/tags/헥소/"},{"name":"깃헙 token","slug":"깃헙-token","permalink":"https://dullyshin.github.io/tags/깃헙-token/"},{"name":"헥소 깃헙 token","slug":"헥소-깃헙-token","permalink":"https://dullyshin.github.io/tags/헥소-깃헙-token/"}]},{"title":"HTML - 주석 태그 <!-- -->","slug":"HTML-comment","date":"2021-10-25T05:17:41.000Z","updated":"2021-10-25T12:05:12.914Z","comments":true,"path":"2021/10/25/HTML-comment/","link":"","permalink":"https://dullyshin.github.io/2021/10/25/HTML-comment/","excerpt":"","text":"HTML 주석HTML 주석 tag주석은 &lt;!-- 주석 내용 --&gt; 와 같이 사용할 수 있습니다. 1&lt;!-- 주석 내용 --&gt; HTML 주석 사전적 정의주석은 사전적 정의를 알고나면 쉽게 이해할 수 있습니다. 주석 Comment 정보·통신 프로그램의 본문 가운데 포함되어 있으나 그 프로그램의 실행에는 영향을 주지 않는 언어 구성 요소.출처 : 우리말샘 위와 같이 프로그램을 사용하는데 있어서 실행에는 필요없지만 동료들이나 미래의 이 코드를 보는 사람들을 위해 꼭 필요합니다. (미래의 자신을 위해 사용할 수 있습니다. 나중에는 왜 이렇게 작성했는지 기억이 안나요…) HTML 주석의 활용 다른 사람과 협업하여 사용할때 아주 빛을 발하는데 이 코드는 무엇인지, 어디가 &lt;div&gt;의 시작과 끝인지 쉽게 구분할 수 있습니다. 123456789101112131415161718192021222324&lt;!-- 아래는 구분하기 어려운 div 늪 --&gt;&lt;div class=&quot;main-article&quot;&gt; &lt;div&gt; &lt;div&gt; &lt;div&gt; &lt;div&gt; &lt;div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div&gt; &lt;div&gt; &lt;div&gt; &lt;div&gt; &lt;div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt;&lt;/div&gt;&lt;!-- 들여쓰기마저 없었다면 더욱 구분하기 어렵다 --&gt; 아래의 처럼 사용하면 쉽게 구분하고 이해할 수 있습니다. 1234567891011121314151617181920212223242526272829303132&lt;!-- 주석을 활용하여 구분지을 수 있다 --&gt;&lt;!-- 본문 시작 --&gt;&lt;div class=&quot;main-article&quot;&gt; &lt;!-- 첫번째 div 시작 --&gt; &lt;div&gt; &lt;div&gt; &lt;div&gt; &lt;div&gt; &lt;div&gt; &lt;!-- 제리 현재 작업 중 --&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;!-- 첫번째 div 끝 --&gt; &lt;!-- 두번째 div 시작 --&gt; &lt;div&gt; &lt;div&gt; &lt;div&gt; &lt;div&gt; &lt;div&gt; &lt;!-- 톰 현재 작업 중 --&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;!-- 이 부분 수정 필요 --&gt; &lt;/div&gt; &lt;/div&gt; &lt;!-- 두번째 div 끝 --&gt;&lt;/div&gt;&lt;!-- 본문 끝 --&gt; 각 회사나 팀마다 주석을 어떻게 사용할지 협의를 통해 사용할 수 있습니다.모두 주석을 사용하여 이해하기 쉽고 수정하기 쉬운 날들이 이어지기를 바랍니다. Reference Naver 국어사전 Related Posts HTML의 기초부터 시작하자 HTML 이미지 링크거는 법 HTML 간단하게 표 만들기 Mailto 태그","categories":[{"name":"Programming","slug":"Programming","permalink":"https://dullyshin.github.io/categories/Programming/"},{"name":"HTML","slug":"Programming/HTML","permalink":"https://dullyshin.github.io/categories/Programming/HTML/"}],"tags":[{"name":"comment","slug":"comment","permalink":"https://dullyshin.github.io/tags/comment/"},{"name":"HTML 주석 tag","slug":"HTML-주석-tag","permalink":"https://dullyshin.github.io/tags/HTML-주석-tag/"},{"name":"HTML 주석","slug":"HTML-주석","permalink":"https://dullyshin.github.io/tags/HTML-주석/"},{"name":"HTML 주석 사용법","slug":"HTML-주석-사용법","permalink":"https://dullyshin.github.io/tags/HTML-주석-사용법/"},{"name":"HTML 주석 사용방법","slug":"HTML-주석-사용방법","permalink":"https://dullyshin.github.io/tags/HTML-주석-사용방법/"},{"name":"HTML comment tag","slug":"HTML-comment-tag","permalink":"https://dullyshin.github.io/tags/HTML-comment-tag/"},{"name":"HTML 주석 사전적 정의","slug":"HTML-주석-사전적-정의","permalink":"https://dullyshin.github.io/tags/HTML-주석-사전적-정의/"}]},{"title":"PostgreSQL - 베큠 `Vacuum` 간단한 소개","slug":"PostgreSQL-Vacuum","date":"2021-02-04T09:08:50.000Z","updated":"2021-02-23T07:26:23.905Z","comments":true,"path":"2021/02/04/PostgreSQL-Vacuum/","link":"","permalink":"https://dullyshin.github.io/2021/02/04/PostgreSQL-Vacuum/","excerpt":"","text":"베큠 Vacuum 에 대한 간단한 소개Vacuum 사전적 정의12345 Vacuum1. 진공2. 공백3. 진공청소기를 이용한 청소 네이버 국어 사전을 참고하면 Vacuum의 뜻은 위와 같습니다. PostgreSQL에서의 Vacuum은 저장공간에 불필요하게 남은 데드 튜플(tuple)을 정리하는 것을 뜻 합니다. Vacuum을 왜 진행하는지VACUUM은 데드 튜플(tuple)이 차지하는 스토리지를 회수합니다. 일반적인 PostgreSQL 작업에서 업데이트에 의해 삭제되거나 폐기 된 튜플은 테이블에서 물리적으로 제거되지 않습니다.다시 말해서 PostgreSQL에서는 삭제나 수정을 해도 저장공간에서 사라지는 것이 아니라 데드 튜플이라는 형태로 남아 있게 됩니다. 데드 튜플(tuple)만약 아래와 같은 테이블이 있다고 가정한 후에 데드 튜플이 어떻게 생겨나는지 알아 본다면. Modify : 나나의 이름을 가가로 변경여기에서 주의해야 하는 점은 변경하면 2번째 줄에 있는 나나의 이름이 변경되는 것이 아니라 기존 2번째 줄에 있는 나나는 데드 튜플로 변경된 후에 새로운 가가로 추가된다.데드 튜플을 회색으로 표현하였다. Delete : 3번 아름행 삭제행을(row) 삭제할 때에도 데드 튜플이 생성됩니다. Insert : 철수 삽입된다면?위의 테이블에 인서트 문을 실행할 경우 우선적으로 데드 튜플에 삽입 됩니다. 그래도 아름이 행은 불필요하게 존재하고 있는데 이를 삭제하고 저장공간을 확보하는 것이 Vacuum 입니다.위와 같은 이유로 특히 자주 업데이트되는 테이블에서 정기적으로 VACUUM 을 수행해야 합니다. Vacuum 실행문12345678910111213// DB 전체 풀 실행//주의: full 옵션으로 실행 시 데이터베이스가 잠김(Lock)처리가 되므로 운영중인 데이터베이스에서는 해당 옵션으로 사용하지 마세요.vacuum full analyze;// DB 전체 간단하게 실행vacuum verbose analyze;// 해당 테이블만 간단하게 실행vacuum analyse [테이블 명];// 특정 테이블만 풀 실행//주의: full 옵션으로 실행 시 데이터베이스가 잠김(Lock)처리가 되므로 운영중인 데이터베이스에서는 해당 옵션으로 사용하지 마세요.vacuum full [테이블명]; 위와 같이 매개 변수가 없으면 VACUUM 은 현재 사용자에게 vacuum 권한이있는 현재 데이터베이스의 모든 테이블을 처리합니다. 매개 변수를 사용하면 VACUUM 은 해당 테이블만 처리합니다. 추가 노트사용 불능 행을 제거하려면 활성 프로덕션 데이터베이스를 자주 (적어도 밤마다) 비우기하는 것이 좋습니다. 많은 수의 행을 추가하거나 삭제 한 후 영향을받는 테이블에 대해 VACUUM ANALYZE 명령을 실행 하는 것이 좋습니다 . 이렇게하면 최근의 모든 변경 결과로 시스템 카탈로그가 업데이트되고 PostgreSQL 쿼리 플래너가 쿼리 계획에서 더 나은 선택을 할 수 있습니다. FULL 옵션은 일상적인 사용하지 않는 것이 좋습니다,하지만 특별한 경우에 유용 할 수 있습니다. 예를 들어 테이블에있는 대부분의 행을 삭제하거나 업데이트하고 테이블을 물리적으로 축소하여 디스크 공간을 덜 차지하고 테이블 스캔 속도를 높이려는 경우가 있습니다. VACUUM FULL 은 일반적으로 일반 VACUUM 보다 테이블을 더 축소합니다 . VACUUM 은 I / O 트래픽을 상당히 증가시켜 다른 활성 세션의 성능을 저하시킬 수 있습니다. 따라서 비용 기반 진공 지연 기능을 사용하는 것이 좋습니다. 자세한 내용은 Cost-based Vacuum Delay를 참조하십시오. Reference https://www.postgresql.org/docs/9.5/sql-vacuum.html https://blog.gaerae.com/2015/09/postgresql-vacuum-fsm.html https://dict.naver.com/search.nhn?dicQuery=vacuum&amp;query=vacuum&amp;target=dic&amp;ie=utf8&amp;query_utf=&amp;isOnlyViewEE= Related Posts PostgreSql 란? [java error]The content of elements must consist of well-formed character data or markup. (MS SQL) 삽입시Insert 최대값 추가 +1 SQL basic","categories":[{"name":"Programming","slug":"Programming","permalink":"https://dullyshin.github.io/categories/Programming/"},{"name":"SQL","slug":"Programming/SQL","permalink":"https://dullyshin.github.io/categories/Programming/SQL/"}],"tags":[{"name":"PostgreSQL","slug":"PostgreSQL","permalink":"https://dullyshin.github.io/tags/PostgreSQL/"},{"name":"postgresql","slug":"postgresql","permalink":"https://dullyshin.github.io/tags/postgresql/"},{"name":"postgresql DELETE 해도 storage가 변하지 않는 이유","slug":"postgresql-DELETE-해도-storage가-변하지-않는-이유","permalink":"https://dullyshin.github.io/tags/postgresql-DELETE-해도-storage가-변하지-않는-이유/"},{"name":"PostgreSQL Vacuum","slug":"PostgreSQL-Vacuum","permalink":"https://dullyshin.github.io/tags/PostgreSQL-Vacuum/"},{"name":"postgresql Vacuum","slug":"postgresql-Vacuum","permalink":"https://dullyshin.github.io/tags/postgresql-Vacuum/"},{"name":"PostgreSQL 베큠","slug":"PostgreSQL-베큠","permalink":"https://dullyshin.github.io/tags/PostgreSQL-베큠/"},{"name":"postgresql 베큠","slug":"postgresql-베큠","permalink":"https://dullyshin.github.io/tags/postgresql-베큠/"},{"name":"PostgreSQL 저장 공간 확보","slug":"PostgreSQL-저장-공간-확보","permalink":"https://dullyshin.github.io/tags/PostgreSQL-저장-공간-확보/"},{"name":"postgresql 저장 공간","slug":"postgresql-저장-공간","permalink":"https://dullyshin.github.io/tags/postgresql-저장-공간/"},{"name":"garbage-collect","slug":"garbage-collect","permalink":"https://dullyshin.github.io/tags/garbage-collect/"},{"name":"optionally analyze a database","slug":"optionally-analyze-a-database","permalink":"https://dullyshin.github.io/tags/optionally-analyze-a-database/"}]},{"title":"Echarts - 이미지 다운로드 버튼 따로 만들기","slug":"Echarts-ImageDownloadBtn","date":"2021-02-03T05:57:17.000Z","updated":"2023-08-21T14:15:22.586Z","comments":true,"path":"2021/02/03/Echarts-ImageDownloadBtn/","link":"","permalink":"https://dullyshin.github.io/2021/02/03/Echarts-ImageDownloadBtn/","excerpt":"","text":"Echarts 이미지 다운로드 버튼 따로 분리하기Echarts 에서 제공하는 기본 기능인 이미지 다운로드 기능이 있습니다. 그 기능을 바로 toolbox 안에 saveAsImage 입니다. 12345678option = &#123; ... //다른 옵션은 제외 되었습니다. toolbox: &#123; feature: &#123; saveAsImage: &#123;&#125; &#125; &#125;&#125; 이차트 옵션에 위와 같이 옵션을 주면 아래와 같이 차트 영역안에 이미지를 다운로드 할수 있는 버튼이 생성됩니다. 기본적으로 차트의 오른쪽 위쪽에 생성됩니다. (아래는 예시 이미지로 실제 작동하지 않습니다. 아래에 그려진 차트에서 실제 작동하는 것을 확인 할 수 있습니다.) 저는 이 기능이 차트 안에서 있는게 아니라 따로 만들어낸 버튼에서 실행하고 싶었습니다. echarts 다이어그램 자체가 캔버스 요소에 그려져 있으므로 캔버스 개체를 가져 와서 해당 캔버스 정보를 주소로 변환 할 수 있습니다. 1234567891011121314151617181920212223//버튼 생성&lt;button name=&quot;button&quot; onclick=&quot;getChartImg()&quot;&gt;차트 이미지 다운로드&lt;/button&gt;//버튼을 클릭했을때 실행될 함수를 만듭니다.function getChartImg()&#123; //캔버스의 정보를 가져옵니다. let canvas = document.getElementsByTagName(&quot;canvas&quot;); if(canvas&amp;&amp;canvas.length&gt;0)&#123; //레이블 생성 let tempA = document.createElement(&quot;a&quot;); //다운로드될 이름 생성 tempA.download = &quot;echarts download&quot; +&quot;.png&quot;; //address 설정하고 파일의 타입 정하기 tempA.href = canvas[0].toDataURL(&quot;image/png&quot;); document.body.appendChild(tempA); //클릭 다운로드 이벤트 tempA.click(); //태그를 제거합니다 tempA.remove(); &#125;&#125; 아래의 버튼을 누르면 차트를 이미지로 다운 받을 수 있습니다. 차트 이미지 다운로드 Reference https://echarts.apache.org/examples/zh/editor.html?c=line-stack https://programmer.group/5dce28410815c.html Related Posts ECharts를 통해 5분안에 차트를 만들자! ECharts 바차트 색상 변경! ECharts를 통해 간단한 Heatmap 만들기! ECharts 최소 최대값 설정! Echarts-차트에 클릭 이벤트 생성하기 01 // DOM을 준비하고 echart 객체를 만듭니다. var myChart = echarts.init(document.getElementById('mainechart')); var option = { title: { text: 'ECharts entry example' }, tooltip: {}, toolbox: { feature: { saveAsImage: {} } }, legend: { data:['Sales'] }, xAxis: { data: [\"shirt\",\"cardign\",\"chiffon shirt\",\"pants\",\"heels\",\"socks\"] }, yAxis: {}, series: [{ name: 'Sales', type: 'bar', data: [5, 20, 36, 10, 10, 20] }] }; // 위에서 설정한 속성을 차트에 반영합니다. myChart.setOption(option); function getChartImg(){ let canvas = document.getElementsByTagName(\"canvas\"); if(canvas&&canvas.length > 0){ // create label let tempA = document.createElement(\"a\"); // Set download name tempA.download = \"echarts download\" + \".png\"; // Set address and file type tempA.href = canvas[0].toDataURL(\"image/png\"); document.body.appendChild(tempA); // Trigger download event tempA.click(); // Remove Tag tempA.remove(); } }","categories":[{"name":"Programming","slug":"Programming","permalink":"https://dullyshin.github.io/categories/Programming/"},{"name":"Echarts","slug":"Programming/Echarts","permalink":"https://dullyshin.github.io/categories/Programming/Echarts/"}],"tags":[{"name":"Echarts","slug":"Echarts","permalink":"https://dullyshin.github.io/tags/Echarts/"},{"name":"이차트","slug":"이차트","permalink":"https://dullyshin.github.io/tags/이차트/"},{"name":"echart","slug":"echart","permalink":"https://dullyshin.github.io/tags/echart/"},{"name":"echart 한글","slug":"echart-한글","permalink":"https://dullyshin.github.io/tags/echart-한글/"},{"name":"echart 이미지 다운로드 버튼 따로 빼기","slug":"echart-이미지-다운로드-버튼-따로-빼기","permalink":"https://dullyshin.github.io/tags/echart-이미지-다운로드-버튼-따로-빼기/"},{"name":"echart 이미지 다운로드 버튼","slug":"echart-이미지-다운로드-버튼","permalink":"https://dullyshin.github.io/tags/echart-이미지-다운로드-버튼/"},{"name":"echart 이미지 다운로드","slug":"echart-이미지-다운로드","permalink":"https://dullyshin.github.io/tags/echart-이미지-다운로드/"},{"name":"echart image download button seperately","slug":"echart-image-download-button-seperately","permalink":"https://dullyshin.github.io/tags/echart-image-download-button-seperately/"},{"name":"차트 이미지 다운로드","slug":"차트-이미지-다운로드","permalink":"https://dullyshin.github.io/tags/차트-이미지-다운로드/"}]},{"title":"[PostgreSQL] 날짜 & 시간 생성하기(generate_series)","slug":"PostgreSQL-generateSeries","date":"2020-03-13T07:15:50.000Z","updated":"2023-08-12T15:38:02.100Z","comments":true,"path":"2020/03/13/PostgreSQL-generateSeries/","link":"","permalink":"https://dullyshin.github.io/2020/03/13/PostgreSQL-generateSeries/","excerpt":"","text":"[PostgreSQL] 날짜 &amp; 시간 생성하기(generate_series)제가 PostgreSql 에서 가장 잘 사용하고 있는 function 중 하나는 generate_series 입니다! Function Argument Type Return Type Description generate_series (start, stop) int or bigint (same as argument type) 1의 단위로 증감합니다 generate_series(start, stop, step) int or bigint (same as argument type) step에서 설정한 단위로 증감합니다 generate_series(start, stop, step interval) timestamp or timestamp with time zone (same as argument type) step에서 설정한 단위로 증감합니다 간단한 예시들generate_series 기본적인 예시를 아래에서 확인하시죠. 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657SELECT * FROM generate_series(2,4); generate_series----------------- 2 3 4(3 rows)SELECT * FROM generate_series(5,1,-2); generate_series----------------- 5 3 1(3 rows)SELECT * FROM generate_series(&apos;2008-03-01 00:00&apos;::timestamp, &apos;2008-03-04 12:00&apos;, &apos;10 hours&apos;); generate_series--------------------- 2008-03-01 00:00:00 2008-03-01 10:00:00 2008-03-01 20:00:00 2008-03-02 06:00:00 2008-03-02 16:00:00 2008-03-03 02:00:00 2008-03-03 12:00:00 2008-03-03 22:00:00 2008-03-04 08:00:00(9 rows)select &apos;R&apos;|| right(&apos;0&apos; || line_value, 2) as linefrom generate_series(5, 18) as tbl(line_value); line---------- R01 R02 R03 R04 R05 R06 R07 R08 R09 R10 R11 R12 R13 R14 R15 R16 R17 R18(18 rows) 시간 &amp; 날짜 데이터 생성하기위에서 SELECT * FROM generate_series(&#39;2008-03-01 00:00&#39;::timestamp,&#39;2008-03-04 12:00&#39;, &#39;10 hours&#39;); 쿼리를 통해 시간 데이터를 생성하였으나 원하는 값이 월-일 시:분 데이터 형식이면 아래의 쿼리를 사용하면 됩니다. 123456789101112131415SELECT to_char(generate_series(&apos;2008-03-01 00:00&apos;::timestamp,&apos;2008-03-04 12:00&apos;, &apos;10 hours&apos;), &apos;MM-dd hh:mi&apos;) as gtime; gtime------------03-01 12:0003-01 10:0003-01 08:0003-02 06:0003-02 04:0003-03 02:0003-03 12:0003-03 10:0003-04 08:00(9 rows) to_char에서 사용하는 Date/Time 포멧위에서 사용하는 to_char함수에서 자주 사용되는 Date/Time 포멧을 더 자세하게 알아보자면 아래와 같습니다.모든 포멧을 알고 싶다면 to_char 자세히를 클릭하시면 됩니다. 원하는 포멧에 맞추에 to_char(now(), &#39;YYYY-MM-DD HH:MI:SS&#39;) 같이 원하는 형식으로 변경하여 사용할 수 있습니다~ Pattern Description 설명 HH hour of day (01-12) 하루의 시간 (01-12) HH12 hour of day (01-12) 하루의 시간 (01-12) HH24 hour of day (00-23) 하루의 시간 (00-23) MI minute (00-59) 분 (00-59) SS second (00-59) 초(00-59) MS millisecond (000-999) 밀리초 (000-999) US microsecond (000000-999999) 마이크로초(000000-999999) AM, am, PM or pm meridiem indicator (without periods) 정오 표기 (마침표 없이) A.M., a.m., P.M. or p.m. meridiem indicator (with periods) 정오 표기 (마침표 포함) Y,YYY year (4 or more digits) with comma 컴마와 연도 (4 또는 그 이상의 숫자) YYYY year (4 or more digits) 연도 (4 또는 그 이상의 숫자) YYY last 3 digits of year 연도의 마지막 3자리 숫자 YY last 2 digits of year 연도의 마지막 2자리 숫자 Y last digit of year 연도의 마지막 1자리 숫자 MM month number (01-12) 달의 숫자 (01-12) DD day of month (01-31) 일의 숫자 (01-31) Reference https://www.postgresql.org/docs/9.1/functions-srf.html https://www.postgresql.org/docs/10/functions-formatting.html Related Posts PostgreSql 란? [PostgreSQl] 타입 변환 (PostgreSQL CAST To Convert)","categories":[{"name":"Programming","slug":"Programming","permalink":"https://dullyshin.github.io/categories/Programming/"},{"name":"SQL","slug":"Programming/SQL","permalink":"https://dullyshin.github.io/categories/Programming/SQL/"}],"tags":[{"name":"PostgreSQL","slug":"PostgreSQL","permalink":"https://dullyshin.github.io/tags/PostgreSQL/"},{"name":"SQL","slug":"SQL","permalink":"https://dullyshin.github.io/tags/SQL/"},{"name":"PostgreSQL_Basic","slug":"PostgreSQL-Basic","permalink":"https://dullyshin.github.io/tags/PostgreSQL-Basic/"},{"name":"generate_series","slug":"generate-series","permalink":"https://dullyshin.github.io/tags/generate-series/"},{"name":"postgresql generate_series","slug":"postgresql-generate-series","permalink":"https://dullyshin.github.io/tags/postgresql-generate-series/"},{"name":"날짜, 시간 생성하기","slug":"날짜-시간-생성하기","permalink":"https://dullyshin.github.io/tags/날짜-시간-생성하기/"},{"name":"날짜, 시간 만들기","slug":"날짜-시간-만들기","permalink":"https://dullyshin.github.io/tags/날짜-시간-만들기/"}]},{"title":"Echarts -실시간으로 움직이는 차트 만들기","slug":"Echarts-movingChart","date":"2020-03-12T04:59:48.000Z","updated":"2023-08-21T14:14:46.819Z","comments":true,"path":"2020/03/12/Echarts-movingChart/","link":"","permalink":"https://dullyshin.github.io/2020/03/12/Echarts-movingChart/","excerpt":"","text":"Echarts 실시간으로 움직이는 차트 만들기지금까지 만든 차트들은 정적으로 움직임이 없는 차트들이 었지만, 실시간으로 데이터를 생성하여 차트가 움직이는 것처럼 보여질 수 있습니다. 실시간으로 움직이는 차트 동적으로 움직이는 차트를 만들기 위해서는 실 데이터를 계속 생성하고 이전의 데이터를 삭제하면 됩니다.아래의 소스를 확인하여 간단하게 동적인 차트를 만들어 봅시다! 전체 소스123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126// DOM을 준비하고 echart 객체를 만듭니다.var myChart = echarts.init(document.getElementById(&apos;chart01&apos;));//chart의 설정을 정합니다.var option = &#123; title: &#123; text: &apos;수익 비율 확인&apos;, &#125;, tooltip: &#123; trigger: &apos;axis&apos;, axisPointer: &#123; type: &apos;cross&apos;, label: &#123; backgroundColor: &apos;#283b56&apos; &#125; &#125; &#125;, legend: &#123; data:[&apos;순수익&apos;, &apos;총 수익&apos;] &#125;, dataZoom: &#123; show: false, start: 0, end: 100 &#125;, xAxis: [ &#123; type: &apos;category&apos;, boundaryGap: true, data: (function ()&#123; var now = new Date(); var res = []; var len = 20; while (len--) &#123; res.unshift(now.toLocaleTimeString().replace(/^\\D*/,&apos;&apos;)); now = new Date(now - 2000); &#125; return res; &#125;)() &#125;, ], yAxis: [ &#123; type: &apos;value&apos;, scale: true, name: &apos;순수익&apos;, max: 30, min: 0, boundaryGap: [0.2, 0.2], axisLabel: &#123; formatter: &apos;&#123;value&#125; %&apos; &#125;, &#125;, &#123; type: &apos;value&apos;, scale: true, name: &apos;총 수익&apos;, max: 1200, min: 0, boundaryGap: [0.2, 0.2] &#125; ], series: [ &#123; name: &apos;순수익&apos;, type: &apos;line&apos;, lineStyle:&#123; color:&apos;#2A265C&apos; //line차트 색상 변경 &#125;, smooth: true, //부드러운 line 표현 yAxisIndex: 0, //yAxis 1번째 사용 data: (function ()&#123; var res = []; var len = 0; while (len &lt; 20) &#123; res.push((Math.random()*10 + 5).toFixed(1) - 0); //랜덤 데이터 생성 len++; &#125; return res; &#125;)() &#125;, &#123; name: &apos;총 수익&apos;, type: &apos;bar&apos;, yAxisIndex: 1, //yAxis 2번째 사용 itemStyle:&#123; color:&apos;#EEAD00&apos; //bar 색상 변경 &#125;, data: (function ()&#123; var res = []; var len = 20; while (len--) &#123; res.push(Math.round(Math.random() * 1000)); //랜덤 데이터 생성 &#125; return res; &#125;)() &#125;, ]&#125;;// 위에서 설정한 속성을 차트에 반영합니다.myChart.setOption(option);//데이터를 생성하고 삭제합니다.setInterval(function ()&#123; //x축에 실시간 데이터 생성 var axisData = (new Date()).toLocaleTimeString().replace(/^\\D*/, &apos;&apos;); var data0 = option.series[0].data; //순수익 데이터 var data1 = option.series[1].data; //총 수익 데이터 //데이터의 가장 왼쪽 값을 제거 data0.shift(); //데이터의 가장 오른쪽 값을 추가 data0.push(Math.round(Math.random() * 1000)); data1.shift(); data1.push((Math.random() * 10 + 5).toFixed(1) - 0); //x축에 시간 데이터 추가 option.xAxis[0].data.shift(); option.xAxis[0].data.push(axisData); //차트에 반영 myChart.setOption(option);&#125;, 2100); 기본적으로 차트를 만드는 방법을 알고 싶으시다면 ECharts를 통해 5분안에 차트를 만들자!를 확인해 주시기 바랍니다. 차트를 움직이게 만드는 로직핵심적으로 차트를 움직이게 하는 소스는 아래에 있습니다. 123456789101112131415161718192021setInterval(function ()&#123; //x축에 실시간 데이터 생성 var axisData = (new Date()).toLocaleTimeString().replace(/^\\D*/, &apos;&apos;); var data0 = option.series[0].data; //순수익 데이터 var data1 = option.series[1].data; //총 수익 데이터 //데이터의 가장 왼쪽 값을 제거 data0.shift(); //데이터의 가장 오른쪽 값을 추가 data0.push(Math.round(Math.random() * 1000)); data1.shift(); data1.push((Math.random() * 10 + 5).toFixed(1) - 0); //x축에 시간 데이터 추가 option.xAxis[0].data.shift(); option.xAxis[0].data.push(axisData); //차트에 반영 myChart.setOption(option);&#125;, 2100); 아래의 setInterval 부분이 차트를 동적이게 움직이도록 하는 부분입니다.좀 더 자세하게 설명하자면 option 안에 있는 데이터가 [3,5,6,7] 이라면 가장 앞에 값인 3을 삭제(shift)하고 새로운 값 10을 넣습니다(push).그래서 데이터는 [5,6,7,10]으로 변경됩니다. 위의 과정을 계속 반복하면 데이터가 동적으로 움직이는 것으로 보일 수 있습니다. Reference https://echarts.apache.org/examples/en/editor.html?c=dynamic-data Related Posts ECharts를 통해 5분안에 차트를 만들자! ECharts 바차트 색상 변경! ECharts를 통해 간단한 Heatmap 만들기! ECharts 최소 최대값 설정! Echarts-차트에 클릭 이벤트 생성하기 01 // DOM을 준비하고 echart 객체를 만듭니다. var myChart = echarts.init(document.getElementById('chart01')); //chart의 설정을 정합니다. var option = { title: { text: '수익 비율 확인', }, tooltip: { trigger: 'axis', axisPointer: { type: 'cross', label: { backgroundColor: '#283b56' } } }, legend: { data:['순수익', '총 수익'] }, dataZoom: { show: false, start: 0, end: 100 }, xAxis: [ { type: 'category', boundaryGap: true, data: (function (){ var now = new Date(); var res = []; var len = 20; while (len--) { res.unshift(now.toLocaleTimeString().replace(/^\\D*/,'')); now = new Date(now - 2000); } return res; })() }, ], yAxis: [ { type: 'value', scale: true, name: '순수익', max: 30, min: 0, boundaryGap: [0.2, 0.2], axisLabel: { formatter: '{value} %' }, }, { type: 'value', scale: true, name: '총 수익', max: 1200, min: 0, boundaryGap: [0.2, 0.2] } ], series: [ { name: '순수익', type: 'line', smooth: true, //부드러운 line 표현 yAxisIndex: 0, //yAxis 1번째 사용 data: (function (){ var res = []; var len = 0; while (len < 20) { res.push((Math.random()*10 + 5).toFixed(1) - 0); len++; } return res; })() }, { name: '총 수익', type: 'bar', yAxisIndex: 1, //yAxis 2번째 사용 data: (function (){ var res = []; var len = 20; while (len--) { res.push(Math.round(Math.random() * 1000)); } return res; })() }, ] }; // 위에서 설정한 속성을 차트에 반영합니다. myChart.setOption(option); //데이터를 생성하고 삭제합니다. setInterval(function (){ //x축에 실시간 데이터 생성 var axisData = (new Date()).toLocaleTimeString().replace(/^\\D*/, ''); var data0 = option.series[0].data; //순수익 데이터 var data1 = option.series[1].data; //총 수익 데이터 //데이터의 가장 왼쪽 값을 제거 data1.shift(); //데이터의 가장 오른쪽 값을 추가 data1.push(Math.round(Math.random() * 1000)); data0.shift(); data0.push((Math.random() * 10 + 5).toFixed(1) - 0); //x축에 시간 데이터 추가 option.xAxis[0].data.shift(); option.xAxis[0].data.push(axisData); //차트에 반영 myChart.setOption(option); }, 2100);","categories":[{"name":"Programming","slug":"Programming","permalink":"https://dullyshin.github.io/categories/Programming/"},{"name":"Echarts","slug":"Programming/Echarts","permalink":"https://dullyshin.github.io/categories/Programming/Echarts/"}],"tags":[{"name":"Echarts","slug":"Echarts","permalink":"https://dullyshin.github.io/tags/Echarts/"},{"name":"이차트","slug":"이차트","permalink":"https://dullyshin.github.io/tags/이차트/"},{"name":"echart","slug":"echart","permalink":"https://dullyshin.github.io/tags/echart/"},{"name":"echart 한글","slug":"echart-한글","permalink":"https://dullyshin.github.io/tags/echart-한글/"},{"name":"이차트 움직이기","slug":"이차트-움직이기","permalink":"https://dullyshin.github.io/tags/이차트-움직이기/"},{"name":"echarts moving","slug":"echarts-moving","permalink":"https://dullyshin.github.io/tags/echarts-moving/"},{"name":"echarts dynamic","slug":"echarts-dynamic","permalink":"https://dullyshin.github.io/tags/echarts-dynamic/"}]},{"title":"Echarts-차트에 클릭 이벤트 생성하기 01","slug":"Echarts-Event01","date":"2020-03-12T01:39:13.000Z","updated":"2020-03-12T06:33:04.776Z","comments":true,"path":"2020/03/12/Echarts-Event01/","link":"","permalink":"https://dullyshin.github.io/2020/03/12/Echarts-Event01/","excerpt":"","text":"Echarts-차트에 클릭 이벤트 생성하기 01차트에 클릭 이벤트를 생성해보자우선 차트의 클릭 이벤트를 만들기 위해 아래와 같이 사용할 수 있습니다.아래의 방법으로 params 에 무슨 값이 넘어오는지 확인 할 수 있습니다. 123456789101112131415161718192021222324252627// 준비된 돔에 Echarts 인스턴스를 생성합니다var myChart = echarts.init(document.getElementById(&apos;main&apos;));//차트의 데이터와 구성을 설정합니다var option = &#123; xAxis: &#123; data: [&quot;shirt&quot;,&quot;cardign&quot;,&quot;chiffon shirt&quot;,&quot;pants&quot;,&quot;heels&quot;,&quot;socks&quot;], axisLabel: &#123; //x축의 모든 데이터를 보여준다 interval: 0, &#125;, &#125;, yAxis: &#123;&#125;, series: [&#123; name: &apos;sales&apos;, type: &apos;bar&apos;, data: [5, 20, 36, 10, 10, 20] &#125;]&#125;;//위에서 준비한 option값을 myChart에 반영합니다.myChart.setOption(option);//차트를 클릭하면 새로운 창이 생성되며 naver search page로 이동합니다.myChart.on(&apos;click&apos;, function (params) &#123; window.open(&apos;https://search.naver.com/search.naver?sm=top_hty&amp;fbm=1&amp;ie=utf8&amp;query=&apos; + encodeURIComponent(params.name));&#125;); 위의 만들어진 차트의 붉은색 막대를 클릭하면 새로운 창이 생성되며 각 xAxis 데이터[&quot;shirt&quot;,&quot;cardign&quot;,&quot;chiffon shirt&quot;,&quot;pants&quot;,&quot;heels&quot;,&quot;socks&quot;]로 검색한 네이버 화면으로 보여집니다. 원하는 echart 속성에 이벤트 생성하기현재 이벤트는 차트의 시리즈(현재 위의 차트의 붉은색 막대바) 클릭하면 발생하는데 이를 원하는 지점만 클릭했을때 발생되는 것으로 변경할 수 있습니다. 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364// DOM을 준비하고 echart 객체를 만듭니다.var myChart = echarts.init(document.getElementById(&apos;click01&apos;));// 차트 속성과 데이터를 지정합니다.var option = &#123; title: &#123; text: &apos;ECharts 클릭 이벤트!&apos;, triggerEvent: true, &#125;, tooltip: &#123;&#125;, legend: &#123; data:[&apos;Sales&apos;] &#125;, xAxis: &#123; data: [&quot;shirt&quot;,&quot;cardign&quot;,&quot;chiffon shirt&quot;,&quot;pants&quot;,&quot;heels&quot;,&quot;socks&quot;], triggerEvent: true, axisLabel: &#123; //x축의 모든 데이터를 보여준다 interval: 0, &#125;, &#125;, yAxis: &#123; triggerEvent: true, &#125;, series: [&#123; name: &apos;Sales&apos;, type: &apos;bar&apos;, data: [5, 20, 36, 10, 10, 20], markLine:&#123; data:[&#123;yAxis: 12&#125;], label: &#123;show: false&#125;, symbol: &apos;none&apos;, lineStyle:&#123; type: &apos;solid&apos;, color : &apos;#eedd78&apos;, width : 5 &#125;, triggerEvent: true, &#125;, &#125;],&#125;;// 위에서 설정한 속성을 차트에 반영합니다.myChart.setOption(option);//클릭 이벤트를 생성합니다.myChart.on(&apos;click&apos;, function (params) &#123; if (params.componentType === &apos;markLine&apos;) &#123; alert(&apos;markLine을 클릭하였습니다.&apos;); &#125; else if (params.componentType === &apos;series&apos;) &#123; alert(&apos;series를 클릭하였습니다.&apos;); &#125; else if(params.componentType === &apos;xAxis&apos;)&#123; alert(&apos;xAxis 클릭하였습니다.&apos;); &#125; else if(params.componentType === &apos;yAxis&apos;)&#123; alert(&apos;yAxis 클릭하였습니다.&apos;); &#125; else if(params.componentType === &apos;title&apos;)&#123; alert(&apos;title 클릭하였습니다.&apos;); &#125;&#125;); triggerEvent: true를 사용하면 이벤트를 원하는 속성에 부여할 수 있습니다. 두번째 만들어진 차트를 클릭하면 차트의 componentType을 직관적으로 알 수 있습니다. (legend 범례를 클릭하는 이벤트는 echart에서 기본적으로 설정된 이벤트 입니다.) 위의 알려드린것을 바탕으로 하면 앞으로 차트에 이벤트를 생성하는 일이 쉽게 느껴질 것입니다! Reference https://echarts.apache.org/en/api.html#events Related Posts ECharts를 통해 5분안에 차트를 만들자! ECharts 바차트 색상 변경! ECharts를 통해 간단한 Heatmap 만들기! ECharts 최소 최대값 설정! // 준비된 돔에 Echarts 인스턴스를 생성합니다 var myChart = echarts.init(document.getElementById('click01')); //차트의 데이터와 구성을 설정합니다 var option = { xAxis: { data: [\"shirt\",\"cardign\",\"chiffon shirt\",\"pants\",\"heels\",\"socks\"], axisLabel: { interval: 0, }, }, yAxis: {}, series: [{ name: 'sales', type: 'bar', data: [5, 20, 36, 10, 10, 20] }] }; //위에서 준비한 option값을 myChart에 반영합니다. myChart.setOption(option); //차트를 클릭하면 새로운 창이 생성되며 naver search page로 이동합니다. myChart.on('click', function (params) { window.open('https://search.naver.com/search.naver?sm=top_hty&fbm=1&ie=utf8&query=' + encodeURIComponent(params.name)); }); // 차트 속성과 데이터를 지정합니다. var option02 = { title: { text: 'ECharts 클릭 이벤트!', triggerEvent: true, }, tooltip: {}, legend: { data:['Sales'] }, xAxis: { data: [\"shirt\",\"cardign\",\"chiffon shirt\",\"pants\",\"heels\",\"socks\"], triggerEvent: true, axisLabel: { interval: 0, }, }, yAxis: { triggerEvent: true, }, series: [{ name: 'Sales', type: 'bar', data: [5, 20, 36, 10, 10, 20], markLine:{ data:[{yAxis: 12}], label: {show: false}, symbol: 'none', lineStyle:{ type: 'solid', color : '#eedd78', width : 5 }, triggerEvent: true, }, }], }; var myChart02 = echarts.init(document.getElementById('click02')); myChart02.setOption(option02); myChart02.on('click', function (params) { if (params.componentType === 'markLine') { // 마크 라인을 클릭했을때 alert('markLine을 클릭하였습니다.'); } else if (params.componentType === 'series') { alert('series를 클릭하였습니다.'); } else if(params.componentType === 'xAxis'){ alert('xAxis 클릭하였습니다.'); } else if(params.componentType === 'yAxis'){ alert('yAxis 클릭하였습니다.'); } else if(params.componentType === 'title'){ alert('title 클릭하였습니다.'); } });","categories":[{"name":"Programming","slug":"Programming","permalink":"https://dullyshin.github.io/categories/Programming/"},{"name":"Echarts","slug":"Programming/Echarts","permalink":"https://dullyshin.github.io/categories/Programming/Echarts/"}],"tags":[{"name":"Echarts","slug":"Echarts","permalink":"https://dullyshin.github.io/tags/Echarts/"},{"name":"이차트","slug":"이차트","permalink":"https://dullyshin.github.io/tags/이차트/"},{"name":"echart","slug":"echart","permalink":"https://dullyshin.github.io/tags/echart/"},{"name":"echart 한글","slug":"echart-한글","permalink":"https://dullyshin.github.io/tags/echart-한글/"},{"name":"이차트 이벤트","slug":"이차트-이벤트","permalink":"https://dullyshin.github.io/tags/이차트-이벤트/"},{"name":"echarts event","slug":"echarts-event","permalink":"https://dullyshin.github.io/tags/echarts-event/"},{"name":"echarts click event","slug":"echarts-click-event","permalink":"https://dullyshin.github.io/tags/echarts-click-event/"}]},{"title":"Java-StringSplit2","slug":"Java-StringSplit2","date":"2020-01-06T02:05:36.000Z","updated":"2020-01-06T02:24:40.671Z","comments":true,"path":"2020/01/06/Java-StringSplit2/","link":"","permalink":"https://dullyshin.github.io/2020/01/06/Java-StringSplit2/","excerpt":"","text":"[Java1000제] 문자열 나누어 문제 출제하기 2 String[] split[Java1000제] String split 에서 완성된 코드에 사용자 입력을 받아서 정답여부를 판단하여 마지막에 최종점수를 실행결과와 같이 출력하도록 코드를 완성하세요. 문제1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071import java.util.*;class QuizEx2 &#123; public static void main(String[] args) &#123; String[] data = &#123; \"다음 중 키워드가 아닌 것은?`2`final`True`if`public\", \"다음 중 자바의 연산자가 아닌 것은?`6`&amp;`|`++`!=`/`^\", \"다음 중 메서드의 반환값이 없음을 의미하는 키워드는?`1`void`null`false`\", &#125;; Scanner s = new Scanner(System.in); int score = 0; for(int i=0;i &lt; data.length;i++) &#123; String[] tmp = data[i].split(\"`\",3); String question = tmp[0]; String answer = tmp[1]; String[] choices = tmp[2].split(\"`\"); System.out.println(\"[\"+(i+1)+\"] \"+question); for(int x=0;x &lt; choices.length;x++) &#123; System.out.print((x+1)+\".\"+choices[x]+\"\\t\"); &#125; System.out.println(); /* 알맞은 코드를 넣으세요. */ System.out.println(); System.out.println(); &#125; // 알맞은 코드를 넣으세요. &#125; // main&#125;[실행결과][1] 다음 중 키워드가 아닌 것은?1.final 2.True 3.if 4.public[답]2[2] 다음 중 자바의 연산자가 아닌 것은?1.&amp; 2.| 3.++ 4.!= 5./ 6.^[답]6[3] 다음 중 메서드의 반환값이 없음을 의미하는 키워드는?1.void 2.null 3.false[답]1정답개수/전체문항수 :3/3 해답12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849import java.util.Scanner;public class MainStudy &#123; public static void main(String[] args) &#123; String[] data = &#123; \"다음 중 키워드가 아닌 것은?`2`final`True`if`public\", \"다음 중 자바의 연산자가 아닌 것은?`5`&amp;`|`++`!=`/`^\", \"다음 중 메서드의 반환값이 없음을 의미하는 키워드는?`1`void`null`false\", &#125;; // 총 점수를 저장할 변수를 선언한다. int score = 0; for(int i=0;i&lt;data.length;i++) &#123; // 1. 문제, 정답, 선택지로 나눕니다 String[] tmp = data[i].split(\"`\", 3); String question = tmp[0]; String answer = tmp[1]; String[] choices = tmp[2].split(\"`\"); // 2. 문제를 출력합니다. System.out.println(\"[\"+(i+1)+\"] \"+question); // 3.반복문을 이용해서 선택지를 출력하세요. for (int j = 0; j &lt; choices.length; j++) &#123; System.out.print(j+1+\". \"+choices[j]+ \"\\t\"); &#125; // 4.사용자의 정답을 입력받는다. Scanner scan = new Scanner(System.in); System.out.println(); System.out.print(\"[답]\"); String _answer = scan.nextLine(); //정답을 맟추면 score 점수가 1 증가한다. if(answer.equals(_answer)) &#123; score++; &#125; scan.close(); System.out.println(); System.out.println(); &#125; System.out.println(\"정답개수/전체문항수 :\" + score + \"/\" + data.length); &#125; // main&#125; 문제를 풀어가면서 점점 자바가 친숙해져 가네요! 앞으로도 계속 문제를 풀어나가도록 하겠습니다! Reference https://cafe.naver.com/javachobostudy Related Posts [Java1000제] Word Scramble3 [Java1000제] Word Scramble2 [Java1000제] Word Scramble [Java1000제] String split","categories":[{"name":"Programming","slug":"Programming","permalink":"https://dullyshin.github.io/categories/Programming/"},{"name":"JAVA","slug":"Programming/JAVA","permalink":"https://dullyshin.github.io/categories/Programming/JAVA/"}],"tags":[{"name":"자바 문제풀이","slug":"자바-문제풀이","permalink":"https://dullyshin.github.io/tags/자바-문제풀이/"},{"name":"자바 기초","slug":"자바-기초","permalink":"https://dullyshin.github.io/tags/자바-기초/"},{"name":"자바 문제","slug":"자바-문제","permalink":"https://dullyshin.github.io/tags/자바-문제/"},{"name":"자바 입력","slug":"자바-입력","permalink":"https://dullyshin.github.io/tags/자바-입력/"},{"name":"char 비교 자바","slug":"char-비교-자바","permalink":"https://dullyshin.github.io/tags/char-비교-자바/"},{"name":"java string split","slug":"java-string-split","permalink":"https://dullyshin.github.io/tags/java-string-split/"},{"name":"string[] split","slug":"string-split","permalink":"https://dullyshin.github.io/tags/string-split/"},{"name":"정규표현식","slug":"정규표현식","permalink":"https://dullyshin.github.io/tags/정규표현식/"}]},{"title":"[Java1000제] String split","slug":"Java-StringSplit","date":"2020-01-02T05:23:52.000Z","updated":"2020-01-02T05:39:01.619Z","comments":true,"path":"2020/01/02/Java-StringSplit/","link":"","permalink":"https://dullyshin.github.io/2020/01/02/Java-StringSplit/","excerpt":"","text":"[Java1000제] 문자열 나누어 문제 출제하기 String[] split이번에는 String[] split을 사용하여 주어진 문자열을 나누어 원하는대로 출력하는 문제를 풀 것 입니다. 아래에서 문제를 확인하시죠. 문제123456789101112131415161718192021222324252627282930313233343536373839[문제1] 주어진 문자열 데이터를 가지고 실행결과와 같이 출력되도록 코드를 완성하세요. 데이터의 형식은 문제, 답, 선택지의 순서로 되어 있으며 구분자는 `(숫자1옆의 키)입니다.[예제QuizEx1.java]class QuizEx1 &#123; public static void main(String[] args) &#123; String[] data = &#123; \"다음 중 키워드가 아닌 것은?`2`final`True`if`public\", \"다음 중 자바의 연산자가 아닌 것은?`5`&amp;`|`++`!=`/`^\", \"다음 중 메서드의 반환값이 없음을 의미하는 키워드는?`1`void`null`false\", &#125;; for(int i=0;i&lt;data.length;i++) &#123; // 1. String클래스의 String[] split(String regex, int limit)를 사용해서 문제와 선택지를 나누세요. // 2. 문제를 출력하세요. // 3. 선택지를 나누기 위해 String[] split(String regex)를 사용하세요. // 4.반복문을 이용해서 선택지를 출력하세요. &#125; &#125; // main&#125;[실행결과][1] 다음 중 키워드가 아닌 것은?1.final 2.True 3.if 4.public[2] 다음 중 자바의 연산자가 아닌 것은?1.&amp; 2.| 3.++ 4.!= 5./ 6.^[3] 다음 중 메서드의 반환값이 없음을 의미하는 키워드는?1.void 2.null 3.false 문제 해결아래의 해답은 main 메소드만 가져왔습니다. 1234567891011121314151617181920212223242526public static void main(String[] args) &#123; String[] data = &#123; \"다음 중 키워드가 아닌 것은?`2`final`True`if`public\", \"다음 중 자바의 연산자가 아닌 것은?`5`&amp;`|`++`!=`/`^\", \"다음 중 메서드의 반환값이 없음을 의미하는 키워드는?`1`void`null`false\", &#125;; for(int i=0;i&lt;data.length;i++) &#123; // 1. String클래스의 String[] split(String regex, int limit)를 사용해서 문제와 선택지를 나누세요. String[] question = data[i].split(\"`\", 3); // 2. 문제를 출력하세요. System.out.println(\"[\"+(i+1)+\"] \"+question[0]); // 3. 선택지를 나누기 위해 String[] split(String regex)를 사용하세요. String[] answer_col = question[2].split(\"`\"); // 4.반복문을 이용해서 선택지를 출력하세요. for (int j = 0; j &lt; answer_col.length; j++) &#123; System.out.print(j+1+\". \"+answer_col[j]+ \" \"); &#125; System.out.println(); System.out.println(); &#125; &#125; // main 혼자서 끙끙거리면서 풀다보면 언젠가 자바를 편하게 대하는 날이 오겠죠!다 같이 힘내자구요! Reference https://cafe.naver.com/javachobostudy Related Posts [Java1000제] Word Scramble3 [Java1000제] Word Scramble2 [Java1000제] Word Scramble","categories":[{"name":"Programming","slug":"Programming","permalink":"https://dullyshin.github.io/categories/Programming/"},{"name":"JAVA","slug":"Programming/JAVA","permalink":"https://dullyshin.github.io/categories/Programming/JAVA/"}],"tags":[{"name":"자바 문제풀이","slug":"자바-문제풀이","permalink":"https://dullyshin.github.io/tags/자바-문제풀이/"},{"name":"자바 기초","slug":"자바-기초","permalink":"https://dullyshin.github.io/tags/자바-기초/"},{"name":"자바 문제","slug":"자바-문제","permalink":"https://dullyshin.github.io/tags/자바-문제/"},{"name":"자바 입력","slug":"자바-입력","permalink":"https://dullyshin.github.io/tags/자바-입력/"},{"name":"char 비교 자바","slug":"char-비교-자바","permalink":"https://dullyshin.github.io/tags/char-비교-자바/"},{"name":"java string split","slug":"java-string-split","permalink":"https://dullyshin.github.io/tags/java-string-split/"},{"name":"string[] split","slug":"string-split","permalink":"https://dullyshin.github.io/tags/string-split/"},{"name":"정규표현식","slug":"정규표현식","permalink":"https://dullyshin.github.io/tags/정규표현식/"}]},{"title":"[Java1000제] Word Scramble3","slug":"Java-ScrambleWord3","date":"2019-12-26T00:41:51.000Z","updated":"2020-01-02T05:42:54.154Z","comments":true,"path":"2019/12/26/Java-ScrambleWord3/","link":"","permalink":"https://dullyshin.github.io/2019/12/26/Java-ScrambleWord3/","excerpt":"","text":"[Java 1000제] Word Scramble 단어 맞추기3[Java1000제] Word Scramble2에서 배운것을 바탕으로해서 심화 문제를 풀어보겠습니다. 문제문제2의 예제를 변경해서, 문제를 맞추더라도 프로그램이 종료되지 않고 다음문제를 보여주도록 하세요. 1234567891011121314151617181920212223242526272829303132333435import java.util.*;class WordScrambleEx3 &#123; public static void main(String[] args) &#123; String[] strArr = &#123; \"CHANGE\", \"LOVE\", \"HOPE\", \"VIEW\"&#125;; // 코드를 넣어 완성하세요. // hint : while문을 중첩해서(2개의 while문) 작성하세요. &#125; // main public static String getAnswer(String[] strArr) &#123; int idx = (int)(Math.random()*strArr.length); return strArr[idx]; &#125; public static String getScrambledWord(String str) &#123; char[] chArr = str.toCharArray(); for(int i=0;i &lt; str.length();i++) &#123; int idx = (int)(Math.random()*str.length()); char tmp = chArr[i]; chArr[i] = chArr[idx]; chArr[idx] = tmp; &#125; return new String(chArr); &#125; // scramble(String str)&#125; 해답이전에 만들어 놓은 해답을 가지고 계속 변형하니깐 재미있네요. 이미 존재하는 코드를 수정해야해서 새로 시작하는 것보다 고민이 더 많은것 같아요.다음에는 어떤 문제가 나올지 기대되네요. 아래의 답을 보시고 더 좋은 방법이 있다면 댓글로 남겨주세요! 메인함수만 아래에 작성하였습니다. 참고 부탁드려요! 12345678910111213141516171819202122232425262728293031323334353637383940414243public static void main(String[] args) &#123; String[] strArr = &#123;\"CHANGE\", \"LOVE\", \"HOPE\", \"VIEW\"&#125;; String answer = getAnswer(strArr); String question = getScrambledWord(answer); while(true) &#123; String _answer; Scanner sc = new Scanner(System.in); while(true) &#123; // 1. 문제를 제시한다 System.out.println(\"Question :\" + question); System.out.print(\"Your answer is :\"); // 2. 화면을 통해 사용자의 입력을 받는다.(Scanner클래스 사용) _answer = sc.next().toUpperCase(); _answer = _answer.replaceAll(\" \", \"\"); // 3. 사용자가 q 또는 Q를 입력하면 프로그램을 종료한다. if(_answer.equals(\"Q\"))&#123; sc.close(); //입력 프로그램 종료 System.exit(0); &#125; if(answer.equals( _answer)) &#123; // 4. 맞추면 새로운 문제를 만든다 System.out.println(\"정답은 \"+ _answer +\"!!!\"); System.out.println(\"정답 입니다!!\"); answer = getAnswer(strArr); question = getScrambledWord(answer); break; &#125;else&#123; // 5. 틀리면 계속 문제를 반복해 푼다 System.out.println( _answer +\" 정답이 아닙니다. 다시 시도해보세요.\"); &#125; &#125;//while &#125; //Outer while &#125; // main 감사합니다! 더 좋은 해결 방법이 있다면 댓글 부탁드려요! Reference https://cafe.naver.com/javachobostudy 남궁성의 코드초보스터디 Related Posts [Java1000제] Word Scramble [Java1000제] Word Scramble2","categories":[{"name":"Programming","slug":"Programming","permalink":"https://dullyshin.github.io/categories/Programming/"},{"name":"JAVA","slug":"Programming/JAVA","permalink":"https://dullyshin.github.io/categories/Programming/JAVA/"}],"tags":[{"name":"자바 문제풀이","slug":"자바-문제풀이","permalink":"https://dullyshin.github.io/tags/자바-문제풀이/"},{"name":"자바 기초","slug":"자바-기초","permalink":"https://dullyshin.github.io/tags/자바-기초/"},{"name":"자바 문제","slug":"자바-문제","permalink":"https://dullyshin.github.io/tags/자바-문제/"},{"name":"자바 입력","slug":"자바-입력","permalink":"https://dullyshin.github.io/tags/자바-입력/"},{"name":"while 문","slug":"while-문","permalink":"https://dullyshin.github.io/tags/while-문/"},{"name":"자바 단어 맞추기","slug":"자바-단어-맞추기","permalink":"https://dullyshin.github.io/tags/자바-단어-맞추기/"}]},{"title":"[Java1000제] Word Scramble4","slug":"Java-ScrambleWord4","date":"2019-12-26T00:41:51.000Z","updated":"2020-01-02T07:28:45.483Z","comments":true,"path":"2019/12/26/Java-ScrambleWord4/","link":"","permalink":"https://dullyshin.github.io/2019/12/26/Java-ScrambleWord4/","excerpt":"","text":"[Java1000제] Word Scramble4[Java1000제] Word Scramble3 에서 더욱 심화되어 문제 풀이를 진행해 봅시다. 이전의 문제들은 틀렸을때 아무런 힌트도 주지 않아 아쉬웠는데, 이번 문제에서는 한번 틀릴때 마다 한 글자씩 보여주어 힌트를 주어야 합니다.문제가 기존의 문제를 더 좋은 방향으로 변경하는 방향이라 재미있네요! 문제123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114import java.util.*;class WordScrambleEx4 &#123; public static void main(String[] args) &#123; String[] strArr = &#123; \"CHANGE\", \"LOVE\", \"HOPE\", \"VIEW\"&#125;; Scanner s = new Scanner(System.in); // 한번 생성해 놓고 재사용하면 되므로 반복문 밖으로 이동 while(true) &#123; String answer = getAnswer(strArr); String question = getScrambledWord(answer); char[] hint = new char[answer.length()]; // hint를 '_'로 초기화 한다. 정답이 LOVE라면 hint는 \"____\"이 된다. for(int i=0;i &lt; hint.length;i++) &#123; hint[i] = '_'; &#125; while(true) &#123; System.out.println(\"Question :\" + question); System.out.print(\"Your answer is :\"); String input = s.nextLine(); if(input.equalsIgnoreCase(\"q\")) System.exit(0); if(input.equalsIgnoreCase(answer)) &#123; System.out.println(\"정답입니다.\"); System.out.println(); break; &#125; else &#123; System.out.println(input+\"은/는 정답이 아닙니다. 다시 시도해보세요.\"); System.out.println(\"Hint:\"+getHint(answer,hint)); &#125; &#125; // while &#125; // outer while &#125; // main public static String getAnswer(String[] strArr) &#123; int idx = (int)(Math.random()*strArr.length); return strArr[idx]; &#125; // 섞은 결과가 정답과 같은경우도 있을 수 있음. 복잡하지 않게... 그냥 간단히 public static String getScrambledWord(String str) &#123; char[] chArr = str.toCharArray(); for(int i=0;i&lt;chArr.length;I++) int idx = (int)(Math.random()*str.length()); char tmp = chArr[i]; chArr[i] = chArr[idx]; chArr[idx] = tmp; &#125; return new String(chArr); &#125; // scramble(String str) public static String getHint(String answer, char[] hint) &#123; int count = 0; // 힌트에 포함된 '_'의 개수 // 1. 반복문을 이용해서 hint에 포함된 '_'의 개수를 센다. // 2. count의 값이 2보다 클 때만 정답의 한 글자를 hint에 넣는다. // 정답을 다 알려주는 상황이 되지 않게 하기 위함. // [주의] 반드시 이전 힌트 보다 한글자를 더 보여줘야함. // 예를 들어 정답이 \"LOVE\"이고 이전 힌트가 \"L___\"이었다면 // 그 다음 힌트는 \"L__E\"또는 \"L_V_\" 와 같은 식이어야 한다. // Math.random()을 사용해서 정답의 한 글자를 골라서 힌트에 넣으면 된다. &#125; // getHint()&#125;[실행결과]Question :HEANGCYour answer is :chanegchaneg은/는 정답이 아닙니다. 다시 시도해보세요.Hint:__A___Question :HEANGCYour answer is :chancechance은/는 정답이 아닙니다. 다시 시도해보세요.Hint:__A_G_Question :HEANGCYour answer is :hcangehcange은/는 정답이 아닙니다. 다시 시도해보세요.Hint:__ANG_Question :HEANGCYour answer is :hangehange은/는 정답이 아닙니다. 다시 시도해보세요.Hint:C_ANG_Question :HEANGCYour answer is :ceangeceange은/는 정답이 아닙니다. 다시 시도해보세요.Hint:C_ANG_Question :HEANGCYour answer is :change정답입니다.Question :VEIWYour answer is :q 위의 문제를 보면 틀릴 때 마다 힌트를 주는데 언더바 개수가 2보다 클 경우에만 힌트를 주도록 되어 있어서 정답을 전부 알려주는 일이 벌어지지 않습니다. 오늘은 모든 코드를 아래에 첨부하겠습니다. 문제풀이123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106public class MainStudy &#123; public static void main(String[] args) &#123; String[] strArr = &#123;\"CHANGE\", \"LOVE\", \"HOPE\", \"VIEW\"&#125;; while(true) &#123; String answer = getAnswer(strArr); String question = getScrambledWord(answer); char[] hint = new char[answer.length()]; // hint를 '_'로 초기화 한다. 정답이 LOVE라면 hint는 \"____\"이 된다. for(int i=0;i &lt; hint.length;i++) &#123; hint[i] = '_'; &#125; while(true) &#123; System.out.println(\"Question :\" + question); System.out.print(\"Your answer is :\"); Scanner sc = new Scanner(System.in); String _answer = sc.next().toUpperCase(); //사용자가 입력한 정답 _answer = _answer.replaceAll(\" \", \"\"); if(_answer.equals(\"Q\"))&#123; sc.close(); //입력 프로그램 종료 System.exit(0); &#125; if(answer.equals( _answer)) &#123; System.out.println(\"정답은 \"+ _answer +\"!!!\"); answer = getAnswer(strArr); question = getScrambledWord(answer); break; &#125;else&#123; // 5. 틀리면 계속 문제를 반복해 푼다 System.out.println( _answer +\" 정답이 아닙니다. 다시 시도해보세요.\"); System.out.println(\"Hint:\"+getHint(answer, hint)); &#125; &#125;//while &#125;//OuterWhile &#125; // main private static String getHint(String answer, char[] hint) &#123; int count = 0; // 힌트에 포함된 '_'의 개수 // 1. 반복문을 이용해서 hint에 포함된 '_'의 개수를 센다. for (int i = 0; i &lt; hint.length; i++) &#123; if(hint[i] == '_') &#123; count++; &#125; &#125; // 2. count의 값이 2보다 클 때만 정답의 한 글자를 hint에 넣는다. // 정답을 다 알려주는 상황이 되지 않게 하기 위함. if(count &gt; 2) &#123; while(true) &#123; // Math.random()을 사용해서 정답의 한 글자를 골라서 힌트에 넣으면 된다. int idx = (int)(Math.random() * answer.length()); // [주의] 반드시 이전 힌트 보다 한글자를 더 보여줘야함. // 예를 들어 정답이 \"LOVE\"이고 이전 힌트가 \"L___\"이었다면 // 그 다음 힌트는 \"L__E\"또는 \"L_V_\" 와 같은 식이어야 한다. if(hint[idx] == '_') &#123; hint[idx] = answer.charAt(idx); break; &#125; &#125;//while &#125; return new String(hint); &#125; // getHint() public static String getAnswer(String[] strArr) &#123; Random ran = new Random(); String answer = strArr[ran.nextInt(strArr.length -1)+1]; return answer; &#125; public static String getScrambledWord(String str) &#123; char[] chArr = str.toCharArray(); while(true) &#123; for (int i = 0; i &lt; chArr.length; i++) &#123; int idx = (int)(Math.random()* str.length()); char tmp = chArr[0]; chArr[0] = chArr[idx]; chArr[idx] = tmp; &#125; //확인 후 while문에서 나옴 if(!((new String(chArr)).equals(str))) &#123; break; &#125; &#125;//while return new String(chArr); &#125;&#125; 저는 위와 같이 생각하였는데 만약 더 좋은 방법이 있다면 댓글로 알려주세요!감사합니다. Reference https://cafe.naver.com/javachobostudy Related Posts [Java1000제] Word Scramble3 [Java1000제] Word Scramble2 [Java1000제] Word Scramble","categories":[{"name":"Programming","slug":"Programming","permalink":"https://dullyshin.github.io/categories/Programming/"},{"name":"JAVA","slug":"Programming/JAVA","permalink":"https://dullyshin.github.io/categories/Programming/JAVA/"}],"tags":[{"name":"자바 문제풀이","slug":"자바-문제풀이","permalink":"https://dullyshin.github.io/tags/자바-문제풀이/"},{"name":"자바 기초","slug":"자바-기초","permalink":"https://dullyshin.github.io/tags/자바-기초/"},{"name":"자바 문제","slug":"자바-문제","permalink":"https://dullyshin.github.io/tags/자바-문제/"},{"name":"자바 입력","slug":"자바-입력","permalink":"https://dullyshin.github.io/tags/자바-입력/"},{"name":"char 비교 자바","slug":"char-비교-자바","permalink":"https://dullyshin.github.io/tags/char-비교-자바/"}]},{"title":"[Java1000제] Word Scramble2","slug":"Java-ScrambleWord2","date":"2019-12-24T06:53:54.000Z","updated":"2020-01-02T05:42:06.963Z","comments":true,"path":"2019/12/24/Java-ScrambleWord2/","link":"","permalink":"https://dullyshin.github.io/2019/12/24/Java-ScrambleWord2/","excerpt":"","text":"[Java 1000제] Word Scramble 단어 맞추기2[Java1000제] Word Scramble에서 간단하게 배운것을 바탕으로해서 심화 문제를 풀어보겠습니다. 이전 문제에서는 문제와 답을 다 알려주었는데, 사용자가 답을 입력하고 답을 받는것을 해보겠습니다. 문제123456789101112131415161718192021222324252627282930313233343536373839404142434445class WordScrambleEx2 &#123; public static void main(String[] args) &#123; String[] strArr = &#123; \"CHANGE\", \"LOVE\", \"HOPE\", \"VIEW\"&#125;; String answer = getAnswer(strArr); String question = getScrambledWord(answer); while(true) &#123; System.out.println(\"Question :\" + question); System.out.print(\"Your answer is :\"); // 1. 화면을 통해 사용자의 입력을 받는다.(Scanner클래스 사용) // 2. 사용자가 q 또는 Q를 입력하면 프로그램을 종료한다. // 3. 사용자가 정답을 맞출때까지 반복하다가 // 사용자가 정답을 맞추면, while문을 빠져나간다. &#125; // while &#125; // main public static String getAnswer(String[] strArr) &#123; int idx = (int)(Math.random()*strArr.length); return strArr[idx]; &#125; public static String getScrambledWord(String str) &#123; char[] chArr = str.toCharArray(); for(int i=0;i&lt;str.length();i++) &#123; int idx = (int)(Math.random()*str.length()); char tmp = chArr[i]; chArr[i] = chArr[idx]; chArr[idx] = tmp; &#125; return new String(chArr); &#125; // scramble(String str)&#125; 문제 해답저는 정답을 아래와 같이 작성하였습니다! main 함수만 수정하였습니다. 1234567891011121314151617181920212223242526272829303132333435public static void main(String[] args) &#123; String[] strArr = &#123; \"CHANGE\", \"LOVE\", \"HOPE\", \"VIEW\"&#125;; String answer = getAnswer(strArr); String question = getScrambledWord(answer); while(true) &#123; System.out.println(\"Question :\" + question); System.out.print(\"Your answer is :\"); Scanner sc = new Scanner(System.in); String _answer; // 1. 화면을 통해 사용자의 입력을 받는다.(Scanner클래스 사용) _answer = sc.next().toUpperCase(); // 사용자가 정답을 맞추면, while문을 빠져나간다. if(answer.equals( _answer)) &#123; System.out.println(\"정답은 \"+ _answer +\"!!!\"); System.out.println(\"정답 입니다!! BYE~BYE~\"); sc.close(); //입력 프로그램 종료 break; // 2. 사용자가 q 또는 Q를 입력하면 프로그램을 종료한다. &#125;else if(_answer.equals(\"Q\"))&#123; sc.close(); //입력 프로그램 종료 System.out.println(\"Q를 입력하여 종료됩니다. GG\"); break; // 3. 사용자가 정답을 맞출때까지 반복하다가 &#125;else &#123; System.out.println( _answer +\" 정답이 아닙니다. 다시 시도해보세요.\"); &#125; &#125; // while&#125; // main 해결하였습니다. 더욱 좋은 방법이 있다면 댓글로 알려주시길 바랍니다! via GIPHY Reference https://cafe.naver.com/javachobostudy Related Posts [Java1000제] Word Scramble JavaScript-array","categories":[{"name":"Programming","slug":"Programming","permalink":"https://dullyshin.github.io/categories/Programming/"},{"name":"JAVA","slug":"Programming/JAVA","permalink":"https://dullyshin.github.io/categories/Programming/JAVA/"}],"tags":[{"name":"자바 문제풀이","slug":"자바-문제풀이","permalink":"https://dullyshin.github.io/tags/자바-문제풀이/"},{"name":"자바 기초","slug":"자바-기초","permalink":"https://dullyshin.github.io/tags/자바-기초/"},{"name":"자바 문제","slug":"자바-문제","permalink":"https://dullyshin.github.io/tags/자바-문제/"},{"name":"자바 입력","slug":"자바-입력","permalink":"https://dullyshin.github.io/tags/자바-입력/"}]},{"title":"[Java1000제] Word Scramble","slug":"Java-ScrambleWord","date":"2019-12-24T02:07:07.000Z","updated":"2020-01-02T05:41:25.635Z","comments":true,"path":"2019/12/24/Java-ScrambleWord/","link":"","permalink":"https://dullyshin.github.io/2019/12/24/Java-ScrambleWord/","excerpt":"","text":"[Java 1000제] Word Scramble 단어 맞추기 자바 공부의 필요성을 절실하게 느끼고 있는 요즘입니다… 저는 자바 스크립트가 더 편하게 느껴져서 자바를 소홀하게 대했습니다.. ㅠㅠ이제라도 하나씩 공부해 나가겠습니다! via GIPHY 문제는 남궁성의 코드초보스터디에서 가져온 문제입니다. 혹시 문제된다면 삭제할테니 알려주세요. 문제getAnswer(String[] strArr)는 배열strArr의 요소중의 하나를 임의로 골라서 반환한다.(Math.random()사용) getScrambledWord(String str)는 주어진 문자열 str의 각 문자의 순서를 뒤섞은 다음, 새로운 문자열로 반환한다. 12345678910111213141516171819202122232425262728class WordScrambleEx1 &#123; public static void main(String[] args) &#123; String[] strArr = &#123; \"CHANGE\", \"LOVE\", \"HOPE\", \"VIEW\"&#125;; String answer = getAnswer(strArr); String question = getScrambledWord(answer); System.out.println(\"Question:\"+question); System.out.println(\"Answer:\"+answer); &#125; // main public static String getAnswer(String[] strArr) &#123; // 내용을 완성하세요. &#125; public static String getScrambledWord(String str) &#123; // 내용을 완성하세요. &#125; // scramble(String str)&#125;[실행결과]Question:HEPOAnswer:HOPE 랜덤으로 값을 선정하기때문에 결과가 다를 수 있습니다. 문제 풀이12345678910111213141516171819202122232425262728293031323334353637383940class WordScrambleEx1 &#123; public static void main(String[] args) &#123; String[] strArr = &#123; \"CHANGE\", \"LOVE\", \"HOPE\", \"VIEW\"&#125;; String answer = getAnswer(strArr); String question = getScrambledWord(answer); System.out.println(\"Question:\"+question); System.out.println(\"Answer:\"+answer); &#125; // main //문제의 답을 랜덤하게 선정하는 함수 public static String getAnswer(String[] strArr) &#123; Random ran = new Random(); String answer = strArr[ran.nextInt(strArr.length -1)+1]; return answer; &#125; //답의 단어를 섞는 함수 public static String getScrambledWord(String str) &#123; List&lt;Character&gt; characters = new ArrayList&lt;Character&gt;(); //문자 하나씩 배열에 넣음 for(char c : str.toCharArray()) &#123; characters.add(c); &#125; StringBuilder output = new StringBuilder(str.length()); //output에 랜덤하게 append 한다 while(characters.size() != 0) &#123; int randPicker = (int)(Math.random()*characters.size()); output.append(characters.remove(randPicker)); &#125; return output.toString(); &#125;&#125; 저는 위와 같이 해답을 생각했었습니다.하지만 남궁성님은 getScrambledWord 함수를 아래와 같이 만들었습니다. 1234567891011121314151617public static String getScrambledWord(String str) &#123; char[] chArr = str.toCharArray(); for(int i=0;i&lt;str.length();i++) &#123; int idx = (int)(Math.random()*str.length()); //tmp에 임시로 값을 지정한 후에 char tmp = chArr[i]; //값을 섞어 사용합니다. chArr[i] = chArr[idx]; chArr[idx] = tmp; &#125; return new String(chArr);&#125; 제가 생각했을때는 제가 생각한 해결책보다 간단하게 접근하시고, 더 쉽게 만들어진 것 같습니다.저도 for문을 알고 있었는데 너무 어렵게 접근한것 같아요… Reference https://cafe.naver.com/javachobostudy Related Posts Java-약수 구하기 JavaScript-array [Java1000제] Word Scramble2 [Java1000제] Word Scramble3","categories":[{"name":"Programming","slug":"Programming","permalink":"https://dullyshin.github.io/categories/Programming/"},{"name":"JAVA","slug":"Programming/JAVA","permalink":"https://dullyshin.github.io/categories/Programming/JAVA/"}],"tags":[{"name":"자바 문제풀이","slug":"자바-문제풀이","permalink":"https://dullyshin.github.io/tags/자바-문제풀이/"},{"name":"자바 기초","slug":"자바-기초","permalink":"https://dullyshin.github.io/tags/자바-기초/"},{"name":"자바 문제","slug":"자바-문제","permalink":"https://dullyshin.github.io/tags/자바-문제/"},{"name":"자바 랜덤","slug":"자바-랜덤","permalink":"https://dullyshin.github.io/tags/자바-랜덤/"}]},{"title":"Java-약수 구하기","slug":"Java-divisor","date":"2019-12-23T07:54:59.000Z","updated":"2020-01-02T05:55:30.945Z","comments":true,"path":"2019/12/23/Java-divisor/","link":"","permalink":"https://dullyshin.github.io/2019/12/23/Java-divisor/","excerpt":"","text":"자바 약수 구하기프로그래머스 스킬체크 테스트 LEVEL.1 정수 n을 입력받아 n의 약수를 모두 더한 값을 리턴하는 함수, solution을 완성해주세요. 제한 사항 n은 0 이상 3000이하인 정수입니다. 입출력 예 n return 12 28 5 6 입출력 예 설명 입출력 예 #112의 약수는 1, 2, 3, 4, 6, 12입니다. 이를 모두 더하면 28입니다. 입출력 예 #25의 약수는 1, 5입니다. 이를 모두 더하면 6입니다. 문제풀이for 문을 사용하여 약수를 찾고 문제의 답을 계속 더해나가면 되겠다고 생각했습니다.(약수는 %로 나누었을때 0으로 결과가 나옵니다. 약수는 0보다 큰 수 입니다.) 위의 생각을 조합하여 아래의 함수를 완성하였습니다. 12345678910111213141516class Solution &#123; public int solution(int n) &#123; int answer = 0; int divisor; //약수 //약수 구하기 for(divisor = 1; divisor &lt;= n ; divisor++)&#123; //나눈 값이 0이면 약수 if((n % divisor) == 0)&#123; answer = answer + divisor; &#125; &#125; return answer; &#125;&#125; 위와 같은 방법이 아닌 좀 더 나은 방법이 있다면 공유 부탁드립니다. Reference https://programmers.co.kr/skill_checks/80316 Related Posts JavaScript-array (JavaScript) 삼항 연산자 Ternary Operator","categories":[{"name":"Programming","slug":"Programming","permalink":"https://dullyshin.github.io/categories/Programming/"},{"name":"JAVA","slug":"Programming/JAVA","permalink":"https://dullyshin.github.io/categories/Programming/JAVA/"}],"tags":[{"name":"자바 문제풀이","slug":"자바-문제풀이","permalink":"https://dullyshin.github.io/tags/자바-문제풀이/"},{"name":"자바 기초","slug":"자바-기초","permalink":"https://dullyshin.github.io/tags/자바-기초/"},{"name":"자바 문제","slug":"자바-문제","permalink":"https://dullyshin.github.io/tags/자바-문제/"},{"name":"java 약수 구하기","slug":"java-약수-구하기","permalink":"https://dullyshin.github.io/tags/java-약수-구하기/"},{"name":"약수","slug":"약수","permalink":"https://dullyshin.github.io/tags/약수/"},{"name":"자바 약수","slug":"자바-약수","permalink":"https://dullyshin.github.io/tags/자바-약수/"},{"name":"프로그래머스 문제","slug":"프로그래머스-문제","permalink":"https://dullyshin.github.io/tags/프로그래머스-문제/"}]},{"title":"[jQuery] jQuery를 사용해 쿠키관리하기 (읽기, 생성, 삭제, 생명주기)","slug":"WEB-CookiesMakeDel","date":"2019-09-10T05:05:00.000Z","updated":"2019-11-28T02:29:55.687Z","comments":true,"path":"2019/09/10/WEB-CookiesMakeDel/","link":"","permalink":"https://dullyshin.github.io/2019/09/10/WEB-CookiesMakeDel/","excerpt":"","text":"만약 쿠키에 대해 잘 모르거나 헷갈리신다면 [WEB] 쿠키와 세션을 간단하게 알아보자를 참고해주세요!쿠키와 세션을 쉽게 이해할 수 있습니다. 간단하게 설명하자면! 쿠키는 클라이언트(브라우저) 로컬에 저장되는 키와 값이 들어있는 작은 데이터 파일입니다. 사용자 인증이 유효한 시간을 명시할 수 있으며, 유효 시간이 정해지면 브라우저가 종료되어도 인증이 유지된다는 특징이 있습니다. 쿠키 생성 삭제하기 [jQuery] 다운로드 및 설치 방법 를 통해 jquery를 다운 받습니다. https://plugins.jquery.com/cookie/ jQuery Cookie 플러그인을 다운 받습니다. 다운로드 받은 js 파일을 페이지에 포함 시킵니다. jquery 플러그인 이므로 jquery 도 있어야 합니다. 12&lt;script type=&quot;text/javascript&quot; src=&quot;https://code.jquery.com/jquery-1.12.4.min.js&quot;&gt;&lt;/script&gt;&lt;script type=&quot;text/javascript&quot; src=&quot;./jquery.cookie.js&quot;&gt;&lt;/script&gt; 쿠키 만들기 12345678// 세션 쿠키 생성 - 브라우저를 닫으면 없으집니다.$.cookie(&apos;name&apos;, &apos;value&apos;);// 7일 뒤에 만료되는 쿠키 생성$.cookie(&apos;name&apos;, &apos;value&apos;, &#123; expires: 7 &#125;);// 전체 사이트에 대해 7일 뒤에 만료되는 쿠키 생성$.cookie(&apos;name&apos;, &apos;value&apos;, &#123; expires: 7, path: &apos;/&apos; &#125;); 쿠키 읽기 12345678// 키로 사용한 이름으로 값을 읽습니다.// 키로 저장된 값이 없으면 undefined 가 반환됩니다.$.cookie(&apos;name&apos;); // =&gt; &quot;value&quot;$.cookie(&apos;nothing&apos;); // =&gt; undefined// 모든 쿠키 읽기// 모든 쿠키를 &#123; &quot;name&quot;: &quot;value&quot; &#125; 형태의 객체로 반환합니다.$.cookie(); // =&gt; &#123; &quot;name&quot;: &quot;value&quot; &#125; 쿠키 삭제하기 12345678910111213// 성공적으로 삭제되면 true 를 반환하고, 삭제 못했을때는 false를 반환합니다.$.removeCookie(&apos;name&apos;); // =&gt; true$.removeCookie(&apos;nothing&apos;); // =&gt; false// 쿠키 삭제시 생성할때 와 같은 path와 domain 을 사용해야 합니다.// 아래와 같이 생성했다면,$.cookie(&apos;name&apos;, &apos;value&apos;, &#123; path: &apos;/&apos; &#125;);// 이렇게 삭제할 수 없습니다.$.removeCookie(&apos;name&apos;); // =&gt; false// 이렇게 삭제해야 합니다.$.removeCookie(&apos;name&apos;, &#123; path: &apos;/&apos; &#125;); // =&gt; true Reference https://github.com/carhartl/jquery-cookie#readme Related Posts [WEB] 쿠키와 세션을 간단하게 알아보자 [jQuery] 다운로드 및 설치 방법 (jQuery) 제이쿼리 트래버싱 Traversing","categories":[{"name":"Programming","slug":"Programming","permalink":"https://dullyshin.github.io/categories/Programming/"},{"name":"jQuery","slug":"Programming/jQuery","permalink":"https://dullyshin.github.io/categories/Programming/jQuery/"}],"tags":[{"name":"쿠키 의미","slug":"쿠키-의미","permalink":"https://dullyshin.github.io/tags/쿠키-의미/"},{"name":"세션 의미","slug":"세션-의미","permalink":"https://dullyshin.github.io/tags/세션-의미/"},{"name":"쿠키","slug":"쿠키","permalink":"https://dullyshin.github.io/tags/쿠키/"},{"name":"쿠키 삭제","slug":"쿠키-삭제","permalink":"https://dullyshin.github.io/tags/쿠키-삭제/"},{"name":"쿠키 만들기","slug":"쿠키-만들기","permalink":"https://dullyshin.github.io/tags/쿠키-만들기/"},{"name":"쿠키 생성하기","slug":"쿠키-생성하기","permalink":"https://dullyshin.github.io/tags/쿠키-생성하기/"},{"name":"쿠키 삭재","slug":"쿠키-삭재","permalink":"https://dullyshin.github.io/tags/쿠키-삭재/"},{"name":"jquery로 쿠키 만들기","slug":"jquery로-쿠키-만들기","permalink":"https://dullyshin.github.io/tags/jquery로-쿠키-만들기/"},{"name":"jquery 쿠키","slug":"jquery-쿠키","permalink":"https://dullyshin.github.io/tags/jquery-쿠키/"},{"name":"쿠키 읽기","slug":"쿠키-읽기","permalink":"https://dullyshin.github.io/tags/쿠키-읽기/"},{"name":"쿠키 생명주기","slug":"쿠키-생명주기","permalink":"https://dullyshin.github.io/tags/쿠키-생명주기/"},{"name":"쿠키 읽어오기","slug":"쿠키-읽어오기","permalink":"https://dullyshin.github.io/tags/쿠키-읽어오기/"},{"name":"jquery 쿠키 읽기","slug":"jquery-쿠키-읽기","permalink":"https://dullyshin.github.io/tags/jquery-쿠키-읽기/"}]},{"title":"[WEB] 쿠키와 세션을 간단하게 알아보자","slug":"WEB-cookieSession","date":"2019-09-06T08:00:37.000Z","updated":"2019-09-10T05:09:48.953Z","comments":true,"path":"2019/09/06/WEB-cookieSession/","link":"","permalink":"https://dullyshin.github.io/2019/09/06/WEB-cookieSession/","excerpt":"","text":"쿠키(Cookie)란?? 쿠키는 클라이언트(브라우저) 로컬에 저장되는 키와 값이 들어있는 작은 데이터 파일입니다. 사용자 인증이 유효한 시간을 명시할 수 있으며, 유효 시간이 정해지면 브라우저가 종료되어도 인증이 유지된다는 특징이 있습니다. 쿠키는 클라이언트의 상태 정보를 로컬에 저장했다가 참조합니다. 클라이언트에 300개까지 쿠키저장 가능, 하나의 도메인당 20개의 값만 가질 수 있음, 하나의 쿠키값은 4KB까지 저장합니다. Response Header에 Set-Cookie 속성을 사용하면 클라이언트에 쿠키를 만들 수 있습니다. 쿠키는 사용자가 따로 요청하지 않아도 브라우저가 Request시에 Request Header를 넣어서 자동으로 서버에 전송합니다. 쿠키 사용예시 이전에 본 상품 목록 팝업에서 “오늘 더 이상 이 창을 보지 않음” 체크 쇼핑몰의 장바구니 어느날 월요일 아침msn.com : (쿠키를 전달)꼭 가지고 있어, 알겠지?컴퓨터 : 문제 없지! 수요일 오후컴퓨터 : (받았던 쿠키를 전달)MNS 여기에 월요일에 저장했던 쿠키가 있어.msn.com : 고마워, 친구! 위와 같이 쿠키를 가지고 있다면 msn.com 에 들어갈때 마다 로그인을 할 필요가 없어집니다.하지만 브라우져에서 로그인 정보를 해커가 훔쳐갈 수 있어 보안에 취약합니다. 세션(Session)이란?? 세션은 쿠키를 기반하고 있지만, 사용자 정보 파일을 브라우저에 저장하는 쿠키와 달리 세션은 서버 측에서 관리합니다. 서버에서는 클라이언트를 구분하기 위해 세션 ID를 부여하며 웹 브라우저가 서버에 접속해서 브라우저를 종료할 때까지 인증상태를 유지합니다. 물론 접속 시간에 제한을 두어 일정 시간 응답이 없다면 정보가 유지되지 않게 설정이 가능 합니다. 사용자에 대한 정보를 서버에 두기 때문에 쿠키보다 보안에 좋지만, 사용자가 많아질수록 서버 메모리를 많이 차지하게 됩니다. 즉 동접자 수가 많은 웹 사이트인 경우 서버에 과부하를 주게 되므로 성능 저하의 요인이 됩니다. 클라이언트가 Request를 보내면, 해당 서버의 엔진이 클라이언트에게 유일한 ID를 부여하는 데 이것이 세션ID다. 세션 사용예시 보안에 중요한 로그인시에 사용 늦은 일요일 밤amazon.com : (SESSION ID를 주며)여기에 있어.브라우져 : 잘 받았어. 한 시간 후브라우져: 이제 잘 시간이야.(브라우져를 종료한다.) 위와 같이 세션은 서버에서 받은 세션 아이디 정보만 가지고 있습니다. 그에 따른 정보는 서버가 가지고 있죠.그리고 브라우져 종료시 만료기간에 상관없이 삭제됩니다. 쿠키와 세션의 차이 쿠키와 세션은 비슷한 역할을 하며, 동작원리도 비슷합니다. 그 이유는 세션도 결국 쿠키를 사용하기 때문입니다. 가장 큰 차이점은 사용자의 정보가 저장되는 위치입니다. 때문에 쿠키는 서버의 자원을 전혀 사용하지 않으며, 세션은 서버의 자원을 사용합니다. 보안 면에서 세션이 더 우수하며, 요청 속도는 쿠키가 세션보다 더 빠릅니다. 그 이유는 세션은 서버의 처리가 필요하기 때문입니다. 보안, 쿠키는 클라이언트 로컬에 저장되기 때문에 변질되거나 request에서 스니핑 당할 우려가 있어서 보안에 취약하지만 세션은 쿠키를 이용해서 sessionid 만 저장하고 그것으로 구분해서 서버에서 처리하기 때문에 비교적 보안성이 좋습니다. 라이프 사이클, 쿠키도 만료시간이 있지만 파일로 저장되기 때문에 브라우저를 종료해도 계속해서 정보가 남아 있을 수 있다. 또한 만료기간을 넉넉하게 잡아두면 쿠키삭제를 할 때 까지 유지될 수도 있다. 반면에 세션도 만료시간을 정할 수 있지만 브라우저가 종료되면 만료시간에 상관없이 삭제된다. 속도, 쿠키에 정보가 있기 때문에 서버에 요청시 속도가 빠르고 세션은 정보가 서버에 있기 때문에 처리가 요구되어 비교적 느린 속도를 낸다. Reference https://interconnection.tistory.com/74 https://moz.com/blog/controlling-search-engine-access-with-cookies-session-ids Related Posts BEST 10 이클립스 단축키 ECharts를 통해 5분안에 차트를 만들자! 윈도우 - 간단하게 CMD 포트 검색, 포트 죽이기 HTML 간단하게 표 만들기","categories":[{"name":"Programming","slug":"Programming","permalink":"https://dullyshin.github.io/categories/Programming/"},{"name":"Web","slug":"Programming/Web","permalink":"https://dullyshin.github.io/categories/Programming/Web/"}],"tags":[{"name":"쿠키 의미","slug":"쿠키-의미","permalink":"https://dullyshin.github.io/tags/쿠키-의미/"},{"name":"세션 의미","slug":"세션-의미","permalink":"https://dullyshin.github.io/tags/세션-의미/"},{"name":"쿠키","slug":"쿠키","permalink":"https://dullyshin.github.io/tags/쿠키/"},{"name":"쿠키와 세션의 차이","slug":"쿠키와-세션의-차이","permalink":"https://dullyshin.github.io/tags/쿠키와-세션의-차이/"},{"name":"쿠키와 세션","slug":"쿠키와-세션","permalink":"https://dullyshin.github.io/tags/쿠키와-세션/"},{"name":"세션","slug":"세션","permalink":"https://dullyshin.github.io/tags/세션/"},{"name":"쿠키와 세션의 개념","slug":"쿠키와-세션의-개념","permalink":"https://dullyshin.github.io/tags/쿠키와-세션의-개념/"}]},{"title":"[jQuery] 다운로드 및 설치 방법","slug":"jQuery-download","date":"2019-09-05T07:40:44.000Z","updated":"2019-09-05T08:56:40.289Z","comments":true,"path":"2019/09/05/jQuery-download/","link":"","permalink":"https://dullyshin.github.io/2019/09/05/jQuery-download/","excerpt":"","text":"제이쿼리 다운로드 방법우선 제이쿼리를 설치하는 방법은 여러가지이지만 저는 크게 2가지 방법을 알려드리겠습니다. (2019년 9월 5일 기준으로 작성되었습니다.) 파일을 다운받아 적용 CDN을 통해 &lt;head&gt; 태그안에 입력 배포시에 만약 인터넷이 안되는 곳에 적용하는 것이라면 무조건 1번 방법으로 JQuery를 설치 받아야 추후에도 사용 가능합니다.CDN을 통해 사용하는 것은 인터넷이 작동한다는 가정하에 간단하게 사용합니다. 1. 파일을 다운받아 적용1) 제이쿼리 홈페이지에 접속하여 다운로드 버튼을 클릭합니다. 2) 원하는 jQuery 파일을 다운 받습니다. 압축되지 않은 파일(Uncompressed) 보고 이해할 수 있도록 띄어쓰기로 구분되어 있지만 용량이 압축된 것보다 큽니다. 압축된 파일(Compressed)은 용량을 줄이기 위해서 띄어쓰기와 빈칸을 없애서 사람이 보고 이해하기 어렵게 작성되어 있습니다.원하는 파일화면에 마우스 오른쪽 버튼을 클릭하여 다른이름으로 저장버튼을 클릭합니다. 3) 원하는 경로에 다운로드 원하는 경로에 다운로드 합니다. 경로를 기억하셔야 합니다. Java의 경우 resource 파일 아래에 저장합니다.파일이름은 jquery-3.4.1.min.js 입니다. 4) 적용시키기 &lt;head&gt;&lt;/head&gt; 태그 사이에 아래와 같이 입력합니다. 이때 3번에서 다운로드 받은 경로를 잘 기억하시고 입력하여주세요.파일이름을 변경하셨다면 변경된 이름으로 적용하시면 됩니다. 1&lt;script src=&quot;../resource/jquery-3.4.1.min.js&quot;&gt;&lt;/script&gt; 2. CDN을 통해 &lt;head&gt; 태그안에 입력1) CND 다운로드 접속 CND 다운로드에 접속하여 최신버전의 jQuery CDN을 클릭합니다. 2) 스크립트를 복사합니다. 위에서 클릭한 후 화면에 나오는 스크립트 부분을 복사합니다. 3) 적용시키기 &lt;head&gt;&lt;/head&gt; 태그 사이에 위에서 복사한 스크립트를 입력합니다. 1234&lt;script src=&quot;https://code.jquery.com/jquery-3.4.1.min.js&quot; integrity=&quot;sha256-CSXorXvZcTkaix6Yvo6HppcZGetbYMGWSFlBw8HfCJo=&quot; crossorigin=&quot;anonymous&quot;&gt;&lt;/script&gt; 이제 jQuery를 사용해서 쉽고 간편하게 소스를 사용할 수 있게 되었습니다! via GIPHY Reference https://jquery.com/ https://code.jquery.com/ Related Posts (jQuery)제이쿼리 셀렉터 총정리 01편! jQuery Selector (jQuery)제이쿼리 셀렉터 총정리 02편! jQuery Selector (jQuery) 제이쿼리 트래버싱 Traversing (jQuery) 테이블 행 추가, 삭제 / 랜덤함수 이용","categories":[{"name":"Programming","slug":"Programming","permalink":"https://dullyshin.github.io/categories/Programming/"},{"name":"jQuery","slug":"Programming/jQuery","permalink":"https://dullyshin.github.io/categories/Programming/jQuery/"}],"tags":[{"name":"jquery 다운로드","slug":"jquery-다운로드","permalink":"https://dullyshin.github.io/tags/jquery-다운로드/"},{"name":"제이쿼리 다운로드","slug":"제이쿼리-다운로드","permalink":"https://dullyshin.github.io/tags/제이쿼리-다운로드/"},{"name":"jquery 설치하기","slug":"jquery-설치하기","permalink":"https://dullyshin.github.io/tags/jquery-설치하기/"},{"name":"제이쿼리 설치하기","slug":"제이쿼리-설치하기","permalink":"https://dullyshin.github.io/tags/제이쿼리-설치하기/"},{"name":"jquery 다운로드 최신","slug":"jquery-다운로드-최신","permalink":"https://dullyshin.github.io/tags/jquery-다운로드-최신/"},{"name":"제이쿼리 다운로드 자세히","slug":"제이쿼리-다운로드-자세히","permalink":"https://dullyshin.github.io/tags/제이쿼리-다운로드-자세히/"},{"name":"제이쿼리 CDN","slug":"제이쿼리-CDN","permalink":"https://dullyshin.github.io/tags/제이쿼리-CDN/"},{"name":"jquery cdn","slug":"jquery-cdn","permalink":"https://dullyshin.github.io/tags/jquery-cdn/"},{"name":"제이쿼리 설치 적용","slug":"제이쿼리-설치-적용","permalink":"https://dullyshin.github.io/tags/제이쿼리-설치-적용/"}]},{"title":"[PostgreSQl] 타입 변환 (PostgreSQL CAST To Convert)","slug":"PostgreSQl-cast","date":"2019-08-30T07:48:27.000Z","updated":"2023-08-12T15:35:38.034Z","comments":true,"path":"2019/08/30/PostgreSQl-cast/","link":"","permalink":"https://dullyshin.github.io/2019/08/30/PostgreSQl-cast/","excerpt":"","text":"CAST 에 대한 간단한 소개PostgreSql 에서는 Cast를 사용하여 타입 변화를 할 수 있습니다.숫자를 문자로 변환하거나, 숫자를 날짜로 변환할 수 있습니다. ### 한눈에 보는 `CAST` 총정리 PostgreSql 에서는 :: 연산자를 사용해 간단하게 줄여서 타입 변환을 할 수 있습니다. 문자를 숫자 형식으로 변환 SELECT CAST (&#39;100&#39; AS INTEGER); 문자를 날짜 형식으로 변환 SELECT CAST (&#39;2015-01-01&#39; AS DATE); SELECT &#39;2019-06-15 14:30:20&#39;::timestamp; 문자를 더블 형식으로 변환 SELECT CAST (&#39;10.2&#39; AS DOUBLE PRECISION); 문자를 참거짓으로 변환 SELECT CAST(&#39;true&#39; AS BOOLEAN), CAST(&#39;F&#39; as BOOLEAN); 문자를 인터벌로 변환 SELECT &#39;15 minute&#39;::interval; 더 자세한 설명을 원하신다면 아래에서 확인해 주세요! CAST syntax1CAST ( expression AS target_type ); :: 연산자CAST를 대신하여 :: 연산자를 사용하여 더 간단하게 타입을 변환할 수 있습니다. 1expression::type 간단하게 예는 아래와 같습니다. 123SELECT &apos;100&apos;::INTEGER, &apos;01-OCT-2015&apos;::DATE; 주의할 점은 :: 연산자는 PostgreSQL에서만 사용됩니다. SQL 스탠다드를 따르지 않습니다. PostgreSQL CAST 예시1)문자를 숫자로 변환12SELECT CAST (&apos;100&apos; AS INTEGER); 결과는 아래와 같습니다. int4 100 하지만 아래와 같이 잘못된 변환을 시도한다면 오류가 발생할 것입니다. 123SELECT CAST (&apos;10C&apos; AS INTEGER);--SQL Error [22P02]: 오류: 정수 자료형 대한 잘못된 입력 구문: &quot;10C&quot; 2)문자를 날짜 형식으로 변환1234SELECT CAST (&apos;2015-01-01&apos; AS DATE), CAST (&apos;01-OCT-2015&apos; AS DATE), &apos;2019-06-15 14:30:20&apos;::date; 결과는 아래와 같습니다. Date를 사용하면 날짜의 년도, 월, 일만 표시되고 시간 형식은 표시되지 않습니다. date date date 2015-01-01 2015-10-01 2019-06-15 3)문자를 더블형으로 변환12SELECT CAST (&apos;10.2&apos; AS DOUBLE); 만약 위와 같이 쿼리문을 실행하면 SQL Error [42704]: 오류: &quot;double&quot; 자료형 없음 이라는 오류가 발생합니다.오류를 고치기 위해서는 ‘double’ 대신에 DOUBLE PRECISION를 사용해주면 됩니다. 12SELECT CAST (&apos;10.2&apos; AS DOUBLE PRECISION); 결과는 아래와 같습니다. float8 10.2 4)문자를 참거짓으로 변환12345SELECT CAST(&apos;true&apos; AS BOOLEAN), CAST(&apos;false&apos; as BOOLEAN), CAST(&apos;T&apos; as BOOLEAN), CAST(&apos;F&apos; as BOOLEAN); 결과는 아래와 같습니다. bool bool bool bool true false true false 5)문자를 날짜, 시간 형식으로 변환12SELECT &apos;2019-06-15 14:30:20&apos;::timestamp, &apos;2019-06-15&apos;::timestamp; 결과는 아래와 같습니다. 변환시에 시간을 지정하지 않아도 시간이 붙은 결과로 나옵니다. timestamp timestamp 2019-06-15 14:30:20 2019-06-15 00:00:00 6)문자를 인터벌 형식으로 변환12345SELECT &apos;15 minute&apos;::interval, &apos;2 hour&apos;::interval, &apos;1 day&apos;::interval, &apos;2 week&apos;::interval, &apos;3 month&apos;::interval; 결과는 아래와 같습니다. interval interval interval interval interval 00:15:00 02:00:00 1 day 14 days 3 mons Reference http://www.postgresqltutorial.com/postgresql-cast/ Related Posts PostgreSql 란? [java error]The content of elements must consist of well-formed character data or markup. (MS SQL) 삽입시Insert 최대값 추가 +1 SQL basic","categories":[{"name":"Programming","slug":"Programming","permalink":"https://dullyshin.github.io/categories/Programming/"},{"name":"SQL","slug":"Programming/SQL","permalink":"https://dullyshin.github.io/categories/Programming/SQL/"}],"tags":[{"name":"PostgreSQL","slug":"PostgreSQL","permalink":"https://dullyshin.github.io/tags/PostgreSQL/"},{"name":"postgresql","slug":"postgresql","permalink":"https://dullyshin.github.io/tags/postgresql/"},{"name":"PostgreSQL Basic","slug":"PostgreSQL-Basic","permalink":"https://dullyshin.github.io/tags/PostgreSQL-Basic/"},{"name":"postgresql cast","slug":"postgresql-cast","permalink":"https://dullyshin.github.io/tags/postgresql-cast/"},{"name":"PostgreSQL CAST To Convert","slug":"PostgreSQL-CAST-To-Convert","permalink":"https://dullyshin.github.io/tags/PostgreSQL-CAST-To-Convert/"},{"name":"PostgreSQL Convert","slug":"PostgreSQL-Convert","permalink":"https://dullyshin.github.io/tags/PostgreSQL-Convert/"},{"name":"postgresql cast intrger","slug":"postgresql-cast-intrger","permalink":"https://dullyshin.github.io/tags/postgresql-cast-intrger/"},{"name":"Type cast","slug":"Type-cast","permalink":"https://dullyshin.github.io/tags/Type-cast/"},{"name":"포스트그래스 타입 변환","slug":"포스트그래스-타입-변환","permalink":"https://dullyshin.github.io/tags/포스트그래스-타입-변환/"},{"name":"postgresql 문자를 숫자로","slug":"postgresql-문자를-숫자로","permalink":"https://dullyshin.github.io/tags/postgresql-문자를-숫자로/"},{"name":"postgresql 문자를 날짜로","slug":"postgresql-문자를-날짜로","permalink":"https://dullyshin.github.io/tags/postgresql-문자를-날짜로/"},{"name":"postgresql 문자를 더블형으로","slug":"postgresql-문자를-더블형으로","permalink":"https://dullyshin.github.io/tags/postgresql-문자를-더블형으로/"}]},{"title":"[SQL] 쿼리 where절의 Like 와 In 을 동시에 사용하기","slug":"SQL-wherein","date":"2019-08-30T06:55:01.000Z","updated":"2019-09-04T01:15:13.931Z","comments":true,"path":"2019/08/30/SQL-wherein/","link":"","permalink":"https://dullyshin.github.io/2019/08/30/SQL-wherein/","excerpt":"","text":"퀴리를 사용할때 where 절에서 like와 in문을 합쳐서 사용하고 싶을때가 있습니다. 1SELECT * FROM table WHERE column LIKE IN (&apos;Text%&apos;, &apos;Link%&apos;, &apos;Hello%&apos;, &apos;%World%&apos;) 위와 같이 사용하고 싶지만 SQL Error [42601]: 오류: 구문 오류, &quot;IN&quot; 라는 오류를 발생시킬 수 있습니다. WHERE column IN (1,2,3)먼저 in 문에 대해 알아 봅시다. in 문의 사용은 아래와 같습니다. 12SELECT * FROM tableWHERE column IN (1, 2, 3) 위의 쿼리를 풀어 해석하면 아래와 같습니다. 1234SELECT * FROM tableWHERE column = 1 OR column = 2 OR column = 3 where절의 Like 와 In 을 동시에 사용하기위에서 풀어서 적은 것과 같이 아래와 같이 or 절로 묶어서 사용할 수 있습니다. 1234SELECT * FROM tableWHERE column LIKE &apos;Text%&apos; OR column LIKE &apos;Hello%&apos; OR column LIKE &apos;That%&apos; TIP만약 다른 조건도 사용하면서 where절의 Like 와 In 을 동시에 사용하고 싶다면 아래와 같이 사용하면 됩니다.괄호로 묶어 원하지 않는 결과가 조회되는 것을 막을 수 있습니다. 123SELECT * FROM tableWHERE column2 = &apos;like&apos; and (column LIKE &apos;Text%&apos; or column &apos;Hello%&apos; or column LIKE &apos;That%&apos; ) Reference https://stackoverflow.com/questions/1865353/combining-like-and-in-for-sql-server Related Posts SQL basic Oracle-Join (MS SQL) 삽입시Insert 최대값 추가 +1 PostgreSql 란?","categories":[{"name":"Programming","slug":"Programming","permalink":"https://dullyshin.github.io/categories/Programming/"},{"name":"SQL","slug":"Programming/SQL","permalink":"https://dullyshin.github.io/categories/Programming/SQL/"}],"tags":[{"name":"in like sql","slug":"in-like-sql","permalink":"https://dullyshin.github.io/tags/in-like-sql/"},{"name":"in 연산자와 like 동시에 사용","slug":"in-연산자와-like-동시에-사용","permalink":"https://dullyshin.github.io/tags/in-연산자와-like-동시에-사용/"},{"name":"in 연산자","slug":"in-연산자","permalink":"https://dullyshin.github.io/tags/in-연산자/"},{"name":"like 연산자","slug":"like-연산자","permalink":"https://dullyshin.github.io/tags/like-연산자/"},{"name":"SQL Error [42601]","slug":"SQL-Error-42601","permalink":"https://dullyshin.github.io/tags/SQL-Error-42601/"}]},{"title":"윈도우 - 간단하게 CMD 포트 검색, 포트 죽이기","slug":"window-checkport","date":"2019-08-30T01:15:11.000Z","updated":"2019-08-30T07:19:53.013Z","comments":true,"path":"2019/08/30/window-checkport/","link":"","permalink":"https://dullyshin.github.io/2019/08/30/window-checkport/","excerpt":"","text":"간단한 총 정리1234- netstat -ano : 작동중인 포트 확인- netstat -ano | findstr 8080 : 특정 포트로 검색- tasklist /FI &quot;PID eq 20056&quot; : PID를 통해 작동중인 프로그램 이름 확인- taskkill /F /PID 20056 : PID를 통해 작동중인 프로그램 종료 더 자세한 설명은 아래에 있습니다. netstat -ano현재 작동 중인 전체 포트를 확인할 수 있습니다. netstat -ano | findstr 8080원하는 포트만 특정하여 검색할 수 있습니다.예시는 8080 포트만 검색한 것입니다. 8080 포트의 맨 오른쪽의 결과를 통해 해당 포트의 PID를 알 수 있습니다. tasklist /FI “PID eq 20056”위에서 검색한 PID를 통해 어떤 프로그램이 작동 중인지 확인할 수 있습니다.현재 20056 PID를 가진 프로그램은 javaw.exe인 것을 확인할 수 있습니다. 현재 8080 포트는 Tomcat이 실행 중 이었습니다. taskkill /F /PID 20056PID를 이용하여 특정 포트 종료합니다.Tomcat을 강제 종료할 수 있습니다. Reference https://hunit.tistory.com/294 Related Posts BEST 10 이클립스 단축키 정보처리기사 비전공자 합격 후기 markdown","categories":[{"name":"Windows","slug":"Windows","permalink":"https://dullyshin.github.io/categories/Windows/"}],"tags":[{"name":"Windows","slug":"Windows","permalink":"https://dullyshin.github.io/tags/Windows/"},{"name":"포트 검색","slug":"포트-검색","permalink":"https://dullyshin.github.io/tags/포트-검색/"},{"name":"포트 죽이기","slug":"포트-죽이기","permalink":"https://dullyshin.github.io/tags/포트-죽이기/"},{"name":"taskkill","slug":"taskkill","permalink":"https://dullyshin.github.io/tags/taskkill/"},{"name":"tasklist","slug":"tasklist","permalink":"https://dullyshin.github.io/tags/tasklist/"},{"name":"netstat ano","slug":"netstat-ano","permalink":"https://dullyshin.github.io/tags/netstat-ano/"},{"name":"Tomcat 강제 종료","slug":"Tomcat-강제-종료","permalink":"https://dullyshin.github.io/tags/Tomcat-강제-종료/"}]},{"title":"BEST 10 이클립스 단축키","slug":"eclipse-shortcut","date":"2019-08-29T07:43:39.000Z","updated":"2019-08-30T07:44:54.514Z","comments":true,"path":"2019/08/29/eclipse-shortcut/","link":"","permalink":"https://dullyshin.github.io/2019/08/29/eclipse-shortcut/","excerpt":"","text":"제가 개발시에 주로 사용하는 단축키 BEST 10을 선정해 보았습니다! 1. 되돌리기Ctrl + Z : 수정하기 이전의 상태로 되돌립니다. 2. 복사 붙여넣기Ctrl + C : 선택한 블록을 복사Ctrl + V : 복사한 것을 붙여넣기Ctrl + Alt + Up(Down) : 한 줄(블럭) 복사 3. 주석Ctrl + Shift + C : 선택한 블록을 주석으로 처리하거나 주석 해제 4. 저장Ctrl + S : 현재 켜져있는 소스를 저장 5. 삭제Ctrl + D : 선택한 블록을 삭제 6. 자리 옮기기Alt + Up(Down) : 위(아래) 줄과 바꾸기 7. 검색Ctrl + Shift + R : 파일의 이름으로 검색합니다.Ctrl + H : 여러가지 검색 조건으로 검색할 수 있습니다.Ctrl + K : 찾을 문자열을 블럭으로 지정하고 검색Ctrl + F : 기본 검색 8. 대소문자 변환Ctrl + Shift +X : 대문자로 변환Ctrl + Shift + Y : 소문자로 변환 9. 여러 줄 동시 수정Shift + Alt + A : 여러 줄을 수정하고 싶을떄 아주 유용합니다. 수정하기 원하는 곳에서 Shift + Alt + A 를 누르면 마우스 모양이 십자가 모양이 됩니다. 그 후 수정하기 원하는 줄을 드레그 한 후 수정하면 됩니다. 한글은 작성되지 않습니다. 주의하세요! IE 8 이하는 비디오가 나오지 않습니다. IE 버전을 업데이트 하시길 바랍니다. 10. 디버깅 DebuggingF11 : 디버깅 시작F8 : 디버깅 계속F6 : 한 줄씩 디버깅F5 : 한 줄씩 디버깅할 때 함수인 경우 함수 내부까지 디버깅 아쉬운 번외 단축키들Ctrl + Shift + L : 모든 단축키 목록 표시Ctrl + Shift + O : 자동 importCtrl + M : 전체 화면 전환 Reference https://seohs.tistory.com/488 [Digital Recipe] Related Posts ECharts를 통해 5분안에 차트를 만들자! HTML 기초 알아봅시다! HTML 이미지 링크거는 법 HTML 간단하게 표 만들기 (jstl) ForEach 문","categories":[{"name":"Eclipse","slug":"Eclipse","permalink":"https://dullyshin.github.io/categories/Eclipse/"}],"tags":[{"name":"이클립스 단축키","slug":"이클립스-단축키","permalink":"https://dullyshin.github.io/tags/이클립스-단축키/"},{"name":"이클립스 한줄 수정","slug":"이클립스-한줄-수정","permalink":"https://dullyshin.github.io/tags/이클립스-한줄-수정/"},{"name":"이클립스 저장 단축키","slug":"이클립스-저장-단축키","permalink":"https://dullyshin.github.io/tags/이클립스-저장-단축키/"},{"name":"이클립스 한 줄 삭제","slug":"이클립스-한-줄-삭제","permalink":"https://dullyshin.github.io/tags/이클립스-한-줄-삭제/"},{"name":"이클립스 한 줄 주석","slug":"이클립스-한-줄-주석","permalink":"https://dullyshin.github.io/tags/이클립스-한-줄-주석/"},{"name":"이클립스 삭제","slug":"이클립스-삭제","permalink":"https://dullyshin.github.io/tags/이클립스-삭제/"},{"name":"이클립스 주석","slug":"이클립스-주석","permalink":"https://dullyshin.github.io/tags/이클립스-주석/"},{"name":"eclipse shortcuts","slug":"eclipse-shortcuts","permalink":"https://dullyshin.github.io/tags/eclipse-shortcuts/"}]},{"title":"(jQuery)제이쿼리 map 함수 사용법","slug":"jQuery-map","date":"2019-08-29T07:15:31.000Z","updated":"2019-09-04T02:05:12.198Z","comments":true,"path":"2019/08/29/jQuery-map/","link":"","permalink":"https://dullyshin.github.io/2019/08/29/jQuery-map/","excerpt":"","text":"##(jQuery) 제이쿼리 맵 jQuery.map( array, callback )Translate all items in an array or object to new array of items. 제이쿼리.맵(배열, 콜백함수)객체나 배열에 있는 모든 아이템들을 새로운 배열로 만들때 사용합니다. 이미 주어진 배열을 변경하기 위해 사용합니다. via GIPHY 간단하게 말해 주어진 배열을 원하는대로 변경할 수 있습니다.예시가 있는 경우가 더욱 이해하기 편합니다. 함께 예시를 확인해 보시죠. 위에서 보듯이 .map()을 사용하기 전에 $.makeArray()를 사용해 오류를 막을 수 있습니다.가짜 배열 fakeArray 을 사용한다면 Uncaught TypeError: fakeArray.join is not a function 오류가 납니다. 배열 .map() Example12345$.map( [ 0, 1, 2 ], function( n ) &#123; return n + 4;&#125;);//결과는 [4, 5, 6] 123456$.map( [ 0, 1, 2 ], function( n ) &#123; return n &gt; 0 ? n + 1 : null;&#125;);//결과는 [ 2, 3 ]//삼항 연산자 `n &gt; 0 ? n + 1 : null`는 n의 값이 0보다 크면 n+1 아니면 null이 나옵니다. 삼항 연산자를 자세히 알고 싶다면 (JavaScript) 삼항 연산자 Ternary Operator를 클릭하여 확인하세요. 123456$.map( [ 0, 1, 52, 97 ], function( a ) &#123; return (a &gt; 50 ? a - 45 : null);&#125;);//결과는 [ 7, 52 ]//삼항 연산자 `a &gt; 50 ? a - 45 : null`는 a의 값이 50보다 크면 a-45 아니면 null이 나옵니다. 12345$.map( [ 0, 1, 2 ], function( n ) &#123; return [ n, n + 1 ];&#125;);//결과는 [ 0, 1, 1, 2, 2, 3 ] 1234567var array = [ 0, 1, 52, 97 ];array = $.map( array, function( a, index ) &#123; return [ a - 45, index ];&#125;);//결과는 [ -45, 0, -44, 1, 7, 2, 52, 3]//인덱스는 제로 베이스입니다. ('1'이 아닌 '0'부터 시작 '0', '1', '2', '3', ...) 객체 .map() Example1234567var dimensions = &#123; width: 10, height: 15, length: 20 &#125;;dimensions = $.map( dimensions, function( value, index ) &#123; return value * 2;&#125;);//결과는 [ 20, 30, 40 ]//여기에서 index는 숫자가 아닌 [ \"width\", \"height\", \"length\" ]가 출력됩니다. 123456var dimensions = &#123; width: 10, height: 15, length: 20 &#125;;var keys = $.map( dimensions, function( value, key ) &#123; return key;&#125;);//결과는 [ \"width\", \"height\", \"length\" ] Reference jQuery.map() 제이쿼리 맵 Related Posts (jQuery)제이쿼리 셀렉터 총정리 01편! jQuery Selector (jQuery)제이쿼리 셀렉터 총정리 02편! jQuery Selector (jQuery) 테이블 행 추가, 삭제 / 랜덤함수 이용 (jQuery) 제이쿼리 트래버싱 Traversing","categories":[{"name":"Programming","slug":"Programming","permalink":"https://dullyshin.github.io/categories/Programming/"},{"name":"jQuery","slug":"Programming/jQuery","permalink":"https://dullyshin.github.io/categories/Programming/jQuery/"}],"tags":[{"name":"맵","slug":"맵","permalink":"https://dullyshin.github.io/tags/맵/"},{"name":"제이쿼리 맵","slug":"제이쿼리-맵","permalink":"https://dullyshin.github.io/tags/제이쿼리-맵/"},{"name":"jquery map","slug":"jquery-map","permalink":"https://dullyshin.github.io/tags/jquery-map/"},{"name":"jquery","slug":"jquery","permalink":"https://dullyshin.github.io/tags/jquery/"},{"name":"맵 함수","slug":"맵-함수","permalink":"https://dullyshin.github.io/tags/맵-함수/"},{"name":"makeArray","slug":"makeArray","permalink":"https://dullyshin.github.io/tags/makeArray/"},{"name":".text()","slug":"text","permalink":"https://dullyshin.github.io/tags/text/"},{"name":".map()","slug":"map","permalink":"https://dullyshin.github.io/tags/map/"},{"name":"[object Object]","slug":"object-Object","permalink":"https://dullyshin.github.io/tags/object-Object/"},{"name":"jQuery.map()","slug":"jQuery-map","permalink":"https://dullyshin.github.io/tags/jQuery-map/"},{"name":"jQuery.text()","slug":"jQuery-text","permalink":"https://dullyshin.github.io/tags/jQuery-text/"},{"name":"제이쿼리 텍스트","slug":"제이쿼리-텍스트","permalink":"https://dullyshin.github.io/tags/제이쿼리-텍스트/"},{"name":"새로운 배열요소로 변경","slug":"새로운-배열요소로-변경","permalink":"https://dullyshin.github.io/tags/새로운-배열요소로-변경/"},{"name":"$.map()","slug":"map","permalink":"https://dullyshin.github.io/tags/map/"},{"name":"map 메소드","slug":"map-메소드","permalink":"https://dullyshin.github.io/tags/map-메소드/"},{"name":"map 객체","slug":"map-객체","permalink":"https://dullyshin.github.io/tags/map-객체/"},{"name":"map 배열","slug":"map-배열","permalink":"https://dullyshin.github.io/tags/map-배열/"}]},{"title":"JavaScript-array","slug":"JavaScript-array","date":"2019-08-08T05:16:45.000Z","updated":"2019-08-30T07:24:46.496Z","comments":true,"path":"2019/08/08/JavaScript-array/","link":"","permalink":"https://dullyshin.github.io/2019/08/08/JavaScript-array/","excerpt":"","text":"배열 만들기1234var fruits = [&apos;사과&apos;, &apos;바나나&apos;];console.log(fruits.length);// 2 인덱스로 배열의 항목에 접근하기12345var first = fruits[0];// 사과var last = fruits[fruits.length - 1];// 바나나 배열의 항목들을 순환하며 처리하기12345fruits.forEach(function (item, index, array) &#123; console.log(item, index);&#125;);// 사과 0// 바나나 1 배열 끝에 항목 추가하기12var newLength = fruits.push(&apos;오렌지&apos;);// [&quot;사과&quot;, &quot;바나나&quot;, &quot;오렌지&quot;] 배열 끝에서부터 항목 제거하기12var last = fruits.pop(); // 끝에있던 &apos;오렌지&apos;를 제거// [&quot;사과&quot;, &quot;바나나&quot;]; 배열 앞에서부터 항목 제거하기12var first = fruits.shift(); // 제일 앞의 &apos;사과&apos;를 제거// [&quot;바나나&quot;]; 배열 앞에 항목 추가하기12var newLength = fruits.unshift(&apos;딸기&apos;) // 앞에 추가// [&quot;딸기&quot;, &quot;바나나&quot;]; 배열 안 항목의 인덱스 찾기12345fruits.push(&apos;망고&apos;);// [&quot;딸기&quot;, &quot;바나나&quot;, &quot;망고&quot;]var pos = fruits.indexOf(&quot;바나나&quot;);// 1 인덱스 위치에 있는 항목 제거하기123var removedItem = fruits.splice(pos, 1); // 항목을 제거하는 방법// [&quot;딸기&quot;, &quot;망고&quot;] 인덱스 위치에서부터 여러개의 항목 제거하기123456789101112131415var vegetables = [&apos;양배추&apos;, &apos;순무&apos;, &apos;무&apos;, &apos;당근&apos;];console.log(vegetables);// [&quot;양배추&quot;, &quot;순무&quot;, &quot;무&quot;, &quot;당근&quot;]var pos = 1, n = 2;var removedItems = vegetables.splice(pos, n);// 배열에서 항목을 제거하는 방법// pos 인덱스부터 n개의 항목을 제거함console.log(vegetables);// [&quot;양배추&quot;, &quot;당근&quot;] (원 배열 vegetables의 값이 변함)console.log(removedItems);// [&quot;순무&quot;, &quot;무&quot;] 배열 복사하기12var shallowCopy = fruits.slice(); // 사본을 만드는 방법// [&quot;딸기&quot;, &quot;망고&quot;] Reference https://developer.mozilla.org/ko/docs/Web/JavaScript/Reference/Global_Objects/Array Related Posts (JavaScript) 삼항 연산자 Ternary Operator","categories":[{"name":"Programming","slug":"Programming","permalink":"https://dullyshin.github.io/categories/Programming/"},{"name":"JavaScript","slug":"Programming/JavaScript","permalink":"https://dullyshin.github.io/categories/Programming/JavaScript/"}],"tags":[]},{"title":"JSTL-substring 뒤에서 문자 자르기","slug":"JSTL-substring","date":"2019-08-08T04:28:51.000Z","updated":"2019-08-30T07:25:45.081Z","comments":true,"path":"2019/08/08/JSTL-substring/","link":"","permalink":"https://dullyshin.github.io/2019/08/08/JSTL-substring/","excerpt":"","text":"JSTL substring 문자 뒤에서 자르기JSTL은 fn:substring을 사용하여 문자를 자를수 있습니다.만약 aaaa3 문자의 맨 마지막 숫자만 가져오고 싶을때 아래와 같이 사용할 수 있습니다. 12345678910111213141516&lt;%@ taglib uri = &quot;http://java.sun.com/jsp/jstl/core&quot; prefix = &quot;c&quot; %&gt;&lt;%@ taglib uri = &quot;http://java.sun.com/jsp/jstl/functions&quot; prefix = &quot;fn&quot; %&gt;&lt;html&gt; &lt;head&gt; &lt;title&gt;문자열 뒤에서 자르기&lt;/title&gt; &lt;/head&gt; &lt;body&gt; &lt;c:set var = &quot;string1&quot; value = &quot;aaaa3&quot;/&gt; &lt;c:set var = &quot;length&quot; value = &quot;$&#123;fn:length(string1)&#125;&quot;/&gt; &lt;c:set var = &quot;string2&quot; value = &quot;$&#123;fn:substring(string1, length -1, length)&#125;&quot; /&gt; &lt;h1&gt;뒤에서 자르기 : $&#123;string2&#125;&lt;/h1&gt; &lt;/body&gt;&lt;/html&gt; 결과는 아래와 같습니다. 1뒤에서 자르기 : 3 JSTL 문자 자르기123456789101112131415&lt;%@ taglib uri = &quot;http://java.sun.com/jsp/jstl/core&quot; prefix = &quot;c&quot; %&gt;&lt;%@ taglib uri = &quot;http://java.sun.com/jsp/jstl/functions&quot; prefix = &quot;fn&quot; %&gt;&lt;html&gt; &lt;head&gt; &lt;title&gt;Using JSTL Functions&lt;/title&gt; &lt;/head&gt; &lt;body&gt; &lt;c:set var = &quot;string1&quot; value = &quot;This is first String.&quot;/&gt; &lt;c:set var = &quot;string2&quot; value = &quot;$&#123;fn:substring(string1, 5, 15)&#125;&quot; /&gt; &lt;p&gt;Final sub string : $&#123;string2&#125;&lt;/p&gt; &lt;/body&gt;&lt;/html&gt; 1Final sub string : is first S 123456789101112131415&lt;%@ taglib uri = &quot;http://java.sun.com/jsp/jstl/core&quot; prefix = &quot;c&quot; %&gt;&lt;%@ taglib uri = &quot;http://java.sun.com/jsp/jstl/functions&quot; prefix = &quot;fn&quot; %&gt;&lt;html&gt; &lt;head&gt; &lt;title&gt;Using JSTL Functions&lt;/title&gt; &lt;/head&gt; &lt;body&gt; &lt;c:set var = &quot;num&quot; value = &quot;1234567890&quot;/&gt; &lt;c:set var = &quot;numSubString&quot; value = &quot;$&#123;fn:substring(num, 5, 7)&#125;&quot; /&gt; &lt;p&gt;subtring : $&#123;numSubString&#125;&lt;/p&gt; &lt;/body&gt;&lt;/html&gt; 1subtring : 67 Reference https://www.tutorialspoint.com/jsp/jstl_function_substring.htm Related Posts (jstl) ForEach 문 JSTL-if, if else 5분안에 정복하기 HTML 기초 알아봅시다!","categories":[{"name":"Programming","slug":"Programming","permalink":"https://dullyshin.github.io/categories/Programming/"},{"name":"JSTL","slug":"Programming/JSTL","permalink":"https://dullyshin.github.io/categories/Programming/JSTL/"}],"tags":[{"name":"substring 문자 자르기","slug":"substring-문자-자르기","permalink":"https://dullyshin.github.io/tags/substring-문자-자르기/"},{"name":"JSTL-substring 문자 자르기","slug":"JSTL-substring-문자-자르기","permalink":"https://dullyshin.github.io/tags/JSTL-substring-문자-자르기/"},{"name":"jstl substring","slug":"jstl-substring","permalink":"https://dullyshin.github.io/tags/jstl-substring/"},{"name":"jstl fn","slug":"jstl-fn","permalink":"https://dullyshin.github.io/tags/jstl-fn/"},{"name":"jstl substring 뒤에서","slug":"jstl-substring-뒤에서","permalink":"https://dullyshin.github.io/tags/jstl-substring-뒤에서/"},{"name":"jstl substring 뒤에서 자르기","slug":"jstl-substring-뒤에서-자르기","permalink":"https://dullyshin.github.io/tags/jstl-substring-뒤에서-자르기/"}]},{"title":"JSTL-if, if else 5분안에 정복하기","slug":"JSTL-if","date":"2019-08-08T04:03:56.000Z","updated":"2023-08-21T14:17:16.968Z","comments":true,"path":"2019/08/08/JSTL-if/","link":"","permalink":"https://dullyshin.github.io/2019/08/08/JSTL-if/","excerpt":"","text":"IF문 : &lt;c:if&gt;단순 if문을 구성할때 사용할 수 있습니다. 1234567891011121314&lt;%@ taglib uri = &quot;http://java.sun.com/jsp/jstl/core&quot; prefix = &quot;c&quot; %&gt;&lt;html&gt; &lt;head&gt; &lt;title&gt;&lt;c:if&gt; Tag Example&lt;/title&gt; &lt;/head&gt; &lt;body&gt; &lt;c:set var = &quot;salary&quot; scope = &quot;session&quot; value = &quot;$&#123;2000*2&#125;&quot;/&gt; &lt;c:if test = &quot;$&#123;salary &gt; 2000&#125;&quot;&gt; &lt;p&gt;My salary is: &lt;c:out value = &quot;$&#123;salary&#125;&quot;/&gt;&lt;p&gt; &lt;/c:if&gt; &lt;/body&gt;&lt;/html&gt; 위의 결과는 아래와 같습니다. 1My salary is: 4000 IF ~ ELSE 문 : &lt;c:choose&gt;java에서 많이 사용하는 if~else 문의 경우 jstl에서는 &lt;c:choose&gt;를 이용합니다. 123456789101112131415161718192021222324252627&lt;%@ taglib uri = &quot;http://java.sun.com/jsp/jstl/core&quot; prefix = &quot;c&quot; %&gt;&lt;html&gt; &lt;head&gt; &lt;title&gt;&lt;c:choose&gt; Tag Example&lt;/title&gt; &lt;/head&gt; &lt;body&gt; &lt;c:set var = &quot;salary&quot; scope = &quot;session&quot; value = &quot;$&#123;2000*2&#125;&quot;/&gt; &lt;p&gt;Your salary is : &lt;c:out value = &quot;$&#123;salary&#125;&quot;/&gt;&lt;/p&gt; &lt;c:choose&gt; &lt;c:when test = &quot;$&#123;salary &lt;= 0&#125;&quot;&gt; Salary is very low to survive. &lt;/c:when&gt; &lt;c:when test = &quot;$&#123;salary &gt; 1000&#125;&quot;&gt; Salary is very good. &lt;/c:when&gt; &lt;c:otherwise&gt; No comment sir... &lt;/c:otherwise&gt; &lt;/c:choose&gt; &lt;/body&gt;&lt;/html&gt; 12Your salary is : 4000Salary is very good. 비교기호 : eq, ne, empty, not emptyif문을 사용할때에는 반드시 값과 비교를 해서 결과를 얻기때문에, jstl에서는 eq, ne와 같은 비교기호를 사용할 수 있습니다. eq (==)동일한 값인지 확인하기 위해 사용합니다. 1234567891011&lt;c:if test=&quot;$&#123;name == &apos;둘리&apos;&#125;&quot;&gt;&lt;c:if test=&quot;$&#123;name eq &apos;둘리&apos;&#125;&quot;&gt;&lt;c:if test=&quot;$&#123;name == null&#125;&quot;&gt;&lt;c:if test=&quot;$&#123;name eq null&#125;&quot;&gt;&lt;c:if test=&quot;$&#123;age == 7&#125;&quot;&gt;&lt;c:if test=&quot;$&#123;age eq 7&#125;&quot;&gt; ne (!=)동일하지 않은 값을 확인하기 위해 사용합니다. 1234567&lt;c:if test=&quot;$&#123;name != &apos;둘리&apos;&#125;&quot;&gt;&lt;c:if test=&quot;$&#123;name ne &apos;둘리&apos;&#125;&quot;&gt;&lt;c:if test=&quot;$&#123;age != 5&#125;&quot;&gt;&lt;c:if test=&quot;$&#123;age ne 5&#125;&quot;&gt; empty (== null)비교하는 값이 null 인지 확인할때 사용합니다.null이 아닌경우를 표현할때는 !empty나 not empty 표현합니다. 12345&lt;c:if test=&quot;$&#123;empty name&#125;&quot;&gt;&lt;c:if test=&quot;$&#123;not empty name&#125;&quot;&gt;&lt;c:if test=&quot;$&#123;!empty name&#125;&quot;&gt; 논리 연산자 and &amp;&amp; : 모두 참일때 참이 됩니다. 123&lt;c:if test=&quot;$&#123;a &gt; b and c &lt; d&#125;&quot;&gt;&lt;c:if test=&quot;$&#123;a &gt; b &amp;&amp; c &lt; d&#125;&quot;&gt; or || : 둘중 하나라도 참이면 참이 됩니다. 123&lt;c:if test=&quot;$&#123;a &gt; b or c &lt; d&#125;&quot;&gt;&lt;c:if test=&quot;$&#123;a &gt; b || c &lt; d&#125;&quot;&gt; not ! : 논리를 반전합니다. 참이면 거짓으로 변경되고, 거짓이면 참으로 변환됩니다. 123&lt;c:if test=&quot;$&#123;not a == &apos;&apos;&#125;&quot;&gt;&lt;c:if test=&quot;$&#123;! a == &apos;&apos;&#125;&quot;&gt; Reference https://www.tutorialspoint.com/jsp/jstl_core_if_tag.htm Related Posts (jstl) ForEach 문 JSTL-substring 뒤에서 문자 자르기 HTML 기초 알아봅시다!","categories":[{"name":"Programming","slug":"Programming","permalink":"https://dullyshin.github.io/categories/Programming/"},{"name":"JSTL","slug":"Programming/JSTL","permalink":"https://dullyshin.github.io/categories/Programming/JSTL/"}],"tags":[{"name":"jstl","slug":"jstl","permalink":"https://dullyshin.github.io/tags/jstl/"},{"name":"JSTL if","slug":"JSTL-if","permalink":"https://dullyshin.github.io/tags/JSTL-if/"},{"name":"JSTL if문","slug":"JSTL-if문","permalink":"https://dullyshin.github.io/tags/JSTL-if문/"},{"name":"jstl if else","slug":"jstl-if-else","permalink":"https://dullyshin.github.io/tags/jstl-if-else/"},{"name":"jstl if else문","slug":"jstl-if-else문","permalink":"https://dullyshin.github.io/tags/jstl-if-else문/"},{"name":"if","slug":"if","permalink":"https://dullyshin.github.io/tags/if/"}]},{"title":"HTML-버튼에 링크 거는 방법","slug":"HTML-buttonLink","date":"2019-08-07T07:40:32.000Z","updated":"2021-10-25T06:33:48.347Z","comments":true,"path":"2019/08/07/HTML-buttonLink/","link":"","permalink":"https://dullyshin.github.io/2019/08/07/HTML-buttonLink/","excerpt":"","text":"a.button { -webkit-appearance: button; -moz-appearance: button; appearance: button; text-decoration: none; color: initial; } HTML-버튼에 링크 거는 방법HTML123&lt;form action=\"http://google.com\"&gt; &lt;input type=\"submit\" value=\"Go to Google\" /&gt;&lt;/form&gt; &lt;input type=&quot;submit&quot;/&gt; 말고도 &lt;button type=&quot;submit&quot;&gt;를 사용할 수도 있습니다. CSScss를 사용할 수 있다면, &lt;a&gt;태그를 사용해서 버튼 모양처럼 변경할 수 있습니다. 1&lt;a href=\"http://google.com\" class=\"button\"&gt;Go to Google&lt;/a&gt; 12345678a.button &#123; -webkit-appearance: button; -moz-appearance: button; appearance: button; text-decoration: none; color: initial;&#125; JavaScript자바스크립트를 사용할 수 있다면 아래와 같이 사용하면 됩니다. 12345678//현재 탭으로 열기&lt;input type=\"button\" onclick=\"location.href='http://google.com';\" value=\"Go to Google\" /&gt;//새로운 탭으로 열기&lt;input type=\"button\" value=\"버튼\" onClick=\"window.open('http://google.com')\"&gt;//jsp를 이용할 경우&lt;button type=\"button\" onclick=\"location.href='joinUs.jsp'\"&gt;회원가입&lt;/button&gt; Reference https://stackoverflow.com/questions/2906582/how-to-create-an-html-button-that-acts-like-a-link Related Posts HTML 이미지 링크거는 법 HTML 간단하게 표 만들기 Mailto 태그","categories":[{"name":"Programming","slug":"Programming","permalink":"https://dullyshin.github.io/categories/Programming/"},{"name":"HTML","slug":"Programming/HTML","permalink":"https://dullyshin.github.io/categories/Programming/HTML/"}],"tags":[{"name":"html button link","slug":"html-button-link","permalink":"https://dullyshin.github.io/tags/html-button-link/"},{"name":"html 버튼 링크","slug":"html-버튼-링크","permalink":"https://dullyshin.github.io/tags/html-버튼-링크/"},{"name":"버튼 링크","slug":"버튼-링크","permalink":"https://dullyshin.github.io/tags/버튼-링크/"},{"name":"버튼에 링크 연결하기","slug":"버튼에-링크-연결하기","permalink":"https://dullyshin.github.io/tags/버튼에-링크-연결하기/"}]},{"title":"HTML 간단하게 표 만들기","slug":"HTML-table","date":"2019-08-07T06:00:45.000Z","updated":"2019-08-07T08:01:36.032Z","comments":true,"path":"2019/08/07/HTML-table/","link":"","permalink":"https://dullyshin.github.io/2019/08/07/HTML-table/","excerpt":"","text":"HTML 표 만들기Overview표 형식으로 데이터를 표현하는 것을 웹사이트에서 쉽게 찾아 볼 수 있습니다. 오늘은 그 표를 html 형식으로 어떻게 만드는지 알아보겠습니다.저의 차트에는 CSS가 미리 적용되어 있습니다. 만약 필요하시다면 아래의 ‘CSS 확인하기’를 클릭하여 확인해주세요. CSS 확인하기 12345678910111213141516171819202122232425262728293031323334353637383940414243444546*, *:before, *:after &#123; -moz-box-sizing: border-box; -webkit-box-sizing: border-box; box-sizing: border-box;&#125;body &#123; font-family: 'Lato', sans-serif; color: #333; font-weight: 400; font-size: 16px;&#125;table &#123; max-width: 960px; margin: 80px auto;&#125;caption &#123; font-size: 18px; font-weight: 400; padding: 12px 0;&#125;thead th &#123; background: #0c3390; color: #fff; font-weight: initial;&#125;tr &#123; background: #f1f1f1; &#125;tr:nth-child(2n) &#123; background: #e0e0e0; &#125;th, td &#123; text-align: left; padding: 24px;&#125;tfoot tr &#123; background: none; &#125;tfoot td &#123; padding: 12px 2px; font-style: italic; color: #8a97a0;&#125; Basic TableHTML &lt;table&gt;태그를 사용하여 표를 만들 수 있습니다. 시작태그와 끝태그가 존재하고, 그 안에 테이블 row, cell이 들어갑니다. 1&lt;table&gt;&lt;/table&gt; 이제 테이블의 row 를 만들어 봅시다. 간단히 생각해서 테이블의 가로를 생각하시면 됩니다. &lt;tr&gt; 태그를 사용하면 표의 가로줄을 만들 수 있습니다. 123&lt;table&gt; &lt;tr&gt;&lt;/tr&gt;&lt;/table&gt; 그러면 한 줄의 테이블안에 각 cell을 만들기위해서는 &lt;td&gt; 태그가 필요합니다. &lt;td&gt;태그는 표의 세로줄을 뜻합니다.위에서 알려준 방법으로 표를 그려보았어요. 12345678910111213141516171819202122&lt;table&gt; &lt;tr&gt; &lt;td&gt;No&lt;/td&gt; &lt;td&gt;Name&lt;/td&gt; &lt;td&gt;Age&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;1&lt;/td&gt; &lt;td&gt;둘리&lt;/td&gt; &lt;td&gt;43&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;2&lt;/td&gt; &lt;td&gt;곰돌이 푸&lt;/td&gt; &lt;td&gt;52&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;3&lt;/td&gt; &lt;td&gt;스티치&lt;/td&gt; &lt;td&gt;15&lt;/td&gt; &lt;/tr&gt;&lt;/table&gt; Table Header Element아주 기초적인 테이블을 만들었지만 아직 표의 맨 윗줄이 표 속성의 이름을 나타낸다는 표시가 안되어있어 컬럼 명인지 내용인지 구분이 가지 않습니다. 이때 Table Header Element인 &lt;thead&gt;를 사용하여 다른 데이터들과 구분지여서 사용할 수 있습니다. 가장 위쪽의 &lt;tr&gt; 태그를 &lt;thead&gt;로 감싸주세요. 그 후 &lt;thead&gt;안에 있는 &lt;td&gt; 태그를 &lt;th&gt; 태그로 바꾸어 주세요. 자 지금 우리는 테이블의 머리를 구분하였습니다. 그러면 몸통부분도 분리할 수 있겠죠. &lt;tbody&gt; 태그를 사용하시면 됩니다. &lt;tbody&gt;를 사용해 표의 나머지 부분을 감싸 주세요. 1234567891011121314151617181920212223242526&lt;table&gt; &lt;thead&gt; &lt;tr&gt; &lt;th&gt;No&lt;/th&gt; &lt;th&gt;Name&lt;/th&gt; &lt;th&gt;Age&lt;/th&gt; &lt;/tr&gt; &lt;/thead&gt; &lt;tbody&gt; &lt;tr&gt; &lt;td&gt;1&lt;/td&gt; &lt;td&gt;둘리&lt;/td&gt; &lt;td&gt;43&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;2&lt;/td&gt; &lt;td&gt;곰돌이 푸&lt;/td&gt; &lt;td&gt;52&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;3&lt;/td&gt; &lt;td&gt;스티치&lt;/td&gt; &lt;td&gt;15&lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt;&lt;/table&gt; Table Foot Element표의 머리와 몸통을 구분하였다면 당연하게도 발부분 ‘foot’ 이 존재하겠죠. &lt;tfoot&gt;태그로 사용됩니다. 하지만 언제 사용될까요? 일반적으로 테이블의 개요, 테이블을 요약할때 사용합니다. 테이블의 총합, 평균등을 나타낼 수 있겠죠. 아니면 테이블을 만든 사람의 Copyright 를 적을 수 있습니다. 123456789101112131415161718192021222324252627282930313233&lt;table&gt; &lt;thead&gt; &lt;tr&gt; &lt;th&gt;No&lt;/th&gt; &lt;th&gt;Name&lt;/th&gt; &lt;th&gt;Age&lt;/th&gt; &lt;/tr&gt; &lt;/thead&gt; &lt;tbody&gt; &lt;tr&gt; &lt;td&gt;1&lt;/td&gt; &lt;td&gt;둘리&lt;/td&gt; &lt;td&gt;43&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;2&lt;/td&gt; &lt;td&gt;곰돌이 푸&lt;/td&gt; &lt;td&gt;52&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;3&lt;/td&gt; &lt;td&gt;스티치&lt;/td&gt; &lt;td&gt;15&lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt; &lt;tfoot&gt; &lt;tr&gt; &lt;td&gt; 나이의 총 합은 110 입니다. &lt;/td&gt; &lt;/tr&gt; &lt;/tfoot&gt;&lt;/table&gt; Caption Element자 이제 마지막 입니다. &lt;caption&gt; 그를 사용해서 표의 제목을 나타낼수 있습니다. 기본적으로 &lt;table&gt; 태그의 바로 뒤에 붙여서 사용합니다. 123456789101112131415161718192021222324252627282930313233343536&lt;table&gt; &lt;caption&gt; 아주 쉬운 표 만들기 &lt;/caption&gt; &lt;thead&gt; &lt;tr&gt; &lt;th&gt;No&lt;/th&gt; &lt;th&gt;Name&lt;/th&gt; &lt;th&gt;Age&lt;/th&gt; &lt;/tr&gt; &lt;/thead&gt; &lt;tbody&gt; &lt;tr&gt; &lt;td&gt;1&lt;/td&gt; &lt;td&gt;둘리&lt;/td&gt; &lt;td&gt;43&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;2&lt;/td&gt; &lt;td&gt;곰돌이 푸&lt;/td&gt; &lt;td&gt;52&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;3&lt;/td&gt; &lt;td&gt;스티치&lt;/td&gt; &lt;td&gt;15&lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt; &lt;tfoot&gt; &lt;tr&gt; &lt;td&gt; 나이의 총 합은 110 입니다. &lt;/td&gt; &lt;/tr&gt; &lt;/tfoot&gt;&lt;/table&gt; HTML에 관련되어 더 궁금한 점이 있다면 아래의 링크를 확인해주세요. 감사합니다! Reference https://www.freecodecamp.org/news/a-step-by-step-guide-to-getting-started-with-html-tables-7f43b18f962b/ Related Posts HTML 이미지 링크거는 법 HTML 에디터 (jsFiddle,메모장)","categories":[{"name":"Programming","slug":"Programming","permalink":"https://dullyshin.github.io/categories/Programming/"},{"name":"HTML","slug":"Programming/HTML","permalink":"https://dullyshin.github.io/categories/Programming/HTML/"}],"tags":[{"name":"HTML 표 만들기","slug":"HTML-표-만들기","permalink":"https://dullyshin.github.io/tags/HTML-표-만들기/"},{"name":"html 테이블 만들기","slug":"html-테이블-만들기","permalink":"https://dullyshin.github.io/tags/html-테이블-만들기/"},{"name":"HTML 표 그리기","slug":"HTML-표-그리기","permalink":"https://dullyshin.github.io/tags/HTML-표-그리기/"},{"name":"html 테이블 그리기","slug":"html-테이블-그리기","permalink":"https://dullyshin.github.io/tags/html-테이블-그리기/"},{"name":"html 테이블","slug":"html-테이블","permalink":"https://dullyshin.github.io/tags/html-테이블/"},{"name":"html 표","slug":"html-표","permalink":"https://dullyshin.github.io/tags/html-표/"},{"name":"html table","slug":"html-table","permalink":"https://dullyshin.github.io/tags/html-table/"},{"name":"html chart","slug":"html-chart","permalink":"https://dullyshin.github.io/tags/html-chart/"}]},{"title":"ECharts 바차트 색상 변경!","slug":"Echarts-barChartDiffColor","date":"2019-07-26T06:32:51.000Z","updated":"2020-01-07T02:25:10.198Z","comments":true,"path":"2019/07/26/Echarts-barChartDiffColor/","link":"","permalink":"https://dullyshin.github.io/2019/07/26/Echarts-barChartDiffColor/","excerpt":"","text":"Echarts 바차트 색상 변경오늘은 여러가지 색상으로 표현된 바차트를 그려보겠습니다. 혹시 Echarts 에 관해 잘 모르신다면 ECharts를 통해 5분안에 차트를 만들자!을 통해 기본적으로 만드는 법을 아셔도 좋습니다. Echarts를 통해 차트를 그리면 기본적으로 1가지 시르즈에 1가지 색상으로만 표현 할 수 있습니다.그리고 색상을 정하지 않아도 기본적으로 Echarts의 기본 색상열을 통해 차트의 색상이 변합니다. 색상은 기본적으로 11가지가 준비되어 있습니다. (이미지는 클릭하면 크게 확인할 수 있습니다.)[&#39;#c23531&#39;,&#39;#2f4554&#39;, &#39;#61a0a8&#39;, &#39;#d48265&#39;, &#39;#91c7ae&#39;,&#39;#749f83&#39;, &#39;#ca8622&#39;, &#39;#bda29a&#39;,&#39;#6e7074&#39;, &#39;#546570&#39;, &#39;#c4ccd3&#39;] 그 중 5가지만 눈으로 색을 확인해 보자면 아래와 같습니다. 차트 색상 임의로 변경하기위의 기본색상 말고 다른 색상으로 변경하고 싶으시다면 series[i]-bar.itemStyle.color를 변경하시면 됩니다.색상 설정은 ‘blue’, ‘red’처럼 영어색으로 변경하셔도 되고, Hex색상인 ‘#626A8E’ 형식을 사용하셔도 됩니다.아래의 예시로 확인해보시죠. 123456789101112131415161718192021222324252627&lt;div id=&quot;chart1&quot; style=&quot;width:600px;height:400px;&quot;&gt;&lt;/div&gt;&lt;script&gt; var myChart1 = echarts.init(document.getElementById(&apos;chart1&apos;)); var option1 = &#123; xAxis: &#123; type: &apos;category&apos;, data: [&apos;A&apos;, &apos;B&apos;] &#125;, yAxis: &#123; type: &apos;value&apos; &#125;, tooltip:&#123;&#125;, series: [&#123; data: [120, 200], type: &apos;bar&apos;, //아래의 itemStyle.color를 통해 차트의 색상을 변경할 수 있습니다. itemStyle:&#123; color: &apos;#626A8E&apos;, &#125;, &#125;] &#125;; myChart1.setOption(option1);&lt;/script&gt; 하지만 만약에 A와 B의 색상을 다르게 변경하고 싶다면 어떻게 해야할까요??바로 아래처럼 설정하면 하나의 시리즈 안에서로 다른 색상을 포현할 수 있습니다. 1234567891011121314151617181920212223242526var myChart2 = echarts.init(document.getElementById(&apos;chart2&apos;)); option2 = &#123; xAxis: &#123; type: &apos;category&apos;, data: [&apos;A&apos;, &apos;B&apos;] &#125;, yAxis: &#123; type: &apos;value&apos; &#125;, tooltip:&#123;&#125;, series: [&#123; data:[ &#123; value: 120, itemStyle: &#123;color: &apos;blue&apos;&#125;, &#125;, &#123; value: 200, itemStyle: &#123;color: &apos;red&apos;&#125;, &#125;], //위의 data를 2개로 분리하여 색상을 다르게 설정할 수 있습니다. type: &apos;bar&apos;, &#125;] &#125;; myChart2.setOption(option2); 자 위와 같이 설정하면 차트의 색상을 원하는대로 변경할 수 있습니다.원하는 결과 얻고 가시길 빌어요! Reference https://echarts.apache.org/ Related Posts ECharts를 통해 5분안에 차트를 만들자! ECharts를 통해 간단한 Heatmap 만들기! ECharts 바차트 색상 변경! var myChart1 = echarts.init(document.getElementById('chart1')); var option1 = { xAxis: { type: 'category', data: ['A', 'B'] }, yAxis: { type: 'value' }, tooltip:{}, series: [{ data: [120, 200], type: 'bar', itemStyle:{ color: '#626A8E', }, }] }; myChart1.setOption(option1); var myChart2 = echarts.init(document.getElementById('chart2')); option2 = { xAxis: { type: 'category', data: ['A', 'B'] }, yAxis: { type: 'value' }, tooltip:{}, series: [{ data:[ { value: 120, itemStyle: {color: 'blue'}, }, { value: 200, itemStyle: {color: 'red'}, }], type: 'bar', }] }; myChart2.setOption(option2);","categories":[{"name":"Programming","slug":"Programming","permalink":"https://dullyshin.github.io/categories/Programming/"},{"name":"Echarts","slug":"Programming/Echarts","permalink":"https://dullyshin.github.io/categories/Programming/Echarts/"}],"tags":[{"name":"Echarts","slug":"Echarts","permalink":"https://dullyshin.github.io/tags/Echarts/"},{"name":"이차트","slug":"이차트","permalink":"https://dullyshin.github.io/tags/이차트/"},{"name":"echart","slug":"echart","permalink":"https://dullyshin.github.io/tags/echart/"},{"name":"echart 한글","slug":"echart-한글","permalink":"https://dullyshin.github.io/tags/echart-한글/"},{"name":"echarts 한글","slug":"echarts-한글","permalink":"https://dullyshin.github.io/tags/echarts-한글/"},{"name":"echarts bar chart color","slug":"echarts-bar-chart-color","permalink":"https://dullyshin.github.io/tags/echarts-bar-chart-color/"},{"name":"echarts 바 차트 색상","slug":"echarts-바-차트-색상","permalink":"https://dullyshin.github.io/tags/echarts-바-차트-색상/"},{"name":"echarts 색상","slug":"echarts-색상","permalink":"https://dullyshin.github.io/tags/echarts-색상/"}]},{"title":"ECharts를 통해 간단한 Heatmap 만들기!","slug":"Echarts-heatmap","date":"2019-07-26T06:32:51.000Z","updated":"2020-03-12T01:43:51.918Z","comments":true,"path":"2019/07/26/Echarts-heatmap/","link":"","permalink":"https://dullyshin.github.io/2019/07/26/Echarts-heatmap/","excerpt":"","text":"저번에는 Echarts를 설치한 후 Bar 차트를 간단하게 만들어 보았었습니다. 못 보신 분들은 아래의 링크를 클릭하여 주세요. ECharts를 통해 5분안에 차트를 만들자! 이번에는 Heatmap 차트를 만들어 볼 예정입니다! 간단한 차트 그리기차트를 그리기 전에, 우리는 DOM container를 준비해야합니다. 그리고 꼭 넓이와 높이를 지정해 주세요. 지정하지 않는다면 너무 작게 그려져 화면에 차트가 보이지 않을 수 있습니다. 1234&lt;body&gt;&lt;!-- 높이와 너비가 지정된 Dom 을 생성합니다 --&gt; &lt;div id=&quot;heatchart&quot; style=&quot;width:800px; height:400px;&quot;&gt;&lt;/div&gt;&lt;/body&gt; ECharts 객체를 echarts.init 을 사용해 준비합니다. setOption을 통해 간단한 Heatmap 차트를 만듭시다. 아래에 전체 코드가 있습니다. 12// DOM을 준비한 후 echart 객체를 만듭니다. var myChart = echarts.init(document.getElementById(&apos;heatchart&apos;)); 차트에 필요한 x축 데이터와 y축 데이터를 생성합니다. 123456789//시간을 이용해 차트의 가로 x축을 생성합니다. var hours = [&apos;12a&apos;, &apos;1a&apos;, &apos;2a&apos;, &apos;3a&apos;, &apos;4a&apos;, &apos;5a&apos;, &apos;6a&apos;, &apos;7a&apos;, &apos;8a&apos;, &apos;9a&apos;,&apos;10a&apos;,&apos;11a&apos;, &apos;12p&apos;, &apos;1p&apos;, &apos;2p&apos;, &apos;3p&apos;, &apos;4p&apos;, &apos;5p&apos;, &apos;6p&apos;, &apos;7p&apos;, &apos;8p&apos;, &apos;9p&apos;, &apos;10p&apos;, &apos;11p&apos;];//요일을 이용해 차트의 세로 y축을 생성합니다.var days = [&apos;Saturday&apos;, &apos;Friday&apos;, &apos;Thursday&apos;, &apos;Wednesday&apos;, &apos;Tuesday&apos;, &apos;Monday&apos;, &apos;Sunday&apos;]; 차트안에 실제로 나타나야하는 데이터를 생성합니다. 12345678910//지금은 [y축, x축, 실제값] 순서로 입력하지만,//아래에서 처럼 데이터를 변환하지 않을거면 [x축, y축, 실제값] 순서로 입력합니다.var data = [[0,0,5],[0,1,1],[0,2,0],[0,3,0],[0,4,0],[0,5,0],[0,6,0],[0,7,0],[0,8,0],[0,9,0],[0,10,0],[0,11,2],[0,12,4],[0,13,1],[0,14,1],[0,15,3],[0,16,4],[0,17,6],[0,18,4],[0,19,4],[0,20,3],[0,21,3],[0,22,2],[0,23,5],[1,0,7],[1,1,0],[1,2,0],[1,3,0],[1,4,0],[1,5,0],[1,6,0],[1,7,0],[1,8,0],[1,9,0],[1,10,5],[1,11,2],[1,12,2],[1,13,6],[1,14,9],[1,15,11],[1,16,6],[1,17,7],[1,18,8],[1,19,12],[1,20,5],[1,21,5],[1,22,7],[1,23,2],[2,0,1],[2,1,1],[2,2,0],[2,3,0],[2,4,0],[2,5,0],[2,6,0],[2,7,0],[2,8,0],[2,9,0],[2,10,3],[2,11,2],[2,12,1],[2,13,9],[2,14,8],[2,15,10],[2,16,6],[2,17,5],[2,18,5],[2,19,5],[2,20,7],[2,21,4],[2,22,2],[2,23,4],[3,0,7],[3,1,3],[3,2,0],[3,3,0],[3,4,0],[3,5,0],[3,6,0],[3,7,0],[3,8,1],[3,9,0],[3,10,5],[3,11,4],[3,12,7],[3,13,14],[3,14,13],[3,15,12],[3,16,9],[3,17,5],[3,18,5],[3,19,10],[3,20,6],[3,21,4],[3,22,4],[3,23,1],[4,0,1],[4,1,3],[4,2,0],[4,3,0],[4,4,0],[4,5,1],[4,6,0],[4,7,0],[4,8,0],[4,9,2],[4,10,4],[4,11,4],[4,12,2],[4,13,4],[4,14,4],[4,15,14],[4,16,12],[4,17,1],[4,18,8],[4,19,5],[4,20,3],[4,21,7],[4,22,3],[4,23,0],[5,0,2],[5,1,1],[5,2,0],[5,3,3],[5,4,0],[5,5,0],[5,6,0],[5,7,0],[5,8,2],[5,9,0],[5,10,4],[5,11,1],[5,12,5],[5,13,10],[5,14,5],[5,15,7],[5,16,11],[5,17,6],[5,18,0],[5,19,5],[5,20,3],[5,21,4],[5,22,2],[5,23,0],[6,0,1],[6,1,0],[6,2,0],[6,3,0],[6,4,0],[6,5,0],[6,6,0],[6,7,0],[6,8,0],[6,9,0],[6,10,1],[6,11,0],[6,12,2],[6,13,1],[6,14,3],[6,15,4],[6,16,0],[6,17,0],[6,18,0],[6,19,0],[6,20,1],[6,21,2],[6,22,2],[6,23,6]];// [x축, y축, 실제값] 순서로 변환합니다.data = data.map(function (item) &#123; return [item[1], item[0], item[2] || &apos;-&apos;];&#125;); 만약 데이터에 숫자 ‘0’ 값이 들어가면 ‘-‘가 입력되게 했습니다. 이렇게 설정하면 차트에는 아무 값도 들어가지 않습니다.차트에 숫자 ‘0’을 표시하고 싶다면 return 부분을 [item[1], item[0], item[2]]; 으로 바꾸면 됩니다. 위에서 생성한 x축, y축 값 그리고 실제 데이터 값을 차트 옵션에 설정합니다. 그 후 setOption을 통해 차트에 적용합니다. 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556// 차트 속성과 데이터를 지정합니다. var option = &#123; tooltip: &#123; position: &apos;top&apos; &#125;, animation: false, grid: &#123; height: &apos;50%&apos;, y: &apos;10%&apos; &#125;, xAxis: &#123; type: &apos;category&apos;, //x축의 데이터를 입력 data: hours, splitArea: &#123; show: true &#125; &#125;, yAxis: &#123; type: &apos;category&apos;, //y축의 데이터를 입력 data: days, splitArea: &#123; show: true &#125; &#125;, //차트 하단에 나타낸 비주얼맵 설정 visualMap: &#123; min: 0, max: 10, calculable: true, orient: &apos;horizontal&apos;, left: &apos;center&apos;, bottom: &apos;15%&apos; &#125;, series: [&#123; name: &apos;Punch Card&apos;, type: &apos;heatmap&apos;, //실제 데이터 data: data, label: &#123; normal: &#123; show: true &#125; &#125;, itemStyle: &#123; emphasis: &#123; shadowBlur: 10, shadowColor: &apos;rgba(0, 0, 0, 0.5)&apos; &#125; &#125; &#125;] &#125;; // 위에서 설정한 속성을 차트에 반영합니다. myChart.setOption(option); 다시한번 위에서 정리한 모든 소스를 확인해 봅시다! 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt; &lt;meta charset=&quot;utf-8&quot;&gt; &lt;title&gt;ECharts&lt;/title&gt; &lt;!-- 다운받은 echarts 파일 --&gt; &lt;script src=&quot;echarts.js&quot;&gt;&lt;/script&gt;&lt;/head&gt;&lt;body&gt; &lt;!-- 높이와 너비가 지정된 Dom 을 생성합니다 --&gt; &lt;div id=&quot;heatchart&quot; style=&quot;width: 800px; height:400px;&quot;&gt;&lt;/div&gt; &lt;script type=&quot;text/javascript&quot;&gt; // DOM을 준비한 후 echart 객체를 만듭니다. var myChart = echarts.init(document.getElementById(&apos;heatchart&apos;)); var hours = [&apos;12a&apos;, &apos;1a&apos;, &apos;2a&apos;, &apos;3a&apos;, &apos;4a&apos;, &apos;5a&apos;, &apos;6a&apos;, &apos;7a&apos;, &apos;8a&apos;, &apos;9a&apos;,&apos;10a&apos;,&apos;11a&apos;, &apos;12p&apos;, &apos;1p&apos;, &apos;2p&apos;, &apos;3p&apos;, &apos;4p&apos;, &apos;5p&apos;, &apos;6p&apos;, &apos;7p&apos;, &apos;8p&apos;, &apos;9p&apos;, &apos;10p&apos;, &apos;11p&apos;]; var days = [&apos;Saturday&apos;, &apos;Friday&apos;, &apos;Thursday&apos;, &apos;Wednesday&apos;, &apos;Tuesday&apos;, &apos;Monday&apos;, &apos;Sunday&apos;]; var data = [[0,0,5],[0,1,1],[0,2,0],[0,3,0],[0,4,0],[0,5,0],[0,6,0],[0,7,0],[0,8,0],[0,9,0],[0,10,0],[0,11,2],[0,12,4],[0,13,1],[0,14,1],[0,15,3],[0,16,4],[0,17,6],[0,18,4],[0,19,4],[0,20,3],[0,21,3],[0,22,2],[0,23,5],[1,0,7],[1,1,0],[1,2,0],[1,3,0],[1,4,0],[1,5,0],[1,6,0],[1,7,0],[1,8,0],[1,9,0],[1,10,5],[1,11,2],[1,12,2],[1,13,6],[1,14,9],[1,15,11],[1,16,6],[1,17,7],[1,18,8],[1,19,12],[1,20,5],[1,21,5],[1,22,7],[1,23,2],[2,0,1],[2,1,1],[2,2,0],[2,3,0],[2,4,0],[2,5,0],[2,6,0],[2,7,0],[2,8,0],[2,9,0],[2,10,3],[2,11,2],[2,12,1],[2,13,9],[2,14,8],[2,15,10],[2,16,6],[2,17,5],[2,18,5],[2,19,5],[2,20,7],[2,21,4],[2,22,2],[2,23,4],[3,0,7],[3,1,3],[3,2,0],[3,3,0],[3,4,0],[3,5,0],[3,6,0],[3,7,0],[3,8,1],[3,9,0],[3,10,5],[3,11,4],[3,12,7],[3,13,14],[3,14,13],[3,15,12],[3,16,9],[3,17,5],[3,18,5],[3,19,10],[3,20,6],[3,21,4],[3,22,4],[3,23,1],[4,0,1],[4,1,3],[4,2,0],[4,3,0],[4,4,0],[4,5,1],[4,6,0],[4,7,0],[4,8,0],[4,9,2],[4,10,4],[4,11,4],[4,12,2],[4,13,4],[4,14,4],[4,15,14],[4,16,12],[4,17,1],[4,18,8],[4,19,5],[4,20,3],[4,21,7],[4,22,3],[4,23,0],[5,0,2],[5,1,1],[5,2,0],[5,3,3],[5,4,0],[5,5,0],[5,6,0],[5,7,0],[5,8,2],[5,9,0],[5,10,4],[5,11,1],[5,12,5],[5,13,10],[5,14,5],[5,15,7],[5,16,11],[5,17,6],[5,18,0],[5,19,5],[5,20,3],[5,21,4],[5,22,2],[5,23,0],[6,0,1],[6,1,0],[6,2,0],[6,3,0],[6,4,0],[6,5,0],[6,6,0],[6,7,0],[6,8,0],[6,9,0],[6,10,1],[6,11,0],[6,12,2],[6,13,1],[6,14,3],[6,15,4],[6,16,0],[6,17,0],[6,18,0],[6,19,0],[6,20,1],[6,21,2],[6,22,2],[6,23,6]]; data = data.map(function (item) &#123; return [item[1], item[0], item[2] || &apos;-&apos;]; &#125;); // 차트 속성과 데이터를 지정합니다. var option = &#123; tooltip: &#123; position: &apos;top&apos; &#125;, animation: false, grid: &#123; height: &apos;50%&apos;, y: &apos;10%&apos; &#125;, xAxis: &#123; type: &apos;category&apos;, data: hours, splitArea: &#123; show: true &#125; &#125;, yAxis: &#123; type: &apos;category&apos;, data: days, splitArea: &#123; show: true &#125; &#125;, visualMap: &#123; min: 0, max: 10, calculable: true, orient: &apos;horizontal&apos;, left: &apos;center&apos;, bottom: &apos;15%&apos; &#125;, series: [&#123; name: &apos;Punch Card&apos;, type: &apos;heatmap&apos;, data: data, label: &#123; normal: &#123; show: true &#125; &#125;, itemStyle: &#123; emphasis: &#123; shadowBlur: 10, shadowColor: &apos;rgba(0, 0, 0, 0.5)&apos; &#125; &#125; &#125;] &#125;; // 위에서 설정한 속성을 차트에 반영합니다. myChart.setOption(option); &lt;/script&gt; &lt;/body&gt;&lt;/html&gt; 실제로 생성된 차트입니다!!! 마우스를 올리면 툴팁이 생성됩니다. 차트 하단의 비주얼맵도 움직일 수 있습니다. Reference https://echarts.apache.org/en/tutorial.html#Get%20Started%20with%20ECharts%20in%205%20minutes Related Posts ECharts를 통해 5분안에 차트를 만들자! ECharts 바차트 색상 변경! Echarts-차트에 클릭 이벤트 생성하기 01 ECharts 최소 최대값 설정! // DOM을 준비하고 echart 객체를 만듭니다. var myChart = echarts.init(document.getElementById('heatchart')); // 차트 속성과 데이터를 지정합니다. var hours = ['12a', '1a', '2a', '3a', '4a', '5a', '6a', '7a', '8a', '9a','10a','11a', '12p', '1p', '2p', '3p', '4p', '5p', '6p', '7p', '8p', '9p', '10p', '11p']; var days = ['Saturday', 'Friday', 'Thursday', 'Wednesday', 'Tuesday', 'Monday', 'Sunday']; var data = [[0,0,5],[0,1,1],[0,2,0],[0,3,0],[0,4,0],[0,5,0],[0,6,0],[0,7,0],[0,8,0],[0,9,0],[0,10,0],[0,11,2],[0,12,4],[0,13,1],[0,14,1],[0,15,3],[0,16,4],[0,17,6],[0,18,4],[0,19,4],[0,20,3],[0,21,3],[0,22,2],[0,23,5],[1,0,7],[1,1,0],[1,2,0],[1,3,0],[1,4,0],[1,5,0],[1,6,0],[1,7,0],[1,8,0],[1,9,0],[1,10,5],[1,11,2],[1,12,2],[1,13,6],[1,14,9],[1,15,11],[1,16,6],[1,17,7],[1,18,8],[1,19,12],[1,20,5],[1,21,5],[1,22,7],[1,23,2],[2,0,1],[2,1,1],[2,2,0],[2,3,0],[2,4,0],[2,5,0],[2,6,0],[2,7,0],[2,8,0],[2,9,0],[2,10,3],[2,11,2],[2,12,1],[2,13,9],[2,14,8],[2,15,10],[2,16,6],[2,17,5],[2,18,5],[2,19,5],[2,20,7],[2,21,4],[2,22,2],[2,23,4],[3,0,7],[3,1,3],[3,2,0],[3,3,0],[3,4,0],[3,5,0],[3,6,0],[3,7,0],[3,8,1],[3,9,0],[3,10,5],[3,11,4],[3,12,7],[3,13,14],[3,14,13],[3,15,12],[3,16,9],[3,17,5],[3,18,5],[3,19,10],[3,20,6],[3,21,4],[3,22,4],[3,23,1],[4,0,1],[4,1,3],[4,2,0],[4,3,0],[4,4,0],[4,5,1],[4,6,0],[4,7,0],[4,8,0],[4,9,2],[4,10,4],[4,11,4],[4,12,2],[4,13,4],[4,14,4],[4,15,14],[4,16,12],[4,17,1],[4,18,8],[4,19,5],[4,20,3],[4,21,7],[4,22,3],[4,23,0],[5,0,2],[5,1,1],[5,2,0],[5,3,3],[5,4,0],[5,5,0],[5,6,0],[5,7,0],[5,8,2],[5,9,0],[5,10,4],[5,11,1],[5,12,5],[5,13,10],[5,14,5],[5,15,7],[5,16,11],[5,17,6],[5,18,0],[5,19,5],[5,20,3],[5,21,4],[5,22,2],[5,23,0],[6,0,1],[6,1,0],[6,2,0],[6,3,0],[6,4,0],[6,5,0],[6,6,0],[6,7,0],[6,8,0],[6,9,0],[6,10,1],[6,11,0],[6,12,2],[6,13,1],[6,14,3],[6,15,4],[6,16,0],[6,17,0],[6,18,0],[6,19,0],[6,20,1],[6,21,2],[6,22,2],[6,23,6]]; data = data.map(function (item) { return [item[1], item[0], item[2] || '-']; }); var option = { tooltip: { position: 'top' }, animation: false, grid: { height: '50%', y: '10%' }, xAxis: { type: 'category', data: hours, splitArea: { show: true } }, yAxis: { type: 'category', data: days, splitArea: { show: true } }, visualMap: { min: 0, max: 10, calculable: true, orient: 'horizontal', left: 'center', bottom: '15%' }, series: [{ name: 'Punch Card', type: 'heatmap', data: data, label: { normal: { show: true } }, itemStyle: { emphasis: { shadowBlur: 10, shadowColor: 'rgba(0, 0, 0, 0.5)' } } }] }; // 위에서 설정한 속성을 차트에 반영합니다. myChart.setOption(option);","categories":[{"name":"Programming","slug":"Programming","permalink":"https://dullyshin.github.io/categories/Programming/"},{"name":"Echarts","slug":"Programming/Echarts","permalink":"https://dullyshin.github.io/categories/Programming/Echarts/"}],"tags":[{"name":"Echarts","slug":"Echarts","permalink":"https://dullyshin.github.io/tags/Echarts/"},{"name":"이차트","slug":"이차트","permalink":"https://dullyshin.github.io/tags/이차트/"},{"name":"echart","slug":"echart","permalink":"https://dullyshin.github.io/tags/echart/"},{"name":"echart 한글","slug":"echart-한글","permalink":"https://dullyshin.github.io/tags/echart-한글/"},{"name":"heatmap","slug":"heatmap","permalink":"https://dullyshin.github.io/tags/heatmap/"},{"name":"히트맵","slug":"히트맵","permalink":"https://dullyshin.github.io/tags/히트맵/"},{"name":"heatmap data","slug":"heatmap-data","permalink":"https://dullyshin.github.io/tags/heatmap-data/"}]},{"title":"ECharts를 통해 5분안에 차트를 만들자!","slug":"Echarts-start","date":"2019-07-26T06:32:51.000Z","updated":"2020-03-12T07:10:43.710Z","comments":true,"path":"2019/07/26/Echarts-start/","link":"","permalink":"https://dullyshin.github.io/2019/07/26/Echarts-start/","excerpt":"","text":"ECharts를 통해 5분안에 차트를 만들자!Echarts 에 있는 튜토리얼을 한글로 번역하였습니다. ECharts 다운로드우선, 아래의 방법 중 하나를 선택하여 다운로드 받습니다: official download page, 공식 홈페이지에서 다운로드 받습니다. 만약 모든 패키지를 다운받고 싶다면 the full minified version에 들어가 확인하세요. 최신 파일은 GitHub 에 올려져 있습니다. 접속한 후 dist경로 아래에 압축되어 있습니다. npm을 사용할 수 있습니다: npm install echarts –save. Using ECharts with webpack ECharts 소개ECharts 3는 더 이상 AMD을 사용하지 않습니다. 대신, ECharts는 전통적인 &lt;script&gt; tag를 사용합니다. html 에 맨 위에 있는 head 태그안에 아래와 같이 적어주세요: 12345678&lt;!DOCTYPE html&gt;&lt;html&gt; &lt;head&gt; &lt;meta charset=&quot;utf-8&quot;&gt; &lt;!-- including ECharts file --&gt; &lt;script src=&quot;echarts.min.js&quot;&gt;&lt;/script&gt; &lt;/head&gt;&lt;/html&gt; 간단한 차트 그리기차트를 그리기 전에, 우리는 DOM container를 준비해야합니다. 그리고 꼭 넓이와 높이를 지정해 주세요. 지정하지 않는다면 너무 작게 그려져 화면에 차트가 보이지 않을 수 있습니다. 1234&lt;body&gt;&lt;!-- 높이와 너비가 지정된 Dom 을 생성합니다 --&gt; &lt;div id=&quot;main&quot; style=&quot;width:600px; height:400px;&quot;&gt;&lt;/div&gt;&lt;/body&gt; ECharts 객체를 echarts.init 을 사용해 준비합니다. setOption을 통해 간단한 bar 차트를 만듭시다. 아래에 전체 코드가 있습니다. 12345678910111213141516171819202122232425262728293031323334353637383940&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt; &lt;meta charset=&quot;utf-8&quot;&gt; &lt;title&gt;ECharts&lt;/title&gt; &lt;!-- 다운받은 echarts 파일 --&gt; &lt;script src=&quot;echarts.js&quot;&gt;&lt;/script&gt;&lt;/head&gt;&lt;body&gt;&lt;!-- 높이와 너비가 지정된 Dom 을 생성합니다 --&gt;&lt;div id=&quot;main&quot; style=&quot;width: 600px;height:400px;&quot;&gt;&lt;/div&gt; &lt;script type=&quot;text/javascript&quot;&gt; // DOM을 준비하고 echart 객체를 만듭니다. var myChart = echarts.init(document.getElementById(&apos;main&apos;)); // 차트 속성과 데이터를 지정합니다. var option = &#123; title: &#123; text: &apos;ECharts entry example&apos; &#125;, tooltip: &#123;&#125;, legend: &#123; data:[&apos;Sales&apos;] &#125;, xAxis: &#123; data: [&quot;shirt&quot;,&quot;cardign&quot;,&quot;chiffon shirt&quot;,&quot;pants&quot;,&quot;heels&quot;,&quot;socks&quot;] &#125;, yAxis: &#123;&#125;, series: [&#123; name: &apos;Sales&apos;, type: &apos;bar&apos;, data: [5, 20, 36, 10, 10, 20] &#125;] &#125;; // 위에서 설정한 속성을 차트에 반영합니다. myChart.setOption(option); &lt;/script&gt; &lt;/body&gt;&lt;/html&gt; 자 처음으로 완성된 차트 입니다! 차트위에 마우스를 올리면 툴팁이 생성되는걸 확인할 수 있습니다!더 많은 예제는 ECharts Gallery에서 확인할 수 있습니다! Reference https://echarts.apache.org/en/tutorial.html#Get%20Started%20with%20ECharts%20in%205%20minutes Related Posts ECharts를 통해 간단한 Heatmap 만들기! ECharts 바차트 색상 변경! ECharts 최소 최대값 설정! Echarts-차트에 클릭 이벤트 생성하기 01 Echarts -실시간으로 움직이는 차트 만들기 // DOM을 준비하고 echart 객체를 만듭니다. var myChart = echarts.init(document.getElementById('mainechart')); // 차트 속성과 데이터를 지정합니다. var option = { title: { text: 'ECharts entry example' }, tooltip: {}, legend: { data:['Sales'] }, xAxis: { data: [\"shirt\",\"cardign\",\"chiffon shirt\",\"pants\",\"heels\",\"socks\"] }, yAxis: {}, series: [{ name: 'Sales', type: 'bar', data: [5, 20, 36, 10, 10, 20] }] }; // 위에서 설정한 속성을 차트에 반영합니다. myChart.setOption(option);","categories":[{"name":"Programming","slug":"Programming","permalink":"https://dullyshin.github.io/categories/Programming/"},{"name":"Echarts","slug":"Programming/Echarts","permalink":"https://dullyshin.github.io/categories/Programming/Echarts/"}],"tags":[{"name":"Echarts","slug":"Echarts","permalink":"https://dullyshin.github.io/tags/Echarts/"},{"name":"이차트","slug":"이차트","permalink":"https://dullyshin.github.io/tags/이차트/"},{"name":"echart","slug":"echart","permalink":"https://dullyshin.github.io/tags/echart/"},{"name":"echart 한글","slug":"echart-한글","permalink":"https://dullyshin.github.io/tags/echart-한글/"}]},{"title":"ECharts 최소 최대값 설정!","slug":"Echarts-MinMax","date":"2019-07-26T06:32:51.000Z","updated":"2019-11-28T04:07:41.362Z","comments":true,"path":"2019/07/26/Echarts-MinMax/","link":"","permalink":"https://dullyshin.github.io/2019/07/26/Echarts-MinMax/","excerpt":"","text":"ECharts의 최대 최소값 설정!Echart를 사용해서 차트를 그리다 보면 최소 최대값이 자동으로 조절되는 것을 확인할 수 있습니다.하지만 자동으로 설정하는 것보다 원하는 값으로 변경할 수 있는 방법을 알려 드릴려고 합니다. Echarts를 잘 모르시는 분들은 ECharts를 통해 5분안에 차트를 만들자!을 확인한 후 보시면 이해가 더 편할겁니다. ECharts의 자동 최대 최소값 설정자동으로 설정하면 거의 최소 값은 0에 고정되어 있습니다.만약 값이 전부 100으로 들어온다면 아래와 같이 그려지게 됩니다. 1234567891011121314151617181920212223242526//1번째 차트를 그릴 영역입니다.&lt;div id=&quot;chart1&quot; style=&quot;width:600px; height:400px;&quot;&gt;&lt;/div&gt;&lt;script type=&quot;text/javascript&quot;&gt; // DOM을 준비하고 echart 객체를 만듭니다. var myChart1 = echarts.init(document.getElementById(&apos;chart1&apos;)); var option1 = &#123; xAxis: &#123; type: &apos;category&apos;, data: [&apos;Mon&apos;, &apos;Tue&apos;, &apos;Wed&apos;, &apos;Thu&apos;, &apos;Fri&apos;, &apos;Sat&apos;, &apos;Sun&apos;] &#125;, yAxis: &#123; type: &apos;value&apos; &#125;, series: [&#123; //date 값이 전부 똑같습니다. data: [100, 100, 100, 100, 100, 100, 100], type: &apos;line&apos; &#125;] &#125;; // 위에서 설정한 속성을 차트에 반영합니다. myChart1.setOption(option1);&lt;/script&gt; 값이 전부 100으로 설정되어 있어서 잘 보이지도 않네요. 만약 선이 검은색 이었다면 아예 숨은그림 찾기 였을것 같아요 ㅋㅋ 원하는 최대 최소 값으로 변경하지만 제가 차트를 그린다면 가운데에 차트가 그려졌으면 합니다. 그럴경우 min, max 의 값을 직접 설정할 수 있습니다.바로 yAxis 안에 min, max설정을 변경하는 것입니다. 예제를 통해 확인 하시죠. 12345678910111213141516171819202122232425262728//2번째 차트를 그릴 영역입니다.&lt;div id=&quot;chart2&quot; style=&quot;width:600px; height:400px;&quot;&gt;&lt;/div&gt;&lt;script type=&quot;text/javascript&quot;&gt; // DOM을 준비하고 echart 객체를 만듭니다. var myChart2 = echarts.init(document.getElementById(&apos;chart2&apos;)); var option2 = &#123; xAxis: &#123; type: &apos;category&apos;, data: [&apos;Mon&apos;, &apos;Tue&apos;, &apos;Wed&apos;, &apos;Thu&apos;, &apos;Fri&apos;, &apos;Sat&apos;, &apos;Sun&apos;] &#125;, yAxis: &#123; type: &apos;value&apos;, min: 80, max: 120 //위의 min, max를 설정한 모습을 확인할 수 있습니다. &#125;, series: [&#123; data: [100, 100, 100, 100, 100, 100, 100], type: &apos;line&apos; &#125;] &#125;; // 위에서 설정한 속성을 차트에 반영합니다. myChart2.setOption(option2);&lt;/script&gt; 이렇게 가운대로 예쁘게 그려진 것을 확인할 수 있습니다. 동적으로 최대 최소값 변경하기하지만 위의 예시 처럼 고정값으로 설정할 경우 값이 계속 변하고 값이 최대 최소 값보다 적거나 클경우 아예 화면 밖에 그려져 보이지 않을 수도 있고, 값이 계속 100으로만 들어온다는 보장도 없을때는 어떻게 해야할까요? echarts의 API를 확인하면 “dataMin, dataMax를 사용할 수 있고, 설정되지 않았을때는 자동으로 설정한다” 정도로 해석되는대요.(그림은 클릭하면 크게 볼 수 있습니다.)저는 위아래 어느정도 떨어진 값을 설정해보도록 하겠습니다. 123456789101112131415161718192021222324252627282930313233343536//3번째 차트를 그릴 영역입니다.&lt;div id=&quot;chart3&quot; style=&quot;width:600px; height:400px;&quot;&gt;&lt;/div&gt;&lt;script type=&quot;text/javascript&quot;&gt; // DOM을 준비하고 echart 객체를 만듭니다. var myChart3 = echarts.init(document.getElementById(&apos;chart3&apos;)); var option3 = &#123; xAxis: &#123; type: &apos;category&apos;, data: [&apos;Mon&apos;, &apos;Tue&apos;, &apos;Wed&apos;, &apos;Thu&apos;, &apos;Fri&apos;, &apos;Sat&apos;, &apos;Sun&apos;] &#125;, yAxis: &#123; type: &apos;value&apos;, //아래와 같이 min,max에서 function을 사용할 수 있습니다. min: function(item)&#123; var diff = item.max-item.min; if(diff == 0) &#123;diff = 1&#125; return (item.min - ((diff) * 0.2)).toFixed(2); &#125;, max: function(item)&#123; var diff = item.max-item.min; if(diff == 0) &#123;diff = 1&#125; return (item.max + ((diff) * 0.2)).toFixed(2); &#125;, &#125;, series: [&#123; data: [1820, 1932, 901, 934, 1290, 1330, 1320], type: &apos;line&apos; &#125;] &#125;; // 위에서 설정한 속성을 차트에 반영합니다. myChart3.setOption(option3);&lt;/script&gt; 위와 같이 설정한다면 최소값과 최대값의 차이에 0.2정도를 위 아래 여백으로 설정할 수 있게 되었습니다.소수점이 정확하게 안 떨어질 경우를 대비해서 toFixed(2)를 사용해 소수점 정리를 하였습니다.if(diff == 0) {diff = 1}는 값이 전부 같을 경우 0값이 들어가기 때문에 조정하였습니다. 모두 원하는 차트 그리셨기를 바랍니다! Reference https://echarts.apache.org/ Related Posts ECharts를 통해 5분안에 차트를 만들자! ECharts를 통해 간단한 Heatmap 만들기! var myChart1 = echarts.init(document.getElementById('chart1')); var option1 = { xAxis: { type: 'category', data: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'] }, yAxis: { type: 'value' }, series: [{ data: [100, 100, 100, 100, 100, 100, 100], type: 'line' }] }; myChart1.setOption(option1); var myChart2 = echarts.init(document.getElementById('chart2')); var option2 = { xAxis: { type: 'category', data: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'] }, yAxis: { type: 'value', min: 80, max: 120 //위의 min, max를 설정한 모습을 확인할 수 있습니다. }, series: [{ data: [100, 100, 100, 100, 100, 100, 100], type: 'line' }] }; myChart2.setOption(option2); // DOM을 준비하고 echart 객체를 만듭니다. var myChart3 = echarts.init(document.getElementById('chart3')); var option3 = { xAxis: { type: 'category', data: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'] }, yAxis: { type: 'value', //아래와 같이 min,max에서 function을 사용할 수 있습니다. min: function(item){ var diff = item.max-item.min; if(diff == 0) {diff = 1} return (item.min - ((diff) * 0.2)).toFixed(2); }, max: function(item){ var diff = item.max-item.min; if(diff == 0) {diff = 1} return (item.max + ((diff) * 0.2)).toFixed(2); }, }, series: [{ data: [1820, 1932, 901, 934, 1290, 1330, 1320], type: 'line' }] }; // 위에서 설정한 속성을 차트에 반영합니다. myChart3.setOption(option3);","categories":[{"name":"Programming","slug":"Programming","permalink":"https://dullyshin.github.io/categories/Programming/"},{"name":"Echarts","slug":"Programming/Echarts","permalink":"https://dullyshin.github.io/categories/Programming/Echarts/"}],"tags":[{"name":"Echarts","slug":"Echarts","permalink":"https://dullyshin.github.io/tags/Echarts/"},{"name":"이차트","slug":"이차트","permalink":"https://dullyshin.github.io/tags/이차트/"},{"name":"echart","slug":"echart","permalink":"https://dullyshin.github.io/tags/echart/"},{"name":"echart 한글","slug":"echart-한글","permalink":"https://dullyshin.github.io/tags/echart-한글/"},{"name":"echart min","slug":"echart-min","permalink":"https://dullyshin.github.io/tags/echart-min/"},{"name":"echart max","slug":"echart-max","permalink":"https://dullyshin.github.io/tags/echart-max/"},{"name":"echarts min","slug":"echarts-min","permalink":"https://dullyshin.github.io/tags/echarts-min/"},{"name":"echarts max","slug":"echarts-max","permalink":"https://dullyshin.github.io/tags/echarts-max/"},{"name":"이차트 최대 최소값","slug":"이차트-최대-최소값","permalink":"https://dullyshin.github.io/tags/이차트-최대-최소값/"}]},{"title":"[java error]The content of elements must consist of well-formed character data or markup.","slug":"PostgreSQL-CDATA","date":"2019-07-25T02:29:34.000Z","updated":"2023-08-21T14:22:11.764Z","comments":true,"path":"2019/07/25/PostgreSQL-CDATA/","link":"","permalink":"https://dullyshin.github.io/2019/07/25/PostgreSQL-CDATA/","excerpt":"","text":"자바에러가 아래와 같이 발생한다면 [error]The content of elements must consist of well-formed character data or markup. 쿼리문을 확인할 필요가 있습니다. XML에서는 &lt; 부등호를 TAG로 인식하기 때문에 “The content of elements must consist of well-formed character data or markup.”라는 에러가 발생합니다. 이와 같은 문제를 해결하기 위해서는 Query안에 사용되고 있는 부등호가 문자열이라것을 의미하게 “으로 감싸준다. 예시수정 전123select *from test_tblwhere data_tm &gt; '20190101' 수정 후123select *from test_tblwhere data_tm &lt;![CDATA[ &gt; ]]&gt; '20190101' Reference https://wonzopein.com/59 Related Posts PostgreSql 란? SQL basic PostgreSQL - 베큠 `Vacuum` 간단한 소개","categories":[{"name":"Programming","slug":"Programming","permalink":"https://dullyshin.github.io/categories/Programming/"},{"name":"SQL","slug":"Programming/SQL","permalink":"https://dullyshin.github.io/categories/Programming/SQL/"}],"tags":[{"name":"PostgreSQL","slug":"PostgreSQL","permalink":"https://dullyshin.github.io/tags/PostgreSQL/"},{"name":"SQL","slug":"SQL","permalink":"https://dullyshin.github.io/tags/SQL/"},{"name":"PostgreSQL_Basic","slug":"PostgreSQL-Basic","permalink":"https://dullyshin.github.io/tags/PostgreSQL-Basic/"},{"name":"error","slug":"error","permalink":"https://dullyshin.github.io/tags/error/"}]},{"title":"(jQuery)제이쿼리 셀렉터 총정리 02편! jQuery Selector","slug":"jQuery-selector2","date":"2019-07-25T02:06:32.000Z","updated":"2019-07-25T02:22:50.058Z","comments":true,"path":"2019/07/25/jQuery-selector2/","link":"","permalink":"https://dullyshin.github.io/2019/07/25/jQuery-selector2/","excerpt":"","text":"jQuery에서 필수적으로 사용하게 되는 셀렉터! 에 대해 알아보겠습니다. 버튼 셀렉터 :button Selector jQuery( “:button” )Selects all button elements and elements of type button.타입이 button인 모든 요소를 선택합니다. 체크박스 셀렉터 :checkbox Selector jQuery( “:checkbox” )Selects all elements of type checkbox.타입이 checkbox인 모든 요소를 선택합니다. 체크드 셀렉터 :checked Selector jQuery( “:checked” )Matches all elements that are checked or selected.checkbox에서 선택된 요소들만 선택합니다. 속성 컨테인 워드 셀렉터 Attribute Contains Word Selector [name~=”value”] jQuery( “[attribute~=’value’]” )Selects elements that have the specified attribute with a value containing a given word, delimited by spaces.속성에 원하는 문자를 선택하는데 공백으로 구분합니다. 문자가 앞에서 시작하든 중간에서 시작하든 상관없지만, 공백으로 나누어 있어야 합니다. 속성 엔드 셀렉터 Attribute Ends With Selector [name$=”value”] jQuery( “[attribute$=’value’]” )Selects elements that have the specified attribute with a value ending exactly with a given string. The comparison is case sensitive.속성에 원하는 문자열로 정확하게 끝나야 선택됩니다. 대소문자를 구별하여 선택됩니다. 속성 이퀄 셀렉터 Attribute Equals Selector [name=”value”] jQuery( “[attribute=’value’]” )Selects elements that have the specified attribute with a value exactly equal to a certain value.속성에 원하는 문자열로 정확 일치하는 요소를 선택합니다. 대소문자를 구별하여 선택됩니다. 속성 스타트 셀렉터 Attribute Starts With Selector [name^=”value”] jQuery( “[attribute^=’value’]” )Selects elements that have the specified attribute with a value beginning exactly with a given string.속성에 원하는 문자열로 정확하게 시작해야 선택됩니다. 대소문자를 구별하여 선택됩니다. 더 많은 셀렉터는 다음 기회에 만나보겠습니다. Reference https://api.jquery.com/category/selectors/ Related Posts (jQuery)제이쿼리 셀렉터 총정리 01편! jQuery Selector (jQuery) 제이쿼리 트래버싱 Traversing","categories":[{"name":"Programming","slug":"Programming","permalink":"https://dullyshin.github.io/categories/Programming/"},{"name":"jQuery","slug":"Programming/jQuery","permalink":"https://dullyshin.github.io/categories/Programming/jQuery/"}],"tags":[{"name":"jQuery","slug":"jQuery","permalink":"https://dullyshin.github.io/tags/jQuery/"},{"name":"제이쿼리 셀렉터","slug":"제이쿼리-셀렉터","permalink":"https://dullyshin.github.io/tags/제이쿼리-셀렉터/"},{"name":"제이쿼리 선택자","slug":"제이쿼리-선택자","permalink":"https://dullyshin.github.io/tags/제이쿼리-선택자/"},{"name":"셀렉터","slug":"셀렉터","permalink":"https://dullyshin.github.io/tags/셀렉터/"},{"name":"제이쿼리 셀렉터 총정리","slug":"제이쿼리-셀렉터-총정리","permalink":"https://dullyshin.github.io/tags/제이쿼리-셀렉터-총정리/"},{"name":"jQuery selector","slug":"jQuery-selector","permalink":"https://dullyshin.github.io/tags/jQuery-selector/"},{"name":"All Selector","slug":"All-Selector","permalink":"https://dullyshin.github.io/tags/All-Selector/"},{"name":"모든 요소 선택","slug":"모든-요소-선택","permalink":"https://dullyshin.github.io/tags/모든-요소-선택/"}]},{"title":"(jQuery)제이쿼리 셀렉터 총정리 01편! jQuery Selector","slug":"jQuery-selector1","date":"2019-07-25T01:37:24.000Z","updated":"2019-07-25T02:22:27.646Z","comments":true,"path":"2019/07/25/jQuery-selector1/","link":"","permalink":"https://dullyshin.github.io/2019/07/25/jQuery-selector1/","excerpt":"","text":"jQuery에서 필수적으로 사용하게 되는 셀렉터! 에 대해 알아보겠습니다. 모든 셀렉터 All Selector (“*”) jQuery( “*” )Selects all elements.모든 요소를 선택합니다. 속성 프리픽스 셀렉터 Prefix Selector [name|=”value”] jQuery( “[attribute|=’value’]” )Selects elements that have the specified attribute with a value either equal to a given string or starting with that string followed by a hyphen (-).특정한 속성값을 가진 요소를 선택합니다. 특정 문자열이 원하는 문자열로 시작하여 띄어쓰기로 나누어져 있거나 (-) 하이픈으로 나누어져 있어야 합니다. 속성 컨테인 셀렉터 Attribute Contains Selector [name*=”value”] jQuery( “[attribute*=’value’]” )Selects elements that have the specified attribute with a value containing a given substring.원하는 문자를 포함하고 있으면 선택됩니다. 속성 컨테인 워드 셀렉터 Attribute Contains Word Selector [name~=”value”] jQuery( “[attribute~=’value’]” )Selects elements that have the specified attribute with a value containing a given word, delimited by spaces.속성에 원하는 문자를 선택하는데 공백으로 구분합니다. 문자가 앞에서 시작하든 중간에서 시작하든 상관없지만, 공백으로 나누어 있어야 합니다. 속성 엔드 셀렉터 Attribute Ends With Selector [name$=”value”] jQuery( “[attribute$=’value’]” )Selects elements that have the specified attribute with a value ending exactly with a given string. The comparison is case sensitive.속성에 원하는 문자열로 정확하게 끝나야 선택됩니다. 대소문자를 구별하여 선택됩니다. 속성 이퀄 셀렉터 Attribute Equals Selector [name=”value”] jQuery( “[attribute=’value’]” )Selects elements that have the specified attribute with a value exactly equal to a certain value.속성에 원하는 문자열로 정확 일치하는 요소를 선택합니다. 대소문자를 구별하여 선택됩니다. 속성 스타트 셀렉터 Attribute Starts With Selector [name^=”value”] jQuery( “[attribute^=’value’]” )Selects elements that have the specified attribute with a value beginning exactly with a given string.속성에 원하는 문자열로 정확하게 시작해야 선택됩니다. 대소문자를 구별하여 선택됩니다. 더 많은 셀렉터는 다음 기회에 만나보겠습니다. Reference https://api.jquery.com/category/selectors/ Related Posts (jQuery) 테이블 행 추가, 삭제 / 랜덤함수 이용 (jQuery) 제이쿼리 트래버싱 Traversing","categories":[{"name":"Programming","slug":"Programming","permalink":"https://dullyshin.github.io/categories/Programming/"},{"name":"jQuery","slug":"Programming/jQuery","permalink":"https://dullyshin.github.io/categories/Programming/jQuery/"}],"tags":[{"name":"jQuery","slug":"jQuery","permalink":"https://dullyshin.github.io/tags/jQuery/"},{"name":"제이쿼리 셀렉터","slug":"제이쿼리-셀렉터","permalink":"https://dullyshin.github.io/tags/제이쿼리-셀렉터/"},{"name":"제이쿼리 선택자","slug":"제이쿼리-선택자","permalink":"https://dullyshin.github.io/tags/제이쿼리-선택자/"},{"name":"셀렉터","slug":"셀렉터","permalink":"https://dullyshin.github.io/tags/셀렉터/"},{"name":"제이쿼리 셀렉터 총정리","slug":"제이쿼리-셀렉터-총정리","permalink":"https://dullyshin.github.io/tags/제이쿼리-셀렉터-총정리/"},{"name":"jQuery selector","slug":"jQuery-selector","permalink":"https://dullyshin.github.io/tags/jQuery-selector/"},{"name":"All Selector","slug":"All-Selector","permalink":"https://dullyshin.github.io/tags/All-Selector/"},{"name":"모든 요소 선택","slug":"모든-요소-선택","permalink":"https://dullyshin.github.io/tags/모든-요소-선택/"},{"name":"제이쿼리 셀렉터 여러개","slug":"제이쿼리-셀렉터-여러개","permalink":"https://dullyshin.github.io/tags/제이쿼리-셀렉터-여러개/"}]},{"title":"(jQuery) 테이블 행 추가, 삭제 / 랜덤함수 이용","slug":"jQuery-tablerowdelete","date":"2019-07-25T01:27:35.900Z","updated":"2019-11-28T01:47:13.720Z","comments":true,"path":"2019/07/25/jQuery-tablerowdelete/","link":"","permalink":"https://dullyshin.github.io/2019/07/25/jQuery-tablerowdelete/","excerpt":"","text":"(jQuery) 테이블 행 추가, 삭제 / 랜덤함수 이용 테이블의 행을 추가한 후 선택한 행을 삭제해 보겠습니다. 결과를 확인하고 싶으시면 아래의 Result 버튼을 클릭하면 됩니다. 좀 더 자세히 보자면 랜덤 함수를 통해 정수 값을 구했습니다. 1234var randomInt = Math.floor(Math.random() * 100); // 0부터 99까지의 숫자를 출력합니다. floor함수를 사용하지 않으면 정수가 아닌 실수가 출력됩니다.randomInt += ' %';$(\"#humi tr td\").eq(-2).text(randomInt); 그리고 아래의 함수를 바로 선언하면 JSFiddle에서 오류가 나서 밑에와 같이 window를 사용한 것입니다. 1234567//JSFiddle에 맞춘 함수window.fnDelTable = function(_this) &#123; var _id = $(_this).closest('table').attr('id'); var tbody = $(_this).closest('tbody'); $(_this).closest('tr').remove();&#125; 위와 아래의 함수는 같은 기능을 가지고 있습니다. 원래는 아래와 같이 사용한 것을 JSFiddle에 맞추어 약간 변형했습니다. 1234567//원래 사용한 방식function fnDelTable(_this) &#123; var _id = $(_this).closest('table').attr('id'); var tbody = $(_this).closest('tbody'); $(_this).closest('tr').remove();&#125; -Referencehttps://stackoverflow.com/questions/5468350/javascript-not-running-on-jsfiddle-net","categories":[{"name":"Programming","slug":"Programming","permalink":"https://dullyshin.github.io/categories/Programming/"},{"name":"jQuery","slug":"Programming/jQuery","permalink":"https://dullyshin.github.io/categories/Programming/jQuery/"}],"tags":[{"name":"jQuery","slug":"jQuery","permalink":"https://dullyshin.github.io/tags/jQuery/"},{"name":".text()","slug":"text","permalink":"https://dullyshin.github.io/tags/text/"},{"name":"jQuery 테이블 행 추가 삭제","slug":"jQuery-테이블-행-추가-삭제","permalink":"https://dullyshin.github.io/tags/jQuery-테이블-행-추가-삭제/"},{"name":".append()","slug":"append","permalink":"https://dullyshin.github.io/tags/append/"},{"name":".eq()","slug":"eq","permalink":"https://dullyshin.github.io/tags/eq/"},{"name":"정수 랜덤","slug":"정수-랜덤","permalink":"https://dullyshin.github.io/tags/정수-랜덤/"},{"name":"랜덤 정수","slug":"랜덤-정수","permalink":"https://dullyshin.github.io/tags/랜덤-정수/"}]},{"title":"(jQuery) 제이쿼리 트래버싱 Traversing","slug":"jQuery-Traversing","date":"2019-02-25T15:21:00.000Z","updated":"2019-02-25T15:44:01.178Z","comments":true,"path":"2019/02/26/jQuery-Traversing/","link":"","permalink":"https://dullyshin.github.io/2019/02/26/jQuery-Traversing/","excerpt":"","text":"[jQuery] 제이쿼리 트레버싱 .eq() 제이쿼리는 아주 멋져요. “write less, do more. Jquery” 얼마나 좋아요. 적게 쓰고 많이 활용할 수 있다는 거죠.그 많은 기능들 중에서 지금은 트래버싱 eq()에 대해 알아봅시다. 트래버싱이란 돔을 자유자재로 이동한다고 생각하면 됩니다. 1234567&lt;ul&gt; &lt;li&gt;list item 1&lt;/li&gt; &lt;li&gt;list item 2&lt;/li&gt; &lt;li&gt;list item 3&lt;/li&gt; &lt;li&gt;list item 4&lt;/li&gt; &lt;li&gt;list item 5&lt;/li&gt;&lt;/ul&gt; 이중에서 2번째 li 태그를 찾으려면 어떻게 해야 할까요? 바로 jQuery에 .eq() 기능을 이용할 수 있습니다. 123$( \"li\" ).eq( 1 ).css( \"background-color\", \"red\" );// eq 괄호안 인덱스는 0에서 시작합니다. (ex. 0, 1, 2, 3, 4, ...)// 인덱스가 '0'으로 시작하는 것을 영어로 `zero-based index` 라고 합니다. 위와 같이 입력한다면 2번째 li 태그에 배경이 빨간색이 됩니다.하지만 만약 li 태그가 1334205230개 정도 되고 그 중 뒤에서 2번째 li 태그를 찾으려면 아래와 같이 찾으면 됩니다. 앞에서 부터 하나하나 몇번째 태그인 다 셀 수 없으니깐요. 1$( \"li\" ).eq( -1 ).css( \"background-color\", \"red\" ); 예시 하나를 확인해 봅시다. Result를 누르면 결과를 확인할 수 있습니다. 여기서 봐야할 부분은 $( &quot;body&quot; ).find( &quot;div&quot; ).eq( 2 ).addClass( &quot;blue&quot; );입니다. $( “body” ) : body 안에있는 .find( “div” ) : div태그를 찾아서 .eq( 2 ) : 그 중 인덱스가 2인 것에 .addClass( “blue” ) : 블루 클래스를 추가합니다. Reference https://en.wikipedia.org/wiki/Traverse_(surveying) https://api.jquery.com/eq/#eq-index https://www.zerocho.com/category/jQuery/post/57a9abece6cb6015004403a8","categories":[{"name":"Programming","slug":"Programming","permalink":"https://dullyshin.github.io/categories/Programming/"},{"name":"jQuery","slug":"Programming/jQuery","permalink":"https://dullyshin.github.io/categories/Programming/jQuery/"}],"tags":[{"name":"jquery 트래버싱","slug":"jquery-트래버싱","permalink":"https://dullyshin.github.io/tags/jquery-트래버싱/"},{"name":"jQuery","slug":"jQuery","permalink":"https://dullyshin.github.io/tags/jQuery/"},{"name":"제이쿼리 돔 횡단","slug":"제이쿼리-돔-횡단","permalink":"https://dullyshin.github.io/tags/제이쿼리-돔-횡단/"},{"name":"트레버싱","slug":"트레버싱","permalink":"https://dullyshin.github.io/tags/트레버싱/"},{"name":"트래버","slug":"트래버","permalink":"https://dullyshin.github.io/tags/트래버/"},{"name":"traversing","slug":"traversing","permalink":"https://dullyshin.github.io/tags/traversing/"}]},{"title":"(jstl) ForEach 문","slug":"JSTL-ForEach","date":"2019-02-25T14:49:13.000Z","updated":"2021-01-22T07:09:09.615Z","comments":true,"path":"2019/02/25/JSTL-ForEach/","link":"","permalink":"https://dullyshin.github.io/2019/02/25/JSTL-ForEach/","excerpt":"","text":"[JSTL] forEach문 인덱스, 카운트자바에서는 for, while, do-while을 사용하지요. Jstl에서 이와 같은 기능을 사용하려면 foreach문을 사용하면 됩니다. 간단한 예시를 보고 설명을 확인해 봅시다. 숫자를 사용하는 forEach123&lt;c:forEach var = &quot;i&quot; begin = &quot;1&quot; end = &quot;5&quot;&gt; Item &lt;c:out value = &quot;$&#123;i&#125;&quot;/&gt;&lt;p&gt;&lt;/c:forEach&gt; 위의 첫번째 줄을 자세하게 설명하자면 forEach 문의 변수 var = &quot;i&quot;를 선언한 후 그 변수i에 숫자 1부터 5까지 1씩 증가한다. 위의 실행결과는 아래와 같습니다. 12345Item 1Item 2Item 3Item 4Item 5 forEach 숫자가 증가하는 범위를 설정만약 위의 상황에서 2씩 증가해서 숫자를 출력하고 싶으면 아래와 같이 할 수 있습니다. 123&lt;c:forEach var = &quot;i&quot; begin = &quot;1&quot; end = &quot;5&quot; step=&quot;2&quot;&gt; Item &lt;c:out value = &quot;$&#123;i&#125;&quot;/&gt;&lt;p&gt;&lt;/c:forEach&gt; forEach 문의 변수 var = &quot;i&quot;를 선언한 후 그 변수i에 숫자 1부터 5까지 2씩 증가한다. 위의 실행결과는 아래와 같습니다. 123Item 1Item 3Item 5 숫자를 역으로 출력하기123&lt;c:forEach var=&quot;i&quot; begin=&quot;10&quot; end=&quot;0&quot; step=&quot;-1&quot;&gt; //잘못된 예시 입니다.&lt;/c:forEach&gt; 만약 역순으로 만들고자 할때 step=&quot;-1&quot;와 같이 사용한다면 원하지 않은 값이 출력될 것입니다. forEach문에서의 step에는 양수만 사용되기 때문입니다. 그래서 역순으로 숫자를 출력하고자 할때는 아래와 같이 사용해야 합니다. 1234&lt;c:forEach var=&quot;i&quot; begin=&quot;0&quot; end=&quot;10&quot; step=&quot;1&quot;&gt; &lt;c:var var=&quot;decr&quot; value=&quot;$&#123;10-i&#125;&quot;/&gt; &lt;p&gt;&lt;c:out value=&quot;$&#123;decr&#125;&quot; /&gt;&lt;/p&gt;&lt;/c:forEach&gt; Map을 사용하여 forEach변수 i에 숫자가 아닌 Map을 사용할때는 아래와 같이 사용할 수 있습니다. 123&lt;c:forEach var=&quot;movieMap&quot; items=&quot;$&#123;movieList&#125;&quot;&gt; &lt;p&gt;&lt;c:out value=&quot;$&#123;movieMap.title&#125;&quot; /&gt;&lt;/p&gt;&lt;/c:forEach&gt; &lt;c:forEach&gt;에서 사용되는 속성들 파헤치기foreach문의 자세한 속성 살피기 속성 설명 필요 기본설정 items loop를 돌릴 item을 정의합니다. No None begin 시작하는 item 숫자를 정의합니다. (0 = first item, 1 = second item, …) No 0 end 끝나는 item 숫자를 정의합니다. (0 = first item, 1 = second item, …) No Last element step loop의 단계를 지정할 수 있습니다. 음수는 사용할 수 없습니다. No 1 var variable의 약자로 ‘forEach 안에서 사용될 변수를 선언한다’라고 이해하시면 됩니다. No None varStatus loop의 상태를 확인하는 변수 입니다. No None loop를 활용한 예시는 아래와 같습니다. 테이블을 그리는데 첫번째와 마지막 부분과 중간 부분의 생김세가 다를 경우에 아래와 같이 사용할 수 있습니다. 123456789101112131415161718192021222324252627282930313233343536&lt;%@ taglib uri = &quot;http://java.sun.com/jsp/jstl/core&quot; prefix = &quot;c&quot; %&gt;&lt;html&gt;&lt;table border=&quot;1&quot;&gt; &lt;thead&gt; &lt;tr&gt; &lt;th colspan=&quot;3&quot;&gt;forEach Table&lt;/th&gt; &lt;/tr&gt; &lt;/thead&gt; &lt;tbody&gt; &lt;c:forEach var = &quot;i&quot; begin = &quot;1&quot; end = &quot;5&quot; varStatus=&quot;loop&quot;&gt; &lt;c:if test=&quot;$&#123;loop.first &#125;&quot;&gt; &lt;tr&gt; &lt;td&gt;FIRST Loop&lt;/td&gt; &lt;td&gt;Item&lt;c:out value = &quot;$&#123;i&#125;&quot;/&gt;&lt;p&gt;&lt;/td&gt; &lt;td&gt;시작&lt;/td&gt; &lt;/tr&gt; &lt;/c:if&gt; &lt;c:if test=&quot;$&#123;!loop.first&#125;&quot;&gt; &lt;c:if test=&quot;$&#123;!loop.last&#125;&quot;&gt; &lt;tr&gt; &lt;td colspan=&quot;3&quot;&gt;Item&lt;c:out value = &quot;$&#123;i&#125;&quot;/&gt;&lt;p&gt;&lt;/td&gt; &lt;/tr&gt; &lt;/c:if&gt; &lt;c:if test=&quot;$&#123;loop.last&#125;&quot;&gt; &lt;tr&gt; &lt;td&gt;LAST Loop&lt;/td&gt; &lt;td&gt;Item&lt;c:out value = &quot;$&#123;i&#125;&quot;/&gt;&lt;p&gt;&lt;/td&gt; &lt;td&gt;끝&lt;/td&gt; &lt;/tr&gt; &lt;/c:if&gt; &lt;/c:if&gt; &lt;/c:forEach&gt; &lt;/tbody&gt;&lt;/table&gt;&lt;html&gt; 결과는 아래와 같습니다. 지금 상황에서는 인덱스(1, 2, 3, 4, 5)를 출력할때 var의 값으로도 출력할 수 있지만, varStatus를 활용해서 인덱스를 생성할 수 있습니다. 123456789&lt;c:forEach var = &quot;i&quot; begin = &quot;1&quot; end = &quot;5&quot; varStatus=&quot;loop&quot;&gt; &lt;c:out value = &quot;$&#123;loop.count&#125;&quot;/&gt;&lt;p&gt;&lt;/c:forEach&gt;//위의 결과는 12345로 출력됩니다.&lt;c:forEach var = &quot;i&quot; begin = &quot;1&quot; end = &quot;5&quot; varStatus=&quot;loop&quot;&gt; &lt;c:out value = &quot;$&#123;loop.index&#125;&quot;/&gt;&lt;p&gt;&lt;/c:forEach&gt;//index의 결과는 01234로 출력됩니다. 위에 결과를 보듯이 인덱스는 제로 베이스고, 카운트는 1부터 시작되는 것을 확인할 수 있습니다. 정리하자면 아래와 같습니다. - status.index : 0부터 시작하는 루프의 인덱스 입니다. (0에서 시작한다해서 제로 베이스라고 합니다.) - status.count : 현재 몇번째 루프인지 값입니다. 1부터 시작합니다. 그외에도 사용되는 status는 아래와 같습니다. - status.first : 현재가 첫번째 루프이면 참입니다. - status.last : 현재가 마지막 루프이면 참입니다. - status.begin : forEach문 시작시에 사용된 begin 값이 나옵니다. - status.end : forEach문 시작시에 사용된 end 값이 나옵니다. - status.step : forEach문 시작시에 사용된 step 값이 나옵니다. Reference https://www.tutorialspoint.com/jsp/jstl_core_foreach_tag.htm http://ontheinfo.com/2878 Related Posts JSTL-if, if else 5분안에 정복하기 JSTL-substring 뒤에서 문자 자르기 (JavaScript) 삼항 연산자 Ternary Operator","categories":[{"name":"Programming","slug":"Programming","permalink":"https://dullyshin.github.io/categories/Programming/"},{"name":"JSTL","slug":"Programming/JSTL","permalink":"https://dullyshin.github.io/categories/Programming/JSTL/"}],"tags":[{"name":"foreach","slug":"foreach","permalink":"https://dullyshin.github.io/tags/foreach/"},{"name":"jstl foreach문","slug":"jstl-foreach문","permalink":"https://dullyshin.github.io/tags/jstl-foreach문/"},{"name":"for","slug":"for","permalink":"https://dullyshin.github.io/tags/for/"},{"name":"for 문","slug":"for-문","permalink":"https://dullyshin.github.io/tags/for-문/"},{"name":"while","slug":"while","permalink":"https://dullyshin.github.io/tags/while/"},{"name":"do-while","slug":"do-while","permalink":"https://dullyshin.github.io/tags/do-while/"},{"name":"jstl","slug":"jstl","permalink":"https://dullyshin.github.io/tags/jstl/"},{"name":"jstl foreach","slug":"jstl-foreach","permalink":"https://dullyshin.github.io/tags/jstl-foreach/"},{"name":"<c:forEach>","slug":"c-forEach","permalink":"https://dullyshin.github.io/tags/c-forEach/"},{"name":"jsp 문법","slug":"jsp-문법","permalink":"https://dullyshin.github.io/tags/jsp-문법/"},{"name":"<c:forEach> 태그","slug":"c-forEach-태그","permalink":"https://dullyshin.github.io/tags/c-forEach-태그/"},{"name":"java for문","slug":"java-for문","permalink":"https://dullyshin.github.io/tags/java-for문/"},{"name":"forEach 인덱스","slug":"forEach-인덱스","permalink":"https://dullyshin.github.io/tags/forEach-인덱스/"},{"name":"forEach 카운트","slug":"forEach-카운트","permalink":"https://dullyshin.github.io/tags/forEach-카운트/"}]},{"title":"마크다운 테이블 정렬 Markdown Table","slug":"Hexo-MarkdownTable","date":"2019-02-25T12:38:17.000Z","updated":"2019-02-25T13:45:02.457Z","comments":true,"path":"2019/02/25/Hexo-MarkdownTable/","link":"","permalink":"https://dullyshin.github.io/2019/02/25/Hexo-MarkdownTable/","excerpt":"","text":"마크다운 테이블 Markdown table마크다운 문법으로 테이블을 간편하게 그릴 수 있습니다. 보통 키보드에서 Backspace아래에 있는 |을 사용하는데요.| 이 기호는 영어로 파이프(pipe)라고 부릅니다. 마크다운 테이블 예시는 아래와 같습니다. 12345| Tables | Are | Cool ||----------|:-------------:|------:|| col 1 is | left-aligned | $1600 || col 2 is | centered | $12 || col 3 is | right-aligned | $1 | Tables Are Cool col 1 is left-aligned $1600 col 2 is centered $12 col 3 is right-aligned $1 가운데 정렬을 하기 위해 Are 밑에 :-------------:를 사용하고, 오른쪽 정렬을 사용할 때에는 ------:를 사용하면 됩니다.그리고 굳이 위와 같이 이쁘게 테이블 정렬을 하지 않아도 됩니다. 보기 편하라고 정렬을 하기는 하지만 굳이 바쁘다면 아래와 같이 테이블을 만들어도 상관 없습니다. 출력되는 결과는 위와 같습니다. 12345| Tables|Are|Cool ||----------|:-------------:|------:||col 1 is|left-aligned|$1600||col 2 is|centered|$12||col 3 is| right-aligned |$1| 꿀 TIP마크다운에 테이블 안에 | 파이프 기호를 사용하려면 파이프 기호 대신에 &amp;#124; 를 입력하면 됩니다! HTML에서는 &amp;#124;가 파이프로 보입니다. 더해서 그 부분을 코드화 시키고 싶다면 &lt;code&gt;&amp;#124;&lt;/code&gt;입력하면 됩니다. 1234a | r ------------|-----`a += x;` | r1&lt;code&gt;a &amp;#124;= y;&lt;/code&gt; | r2 a r a += x; r1 a &#124;= y; r2 그리고 그리는 것도 못하고 안에 내용만 써서 테이블을 만들고 싶다! 귀찮은 분들은 아래의 링크를 클릭하도록 합시다. (저도 테이블 그리기 귀찮아서 잘 사용하고 있습니다.) 마크다운 테이블을 만드는데 아주 유용한 사이트 : Markdown Tables Generator 위의 이미지를 클릭하면 크게 볼 수 있습니다. 1번에 테이블에 내용을 입력합니다. 2번의 Generate 버튼을 클릭합니다. 3번의 버튼을 클릭해 만들어진 내용을 복사합니다. 원하는 곳에 붙여넣기(Ctrl + v) 하시면 됩니다. Reference https://stackoverflow.com/questions/17319940/how-to-escape-a-pipe-char-in-a-code-statement-in-a-markdown-table https://www.tablesgenerator.com/markdown_tables Related Posts Hexo error markdown Hexo에서 사용 가능한 태그들","categories":[{"name":"Hexo","slug":"Hexo","permalink":"https://dullyshin.github.io/categories/Hexo/"}],"tags":[{"name":"markdown","slug":"markdown","permalink":"https://dullyshin.github.io/tags/markdown/"},{"name":"마크다운","slug":"마크다운","permalink":"https://dullyshin.github.io/tags/마크다운/"},{"name":"마크다운 테이블","slug":"마크다운-테이블","permalink":"https://dullyshin.github.io/tags/마크다운-테이블/"},{"name":"markdown table","slug":"markdown-table","permalink":"https://dullyshin.github.io/tags/markdown-table/"},{"name":"pipe","slug":"pipe","permalink":"https://dullyshin.github.io/tags/pipe/"},{"name":"마크다운 테이블 안에 코드","slug":"마크다운-테이블-안에-코드","permalink":"https://dullyshin.github.io/tags/마크다운-테이블-안에-코드/"},{"name":"마크다운 테이블 안에 |","slug":"마크다운-테이블-안에","permalink":"https://dullyshin.github.io/tags/마크다운-테이블-안에/"},{"name":"마크다운 표","slug":"마크다운-표","permalink":"https://dullyshin.github.io/tags/마크다운-표/"},{"name":"마크다운 테이블 정렬","slug":"마크다운-테이블-정렬","permalink":"https://dullyshin.github.io/tags/마크다운-테이블-정렬/"},{"name":"테이블 정렬","slug":"테이블-정렬","permalink":"https://dullyshin.github.io/tags/테이블-정렬/"}]},{"title":"(JavaScript) 삼항 연산자 Ternary Operator","slug":"JavaScript-TernaryOperator","date":"2019-02-24T15:18:39.000Z","updated":"2019-08-08T05:17:43.676Z","comments":true,"path":"2019/02/25/JavaScript-TernaryOperator/","link":"","permalink":"https://dullyshin.github.io/2019/02/25/JavaScript-TernaryOperator/","excerpt":"","text":"##[JavaScript] 삼항 연산자 - 삼항 연산자(Ternary operator) if문을 줄여서 사용할 수 있는 삼항 연산자! 아래와 같이 사용할 수 있습니다. 1( 조건 ) ? 명령문1 : 명령문2; // 삼항연산자의 표현 조건 : 참 또는 거짓으로 평가되는 표현식입니다.명령문1 : 조건이 참으로 평가될 경우 실행되는 문입니다.명령문2 : 이 구문은 조건이 거짓일경우 다른 조항이 있을 때 실행되는 구문입니다. 예시를 들어 봅시다. 1int b1 = (5&gt;4) ? 50 : 40; // 결과 result : 50 조건이 참(true)여서 결과는 50이 됩니다. 위의 삼항 연산자를 if문으로 바꿔 사용하면 아래와 같습니다. 123456int b2 = 0;if(5 &gt; 4)&#123; b2 = 50;&#125;else&#123; b2 = 40;&#125; 저는 삼항 연산자를 아래와 같이 자주 사용합니다. 만약 action_type이 modify면 읽을 수 밖에 없고 그 외에는 input 박스를 입력 가능하도록 합니다. 1&lt;input type=&quot;text&quot; name=&quot;country&quot; value=&quot;Norway&quot; $&#123;action_type == &apos;modify&apos; ? &apos;readonly&apos; : &apos;&apos; &#125;&gt; - if…else12345if (조건)&#123; 명령문1 //true&#125;else &#123; 명령문2 //false&#125; 조건 : 참 또는 거짓으로 평가되는 표현식입니다.명령문1 : 조건이 참으로 평가될 경우 실행되는 문입니다.명령문2 : 이 구문은 조건이 거짓일경우 다른 조항이 있을 때 실행되는 구문입니다. - 여러 if…else를 사용할 경우12345678if (조건1)&#123; 명령문1&#125;else if (조건2)&#123; 명령문2&#125;else if (조건3)&#123; 명령문3&#125;else 명령문N 조건 1, 2, 3 : 참 또는 거짓으로 평가되는 표현식입니다.명령문 1, 2, 3 : 조건이 참으로 평가될 경우 실행되는 문입니다.조건문 N : 모든 조건에 맞지 않을때 실행됩니다. - else if자바 스크립트에는 elseif 구문이 없습니다. 대신 else if 를 사용할 수 있습니다. 1234567if (x &gt; 5) &#123;&#125; else if (x &gt; 50) &#123;&#125; else &#123;&#125; 예시를 확인해 볼까요? 123456789101112131415function example(…) &#123; return condition1 ? value1 : condition2 ? value2 : condition3 ? value3 : value4;&#125;// 위의 example함수는 아래와 같습니다. Equivalent to:function example(…) &#123; if (condition1) &#123; return value1; &#125; else if (condition2) &#123; return value2; &#125; else if (condition3) &#123; return value3; &#125; else &#123; return value4; &#125;&#125; 아주 자주 사용하게 되는 if 문 삼항연산자에 대해 알아보았습니다. Reference https://dojang.io/mod/page/view.php?id=145 https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Conditional_Operator Related Posts JavaScript-array","categories":[{"name":"Programming","slug":"Programming","permalink":"https://dullyshin.github.io/categories/Programming/"},{"name":"JavaScript","slug":"Programming/JavaScript","permalink":"https://dullyshin.github.io/categories/Programming/JavaScript/"}],"tags":[{"name":"if","slug":"if","permalink":"https://dullyshin.github.io/tags/if/"},{"name":"삼항 연산자","slug":"삼항-연산자","permalink":"https://dullyshin.github.io/tags/삼항-연산자/"},{"name":"자바 삼항 연산자","slug":"자바-삼항-연산자","permalink":"https://dullyshin.github.io/tags/자바-삼항-연산자/"},{"name":"if...else","slug":"if-else","permalink":"https://dullyshin.github.io/tags/if-else/"},{"name":"Ternary operator","slug":"Ternary-operator","permalink":"https://dullyshin.github.io/tags/Ternary-operator/"},{"name":"여러 if...else를 사용할 경우","slug":"여러-if-else를-사용할-경우","permalink":"https://dullyshin.github.io/tags/여러-if-else를-사용할-경우/"},{"name":"자바스크립트 else if","slug":"자바스크립트-else-if","permalink":"https://dullyshin.github.io/tags/자바스크립트-else-if/"},{"name":"자바스크립트 if","slug":"자바스크립트-if","permalink":"https://dullyshin.github.io/tags/자바스크립트-if/"}]},{"title":"(MS SQL) 삽입시Insert 최대값 추가 +1","slug":"MSSQL-InsertPlusOne","date":"2019-02-20T11:16:14.000Z","updated":"2019-02-25T15:47:50.966Z","comments":true,"path":"2019/02/20/MSSQL-InsertPlusOne/","link":"","permalink":"https://dullyshin.github.io/2019/02/20/MSSQL-InsertPlusOne/","excerpt":"","text":"[MS SQL] 삽입시Insert 최대값 추가 +1 최대값에서 1을 더한 값을 삽입하고 싶을때 mssql에서는 Insert 문을 사용할때 시퀀스를 사용할 수도 있지만, 그렇지 않을 경우에 아래와 같은 쿼리를 사용할 수 있습니다. 123456789INSERT INTO user (user , age , order)VALUES (&apos;dully&apos; , 29 , (SELECT ISNULL(MAX(order) + 1, 1) FROM user)); 여기서 주의 깊게 봐야하는 쿼리는 SELECT ISNULL(MAX(order) + 1, 1) FROM user 입니다.아주 간단한 ISNULL()과 MAX()를 함께 사용하는데요. -ISNULL()ISNULL()은 데이터가 null인 부분을 조회하는 쿼리 입니다. 반대의 예시는 아래와 같습니다. 값이 있는 부분을 조회하는 쿼리죠. 1234SELECT FirstName, LastName, MiddleNameFROM DIMEmployeeWHERE MiddleName IS NOT NULLORDER BY LastName DESC; -MAX()MAX()는 데이터 중 가장 큰 값을 조회합니다. 간단한 예시는 아래와 같습니다. () 괄효 안에 조회하고 싶은 컬럼 이름을 적으시면 됩니다. 12SELECT MAX(TaxRate)FROM Sales.SalesTaxRate; ### -Result SELECT MAX(order) + 1 FROM user 으로도 최대값에 1을 더한 값을 구할 수 있지만, 위의 order의 값이 null일 경우를 대비해서 null일 경우에 1을 삽입하도록 하였습니다. 12SELECT ISNULL(MAX(order) + 1, 1) FROM user//SELECT ISNULL(&apos;null이 아닐경우 실행 됨&apos;, &apos;null일때 실행됨&apos;) FROM user More Info MS SQL - ISNULL MS SQL - MAX Reference https://docs.microsoft.com/en-us/sql/t-sql/queries/is-null-transact-sql?view=sql-server-2017 Related posts-SQL Advanced SQL 중급 문법-Oracle-Join 오라클 조인 문법-SQL basic SQL 기본 문법-PostgreSql 란?","categories":[{"name":"Programming","slug":"Programming","permalink":"https://dullyshin.github.io/categories/Programming/"},{"name":"SQL","slug":"Programming/SQL","permalink":"https://dullyshin.github.io/categories/Programming/SQL/"}],"tags":[{"name":"mssql","slug":"mssql","permalink":"https://dullyshin.github.io/tags/mssql/"},{"name":"max","slug":"max","permalink":"https://dullyshin.github.io/tags/max/"},{"name":"isnull","slug":"isnull","permalink":"https://dullyshin.github.io/tags/isnull/"},{"name":"sequence","slug":"sequence","permalink":"https://dullyshin.github.io/tags/sequence/"},{"name":"널처리","slug":"널처리","permalink":"https://dullyshin.github.io/tags/널처리/"},{"name":"삽입시 최대값 추가 +1","slug":"삽입시-최대값-추가-1","permalink":"https://dullyshin.github.io/tags/삽입시-최대값-추가-1/"},{"name":"칼럼의 최대값 +1","slug":"칼럼의-최대값-1","permalink":"https://dullyshin.github.io/tags/칼럼의-최대값-1/"},{"name":"insert 구문에 max 사용","slug":"insert-구문에-max-사용","permalink":"https://dullyshin.github.io/tags/insert-구문에-max-사용/"},{"name":"insert할 때 최대값 +1","slug":"insert할-때-최대값-1","permalink":"https://dullyshin.github.io/tags/insert할-때-최대값-1/"},{"name":"insert시 최대값 +1","slug":"insert시-최대값-1","permalink":"https://dullyshin.github.io/tags/insert시-최대값-1/"},{"name":"삽입 구문에 max 사용","slug":"삽입-구문에-max-사용","permalink":"https://dullyshin.github.io/tags/삽입-구문에-max-사용/"},{"name":"삽입할 때 최대값 +1","slug":"삽입할-때-최대값-1","permalink":"https://dullyshin.github.io/tags/삽입할-때-최대값-1/"},{"name":"삽입시 최대값 +1","slug":"삽입시-최대값-1","permalink":"https://dullyshin.github.io/tags/삽입시-최대값-1/"}]},{"title":"스프링 프레임워크 IoC/DI","slug":"spring-springIoc","date":"2018-09-10T13:10:50.000Z","updated":"2023-08-21T14:23:52.847Z","comments":true,"path":"2018/09/10/spring-springIoc/","link":"","permalink":"https://dullyshin.github.io/2018/09/10/spring-springIoc/","excerpt":"","text":"스프링 프레임워크 IoC/DISpring Framework 란 Aspect Oriented Programming, Portable Service Abstraction, Inversion of Control / Dependency Injectoin 기술을 바탕으로 Plain Old Java Object 를 지향하는 경량의 오픈소스 프레임워크입니다.AOP, PSA, IoC/DI 기술은 스프링의 3 대 핵심 기반기술입니다. 스프링 프레임워크를 제대로 이해하기 위해서는 기반기술을 제대로 이해할 필요가 있습니다. AOP : 관점 지향 프로그래밍공통로직(횡단관심사)을 별도의 공간(클래스)에 따로 구현하고 이를 런타임 시 적용이 필요한 클래스 메소드에 프록시를 사용하여 적용하는 기술 PSA : 이동가능한 서비스를 위한 추상화연동 애플리케이션이 변하더라도 개발자의 코드가 변경되지 않도록 스프링이 개입하여 연동 서비스를 추상화하고 개발자는 이 추상화 서비스와 대화하면 단일 코드로 연동작업을 지속 가능하게 해주는 기술 IoC : 제어의 역행객체관리를 개발자가 하지 않고 스프링이 대신 맡아서 처리해 주는 기술 DI : 의존성 주입클래스 내 필요한 의존객체를 외부에서 주입해 주는 기술 Plain Object : 순수한 자바 객체개발자가 필요로 하는 코드만 존재하는 순수한 객체. 특정 기술을 사용하기 위해서 반드시 구성해야 하는 환경이 없으며 개발자의 클래스에 특정 기술을 위한 코드가 강제되지 않는 상태에 자바 객체 Spring IoC 실습 (XML기반, 인터페이스, 세터주입)New &gt; Project &gt; Spring Legacy ProjectProject Name : carmakerSimple projects : Simple Spring MavenPackage : com.example.iocSpring version : 4.2.0 Money.java1234567891011121314package com.example.ioc;public class Money &#123; private int amount; public Money() &#123;&#125; public Money(int amount) &#123; this.amount = amount; &#125; public int getAmount() &#123; return amount; &#125; public void setAmount(int amount) &#123; this.amount = amount; &#125;&#125; 이 클래스는 값을 보관하기 위해 사용하는 Value Object 입니다.필드변수 amount 만 직접 코딩하고 나머지는 이클립스가 제공하는 코드 제너레이트 기능을 이용하여 작성하도록 합니다. 마우스 오른쪽 버튼 클릭 후 Source &gt; Generate Getters and Setters 를 클릭하시면 됩니다. Car.java1234567891011121314package com.example.ioc;public class Car &#123; private String name; public Car() &#123;&#125; public Car(String name) &#123; this.name = name; &#125; public String getName() &#123; return name; &#125; public void setName(String name) &#123; this.name = name; &#125;&#125; 자동차 관련정보를 관리하는 Value Object 입니다. HyundaiMaker.java1234567891011package com.example.ioc;public class HyundaiMaker&#123; public HyundaiMaker() &#123; &#125; public Car sell(Money money) &#123; System.out.println(\"I sold a car.\"); Car car = new Car(\"Sonata\"); return car; &#125;&#125; Money 객체를 받고 Car 객체를 직접 만들어서 리턴하는 서비스 로직을 제공합니다. Project에서 마우스 우측버튼 -&gt; new -&gt; other -&gt; Spring -&gt; Spring Bean Configuration File src/main/resources/ioc.xml 을 생성합니다.다음 버튼을 누른 후 위쪽에 beans을 선택하시고 아래쪽에 spring-beans-4.2.xsd를 선택해주세요. 12345678&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;&lt;beans xmlns=\"http://www.springframework.org/schema/beans\"xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"xsi:schemaLocation=\"http://www.springframework.org/schema/beanshttp://www.springframework.org/schema/beans/spring-beans-4.2.xsd\"&gt;&lt;!—아래 부분만 코딩 하세요 -&gt;&lt;bean id=\"orderManager\" class=\"com.example.ioc.OrderManager\"/&gt;&lt;/beans&gt; OrderManagerApp.java12345678910package com.example.ioc;public class OrderManager &#123; private HyundaiMaker maker; public OrderManager () &#123; this.maker = new HyundaiMaker(); &#125; public void order() &#123; Car car = this.maker.sell(new Money(1000)); &#125;&#125; OrderManager와 HyundaiMaker는 서로 떼어 놓을 방법이 없다. 이 두 클래스는 정적으로 결합(coupling)되어 있습니다. 자바에서 결합도를 떨어뜨리는 일반적인 방법은 구현을 인터페이스 뒤로 숨기는 인터페이스 기반 프로그래밍을 하는 것입니다. 이를 통해 클라이언트 클래스에 영향을 주지 않고도 쉽게 구현 클래스가 교체될 수 있도록 할 수 있습니다. CarMaker.java1234package com.example.ioc;public interface CarMaker &#123; public Car sell(Money money) ;&#125; 결합도를 낮추기 위해 인터페이스 기반으로 프로그래밍 합니다. HyundaiMaker.java123456789package com.example.ioc;public class HyundaiMaker implements CarMaker&#123; public HyundaiMaker() &#123; &#125; public Car sell(Money money) &#123; System.out.println(\"I sold a car.\"); Car car = new Car(\"Sonata\"); return car; &#125;&#125; Money 객체를 받고 Car 객체를 직접 만들어서 리턴하는 서비스 로직을 제공합니다. DaewooMaker.Java123456789package com.example.ioc;public class DaewooMaker implements CarMaker &#123;public DaewooMaker () &#123; &#125;public Car sell(Money money) &#123;System.out.println(\"I sold a car.\");Car car = new Car(“Tosca”);return car;&#125;&#125; 대우 서비스 로직도 만들어 봅시다. OrderManager.java123456789101112package com.example.ioc;public class OrderManager &#123;private String name;private CarMaker maker;public OrderManager() &#123; &#125;public void order() &#123;Car car = this.maker.sell(new Money(1000));&#125;//setter 메소드를 통해 CarMaker 타입 객체를 주입 받는다.public void setMaker(CarMaker maker) &#123;this.maker = maker;&#125; ioc.xml 수정12345678910111213141516&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;&lt;beans xmlns=\"http://www.springframework.org/schema/beans\"xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"xsi:schemaLocation=\"http://www.springframework.org/schema/beanshttp://www.springframework.org/schema/beans/spring-beans-4.2.xsd\"&gt;&lt;bean id=\"hyundaiMaker\" class=\" com.example.ioc.HyundaiMaker\"/&gt;&lt;bean id=“daewooMaker\" class=\" com.example.ioc.DaewooMaker\"/&gt;&lt;bean id=\"orderManager\"class=\"com.example.ioc.OrderManager\"&gt;&lt;!-- 세터 주입을 의미 --&gt;&lt;property name=\"maker\"&gt;&lt;!-- 이부분을 수정하면 소스수정 없이 maker 교체 가능 --&gt;&lt;ref bean=\"hyundaiMaker\"/&gt;&lt;/property&gt;&lt;/bean&gt;&lt;/beans&gt; OrderManagerApp 실행 후 결과 확인해 봅시다. 혹시 안 되시는 부분이나 오타가 있다면 알려주세요! 참고 탑크리에듀교육센터(http://www.topcredu.co.kr) 오라클자바커뮤니티(http://ojc.asia)","categories":[{"name":"Programming","slug":"Programming","permalink":"https://dullyshin.github.io/categories/Programming/"},{"name":"Spring Framework","slug":"Programming/Spring-Framework","permalink":"https://dullyshin.github.io/categories/Programming/Spring-Framework/"}],"tags":[{"name":"Spring Framework","slug":"Spring-Framework","permalink":"https://dullyshin.github.io/tags/Spring-Framework/"},{"name":"스프링 프레임워크","slug":"스프링-프레임워크","permalink":"https://dullyshin.github.io/tags/스프링-프레임워크/"},{"name":"스프링 실습","slug":"스프링-실습","permalink":"https://dullyshin.github.io/tags/스프링-실습/"},{"name":"스프링 기초","slug":"스프링-기초","permalink":"https://dullyshin.github.io/tags/스프링-기초/"}]},{"title":"Oracle-Join","slug":"SQL-Oracle-Join","date":"2018-09-02T14:55:57.000Z","updated":"2018-09-02T16:39:00.085Z","comments":true,"path":"2018/09/02/SQL-Oracle-Join/","link":"","permalink":"https://dullyshin.github.io/2018/09/02/SQL-Oracle-Join/","excerpt":"","text":"Join문 기초하나의 테이블 만으로 모든 정보를 처리하기 어렵고 확인하기도 복잡해 집니다. 이 문제들을 해결하기 위해 다수의 테이블로 나눈 후 테이블간의 관계성을 부여합니다. 복수의 테이블을 결합하여 하나의 테이블 처럼 결과를 확인 할 수 있습니다. JOIN 종류 OUTTER JOIN : 매칭되는 행이 없어도 결과를 가져오고 매칭되는 행이 없는 경우 NULL로 표시합니다.LEFT JOIN과 RIGHT JOIN이 있습니다. INNER JOIN : 조인하는 두개의 테이블 모두에 데이터가 존재하는 행에 대해서만 결과를 가져옵니다. 아래의 이미지를 통해 JOIN에 대해 더욱 쉽게 이해 할 수 있습니다. 한 번 확인해 보세요. 조인 SQL문장데이터의 규모가 커지면서 하나의 테이블로 정보를 수용하기가 어려워지면 테이블을 분활하고 테이블 간의 관계성을 부여합니다. 그 후 여러개의 테이블을 합쳐서 확인하기 위해 JOIN을 사용합니다. TIP. 테이블 날짜가 2015/02/02 형식으로 되어있지만 이 중에서 년과 월만을 출력하고 싶다면 SELECT 문에서 TO_CHAR(S.SALE_DATE, &#39;YYYYMM&#39;) AS YYYYMM 이렇게 작성하시면 됩니다. 1234567SELECT TO_CHAR(S.SALE_DATE, &apos;YYYYMM&apos;) AS YYYYMM , G.REGION , SUM(S.SALES) AS SALESFROM SALES S , GEOGRAPHY GWHERE S.DOSI = G.DOSIGROUP BY TO_CHAR(S.SALE_DATE,&apos;YYYYMM&apos;), G.REGION; 서브쿼리 SQL문장 TIP. ORDER BY에서 맨 끝에 ASC는 오름차순으로 정렬하는 것을 뜻합니다. 만약 내림차순으로 정렬하고 싶다면 DESC를 사용하시면 됩니다. 끝에 아무 것도 적지 않으면 자동으로 오름차순 정렬 됩니다. 1234567SELECT TO_CHAR(S. SALE_DATE, &apos;YYYYMM&apos;) AS YYYYMM , ( SELECT REGION FROM GEOGRAPHY G WHERE G.DOSI = S.DOSI ) REGION , S.SALESFROM SALES SORDER BY TO_CHAR(S.SALE_DATE,&apos;YYYYMM&apos;), REGION ASC; 테이블 3개 조인 INNER JOIN 쿼리 12345SELECT A.ID, A.NAME, B.DPTNAME, C.SALARYFROM EMPLOYEE A INNER JOIN DEPARTMENT BON A.DPID = B.DPIDINNER JOIN SALARYINFO CON A.ID = C.PID; 비표준 쿼리 123SELECT A.ID, A.NAME, B.DPTNAME, C.SALARYFROM EMPLOYEE A, DEPARTMENT B, SALARYINFOWHERE A.DPID = B.DPID AND A.ID = C.PID; 혹시나 궁금하신 점 있다면 댓글로 물어봐 주세요! RELATED POSTS SQL basic SQL Advanced 참고 http://metelwiki.tistory.com/64 https://opentutorials.org/course/195/1409 https://dsin.wordpress.com/2013/03/16/sql-join-cheat-sheet/","categories":[{"name":"Programming","slug":"Programming","permalink":"https://dullyshin.github.io/categories/Programming/"},{"name":"SQL","slug":"Programming/SQL","permalink":"https://dullyshin.github.io/categories/Programming/SQL/"}],"tags":[{"name":"Join문 기초","slug":"Join문-기초","permalink":"https://dullyshin.github.io/tags/Join문-기초/"},{"name":"JOIN 종류","slug":"JOIN-종류","permalink":"https://dullyshin.github.io/tags/JOIN-종류/"},{"name":"서브쿼리 SQL문장","slug":"서브쿼리-SQL문장","permalink":"https://dullyshin.github.io/tags/서브쿼리-SQL문장/"},{"name":"테이블 3개 조인","slug":"테이블-3개-조인","permalink":"https://dullyshin.github.io/tags/테이블-3개-조인/"}]},{"title":"HTML 이미지 링크거는 법","slug":"HTML-imgLink","date":"2018-08-29T16:46:13.000Z","updated":"2023-08-12T15:34:01.480Z","comments":true,"path":"2018/08/30/HTML-imgLink/","link":"","permalink":"https://dullyshin.github.io/2018/08/30/HTML-imgLink/","excerpt":"","text":"HTML 이미지 링크거는 법HTML에서 이미지를 누르면 링크가 연결되는 것을 배워 봅시다! 아주 아주 간단합니다.결과만 보고 싶으신 분들은 이 포스트의 맨 마지막을 확인하세요. HTML 이미지 기본 형식 HTML에서는 &lt;img&gt;태그를 이용해 이미지를 삽입 할 수 있습니다. 12&lt;img src=&quot;http://t1.daumcdn.net/friends/prod/editor/dc8b3d02-a15a-4afa-a88b-989cf2a50476.jpg&quot;alt=&quot;카카오 라이언&quot; width=&quot;100&quot; height=&quot;50&quot; align=&quot;center&quot; border=&quot;0&quot;&gt; src : 이미지의 웹상의 주소 alt : 이미지 위에 마우스를 올렸을때 설명 글, 이미지가 보이지 않을 떄 설명 height : 이미지의 높이 설정 (세로 크기) width : 이미지의 너비 설정 (가로 크기) align : 이미지 정렬방식 (left, center, right) border : 이미지 테두리 두께 (0이면 테두리가 없습니다.) HTML 링크 기본 형식링크를 연결할때 사용하는 &lt;a&gt; 태그를 알아봅시다. 하이퍼 링크라고도 불립니다. 기본적으로 &lt;a&gt;태그는 파란색으로 나타납니다. 1&lt;a href=&quot;https://dullyshin.github.io/&quot; target=&quot;_blank&quot;&gt;HYEJIN IT BLOG&lt;a&gt; HYEJIN IT BLOG href : 연결 하고자 하는 주소 target _blank :웹 브라우저에서 새 창으로 연결 됩니다. _self : default 기본 속성으로 현재 있는 창에서 연결됩니다. _parent : 현재 창보다 상위 프레임 창에서 연결됩니다. _top : 웹 브라우저 창이 전체 창으로 연결됩니다. HTML 이미지 링크거는 법 위에서 배운 2가지의 링크를 종합하여 HTML 이미지 링크거실 수 있습니다. &lt;a&gt;태그 안에 &lt;img&gt;태그를 합쳐서 사용합니다. 123&lt;a href=&quot;https://dullyshin.github.io/&quot; height=&quot;5&quot; width=&quot;10&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;\\images\\logo.png&quot; alt=&quot;위의 이미지를 누르면 연결됩니다.&quot;&gt;&lt;a&gt; 아주 간단합니다. 문제 해결되길 바랄께요! 궁금하신 점 있다면 댓글 남겨주세요. Related Posts HTML 간단하게 표 만들기 HTML 에디터 (jsFiddle,메모장)","categories":[{"name":"Programming","slug":"Programming","permalink":"https://dullyshin.github.io/categories/Programming/"},{"name":"HTML","slug":"Programming/HTML","permalink":"https://dullyshin.github.io/categories/Programming/HTML/"}],"tags":[{"name":"html 이미지 링크","slug":"html-이미지-링크","permalink":"https://dullyshin.github.io/tags/html-이미지-링크/"},{"name":"html 이미지","slug":"html-이미지","permalink":"https://dullyshin.github.io/tags/html-이미지/"},{"name":"html 링크","slug":"html-링크","permalink":"https://dullyshin.github.io/tags/html-링크/"},{"name":"이미지 링크걸기","slug":"이미지-링크걸기","permalink":"https://dullyshin.github.io/tags/이미지-링크걸기/"},{"name":"html 링크걸기","slug":"html-링크걸기","permalink":"https://dullyshin.github.io/tags/html-링크걸기/"}]},{"title":"HTML 에디터 (jsFiddle,메모장)","slug":"HTML-Editor","date":"2018-08-29T10:03:41.000Z","updated":"2021-10-25T06:33:59.698Z","comments":true,"path":"2018/08/29/HTML-Editor/","link":"","permalink":"https://dullyshin.github.io/2018/08/29/HTML-Editor/","excerpt":"","text":"jsFiddle을 사용해 HTML 작성하기jsFiddle을 이용해 아주 쉽게 작성하고 결과를 확인할 수 있습니다.또한 HTML, CSS, JavaScript 코드를 jsFiddle에서 작성한 후에 다른 사람들과 공유할 수 있습니다!! 다른 사람과 공유하고 싶다면 jsFiddle에서 작성한 후 윗 부분에 ‘Embed’ 부분을 클릭 한 후 ‘Embed snippet’ 에서 공유 소스코드를 확인 할 수 있습니다. 이 코드를 다른 사람에게 보내거나 자신의 홈페이지 에서 사용하실 수 있습니다. 12jsFiddle 공유 소스&lt;script async src=&quot;//jsfiddle.net/szktx0gb/6/embed/html,css,result/&quot;&gt;&lt;/script&gt; 만약 Hexo Blog를 통해 공유하신다고 한다면 jsFiddle에서 작성한 후 윗 부분에 ‘Embed’ 부분을 클릭 한 후 ‘Embed snippet’ 에서 공유 소스코드를 확인 하신 후 ‘shorttag’ 부분에서 jsfiddle.net/ 뒤에 오는 문자를 사용하시면 됩니다. 1&#123;% jsfiddle szktx0gb html,css,result %&#125; HTML 메모장으로 작성하기메모장으로 HTML을 작성해봅시다. 누구나 다 가지고 있는 메모장을 이용해 html을 작성하고 실행할 수 있습니다. (메모장에 이런 기능이 있는지 몰라서 가져와 봤습니다.) 컴퓨터의 시작 버튼을 누르고 메모장을 검색하여 메모장을 실행합니다. 아래에 제가 작성한 HTML 태그를 복사해 메모장에 붙여 넣습니다. 12345678910&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;body&gt;&lt;h1&gt;간단하게 시작하는 HTML&lt;/h1&gt;&lt;p&gt;HYEJIN 블로그.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt; 저장을 합니다.메모장의 파일 버튼을 누르고 다른 이름으로 저장을 누릅니다.파일의 이름을 “index.html”로 작성하고 저장 버튼 왼쪽의 인코딩 설정을 UTF-8로 해주세요. 저장한 html 파일을 열어 봅시다. 따라하시느라 수고하셨어요!! 앞으로도 메모장을 이용해 HTML결과를 쉽게 확인 하실 수 있어요. Related postsHTML의 기초부터 시작하자","categories":[{"name":"Programming","slug":"Programming","permalink":"https://dullyshin.github.io/categories/Programming/"},{"name":"HTML","slug":"Programming/HTML","permalink":"https://dullyshin.github.io/categories/Programming/HTML/"}],"tags":[{"name":"html","slug":"html","permalink":"https://dullyshin.github.io/tags/html/"},{"name":"html 에디터","slug":"html-에디터","permalink":"https://dullyshin.github.io/tags/html-에디터/"},{"name":"jsFiddle","slug":"jsFiddle","permalink":"https://dullyshin.github.io/tags/jsFiddle/"},{"name":"메모장","slug":"메모장","permalink":"https://dullyshin.github.io/tags/메모장/"},{"name":"html editor","slug":"html-editor","permalink":"https://dullyshin.github.io/tags/html-editor/"}]},{"title":"HTML 기초 알아봅시다!","slug":"HTML-basic","date":"2018-08-29T09:17:32.000Z","updated":"2021-10-25T06:34:11.155Z","comments":true,"path":"2018/08/29/HTML-basic/","link":"","permalink":"https://dullyshin.github.io/2018/08/29/HTML-basic/","excerpt":"","text":"HTML에 기초부터 배워 봅시다.오늘은 HTML에 대해서 배워봅시다. 정말 쉽고 간단하니 누구가 배울 수 있습니다. 차근차근 알아봅시다! HTML 기초적인 구조123456789101112&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt;&lt;title&gt;Page Title&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;h1&gt;제목을 쓰는 태그 H1&lt;/h1&gt;&lt;p&gt;내용을 작성할 때 사용하는 p 태그&lt;/p&gt;&lt;/body&gt;&lt;/html&gt; 위에서 사용한 태그 설명 &lt;!DOCTYPE html&gt; : 이 문서를 html로 정의 합니다. &lt;html&gt; : html 페이지의 루트 요소 입니다. &lt;head&gt; : 문서에 대한 메타 정보가 포함되어 있습니다. &lt;title&gt; : 문서의 제목을 지정합니다. &lt;body&gt; : 표시되는 페이지 내용이 포함되어 있습니다. &lt;h1&gt; : 클 글씨를 작성할 수 있습니다. 주로 제목을 쓸 때 사용합니다. &lt;p&gt; : 내용을 작성할때 주로 사용 됩니다. HTML 태그Html 태그는 보통 아래와 같이 생겼습니다. &lt;태그 이름&gt;내용을 적습니다…&lt;/태그 이름&gt; html 태그는 보통 짝을 이루어 사용 됩니다. 작성하실 내용 앞과 뒤에 사용하실 태그를 이렇게 &lt;p&gt;내용&lt;/p&gt; 붙이면 됩니다. 첫 번쨰 태그는 시작태그, 두번째 태그는 끝 태그라 부릅니다. 웹 브라우져웹브라우져(크롬, 인터넷익스플로어, 파이어 폭스, 사파리)의 목적은 html태그를 읽고 보여주는 것입니다. 브라우져는 html 태그를 보여주지는 않지만 그 태그를 사용하여 사용자에게 어떻게 보여줄지 결정합니다. 위의 결과를 브라우저에서 보면 아래와 같습니다. HTML 페이지 구조 주의 : &lt;body&gt; 태그안에 흰색으로 칠해진 부분만 브라우져에 표시 됩니다. &lt;!DOCTYPE html&gt; 이 무엇이지??&lt;!DOCTYPE&gt; 자체가 문서의 타입을 나타냅니다. 그래서 브라우져가 웹페이지를 정확하게 보여줄 수 있죠.딱 한번만 사용하고 보통 html 문서에 맨 위에 작성됩니다. (html 태그를 사용하기 전에 사용하면 됩니다.)대문자 소문자 상관없이 사용하셔도 괜찮습니다. HTML5 에서는 &lt;!DOCTYPE html&gt;으로 정의 합니다. 다음은 html 에디터에 대해서 알아 봅시다. 궁금하신 점 있으면 물어봐 주세요. Related postsHTML에디터 (jsFiddle,메모장)","categories":[{"name":"Programming","slug":"Programming","permalink":"https://dullyshin.github.io/categories/Programming/"},{"name":"HTML","slug":"Programming/HTML","permalink":"https://dullyshin.github.io/categories/Programming/HTML/"}],"tags":[{"name":"HTML 기초","slug":"HTML-기초","permalink":"https://dullyshin.github.io/tags/HTML-기초/"},{"name":"HTML 기초적인 구조","slug":"HTML-기초적인-구조","permalink":"https://dullyshin.github.io/tags/HTML-기초적인-구조/"},{"name":"웹 브라우져","slug":"웹-브라우져","permalink":"https://dullyshin.github.io/tags/웹-브라우져/"},{"name":"DOCTYPE","slug":"DOCTYPE","permalink":"https://dullyshin.github.io/tags/DOCTYPE/"},{"name":"DOCTYPE html","slug":"DOCTYPE-html","permalink":"https://dullyshin.github.io/tags/DOCTYPE-html/"}]},{"title":"정보처리기사 비전공자 합격 후기","slug":"Engineer-Information-Processing","date":"2018-08-28T14:12:33.000Z","updated":"2018-08-28T16:07:38.074Z","comments":true,"path":"2018/08/28/Engineer-Information-Processing/","link":"","permalink":"https://dullyshin.github.io/2018/08/28/Engineer-Information-Processing/","excerpt":"","text":"정보처리기사 비전공자 합격 후기안녕하세요!오늘은 비전공자 정보처리기사 필기 합격 후기를 남기려고 합니다.우선 저는 경영학과를 졸업하였구요. Java, Database와는 관계 없는 삶을 살았습니다.프로그래밍 학원에서 통합 SW 프로그래밍을 3개월 반 동안 공부를 했습니다. 2018년 제3회 필기 시험을 보았구요. 지금은 필기 통과 후 정보처리기사 실기 시험을 준비하고 있습니다. 시험 준비 기간 : 약 한달 저는 필기 원서 접수를 한 후부터 공부를 시작하였습니다. 7월 25일에 원서 접수를 하고 8월 19일에 시험을 보았습니다. 우선 이기쥬희의 이기라이프에 정보처리기사 독학-필기 합격 요약집-을 보시고 합격하신 후기가 많더라구요. 저도 다운로드 받았습니다. 아주 감사합니다! 하지만 저는 2018 시나공 서머리로 공부하였는데요. 이유는 한달이라는 기간안에 요약집을 보고 공부하지 않으면 엄청난 양을 다 공부할 수 없는 것을 알기 때문입니다. 더해서 프린터기가 없어서 컴퓨터로만 공부하니 무언가 허전하더라구요. 장비병이 있나봅니다. 돈을 써야지만 뭔가 한 것 같은 기분에 무언가를 시작하면 장비에 돈을 투자하게 되더라구요… 그래서 책을 질렀어요. 하이튼 그렇게 공부를 시작하였습니다. 책을 공부하면서 이해가 안가는 부분이 나오면 연결된 QR코드를 사용하여 동영상으로 공부하였습니다. 하지만 한달이라는 시간은 정말 짧은 시간이었습니다. 도저히 책 한권을 전부 보고 이해할 수 없더라구요. 그리고 요약본이라 그런지 설명이 자세히 나온 것이 아니라 짧게 요약되어 있어 더욱 무슨 뜻인지 이해가지 않더라구요. 저의 정보처리기사 공부법저와 같이 시간이 모자르고 모든 양을 공부하고 싶지 않다면 저의 공부법을 참고해 주세요. 솔직하게 저희는 평균 60점을 넘기면 합격합니다. 저는 평균 60점에 목표를 맞추었습니다. 우선 최근 3년간의 정보처리기사 기출문제를 풉니다. 모르겠더라도 일단 찍어보세요. 문제에 익숙해지는 겁니다. 어떤 형식으로 문제가 기출되는지 확인합시다. 채점을 해보세요. 점수를 확인해보세요. (5과목 평균 60점이 합격입니다.) 지금 상태로 진짜 시험을 받았다면 어떻게 될지 상상해보세요. 틀린 것과 모르는 문제의 해석을 확인하고 이해하세요. 아무리 쳐다봐도 도통 모르겠다면 ‘이 문제는 이 답이야’ 하고 외워버리자구요. 답을 가리고 틀린 문제와 모르는 문제를 3번 반복해서 풀어보세요. 3번을 반복해서 풀면서 모르겠을 때마다 관련 챕터를 한번씩 읽어보았어요. 2018 시나공 서머리책이 좋은 점은 해당 기출 문제에 관련 요약 설명이 어디에 있는지 표시해 준다는 점이예요. 만약 시간이 남으신다면 최근 5년간의 기출문제를 풉니다. 저는 위와 같이 기출문제를 중심으로 집중 공부하였습니다. 비슷한 유형으로 계속 출제 되고 있는 것을 우리 모두 알고 있는 것 같은데… 정보처리기사 과목 종류 데이터 베이스 : 많이 풀어보시고 외워야 하는 부분이 많습니다. 전자계산기 구조 : 계산문제는 반드시 이해하고 풀어보세요. (주의)과락에 주의하세요! 운영체제 : 많이 풀어보시고 외워야 하는 부분이 많습니다. 소프트웨어공학 : 많이 풀어보시고 외워야 하는 부분이 많습니다. 데이터 통신 : 아주 생소하게 느껴지는 부분입니다. 많이 보고 외워야할 부분이 많습니다. 정보처리기사관련 무료 사이트 추천아래의 추천 사이트들은 무료로 이용하실 수 있습니다. 도타비 문제 은행정보처리기사 기출문제를 인터넷만 되면 풀어보실 수 있습니다. 강추! 시나공 자료실가입하시면 기출문제 정답과 해설을 무료로 확인 하실 수 있습니다. 이기쥬희의 이기라이프2017 정보처리기사 독학-필기 합격 요약집-을 보시고 합격하신 후기가 많더라구요. 저도 다운로드 받았습니다. 다시 한번 더 감사합니다! 결론 최소 3번씩 최근 3년간의 기출 문제를 풀어보고 정리하세요. 우리는 100점이 아니라 평균 60점만 맞으면 합격하는 것을 유의해주세요. 과락에 주의하세요. (최저 40점이하로 떨어지면 안되요.) 정보처리기사 기출문제를 많이 풀고 외워야할 부분이 많습니다. 혹시 궁금하신 점이 있으면 물어봐 주세요! 아, 그리고 시험 날 컴퓨터용 사인펜과 주민등록증 챙겨가세요. (저는 수학에 엄청 약해 계산기를 지참하고 갔습니다.)","categories":[{"name":"Review","slug":"Review","permalink":"https://dullyshin.github.io/categories/Review/"}],"tags":[{"name":"정보처리기사 필기","slug":"정보처리기사-필기","permalink":"https://dullyshin.github.io/tags/정보처리기사-필기/"},{"name":"정보처리기사 독학","slug":"정보처리기사-독학","permalink":"https://dullyshin.github.io/tags/정보처리기사-독학/"},{"name":"정보처리기사 공부법","slug":"정보처리기사-공부법","permalink":"https://dullyshin.github.io/tags/정보처리기사-공부법/"},{"name":"정보처리기사 단기간","slug":"정보처리기사-단기간","permalink":"https://dullyshin.github.io/tags/정보처리기사-단기간/"},{"name":"비전공자 정보처리기사","slug":"비전공자-정보처리기사","permalink":"https://dullyshin.github.io/tags/비전공자-정보처리기사/"},{"name":"Engineer-Information-Processing","slug":"Engineer-Information-Processing","permalink":"https://dullyshin.github.io/tags/Engineer-Information-Processing/"}]},{"title":"Hexo에서 사용 가능한 태그들","slug":"Hexo-tags","date":"2018-08-27T15:18:39.000Z","updated":"2020-01-02T06:05:36.131Z","comments":true,"path":"2018/08/28/Hexo-tags/","link":"","permalink":"https://dullyshin.github.io/2018/08/28/Hexo-tags/","excerpt":"","text":"Hexo 태그 플러그인 Hexo Tag Plugins핵소 태그 플러그인은 포스트의 태그와는 다릅니다. Hexo에서는 Markdown문법을 사용할 수 있지만, Hexo에서 제공하는 태그 기능도 갖추고 있습니다. 한 번 자세히 알아봅시다. 인용구 Block Quote인용구를 post, 소스, 제목에 추가하기 위한 완벽한 방법입니다. 옵션으로 인용구의 원작자를 추가할 수도 있습니다. 기본123&#123;% blockquote [author[, source]] [link] [source_link_title] %&#125;content&#123;% endblockquote %&#125; 인자가 없는 일반 인용123&#123;% blockquote %&#125;Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque hendrerit lacus ut purus iaculis feugiat. Sed nec tempor elit, quis aliquam neque. Curabitur sed diam eget dolor fermentum semper at eu lorem.&#123;% endblockquote %&#125; Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque hendrerit lacus ut purus iaculis feugiat. Sed nec tempor elit, quis aliquam neque. Curabitur sed diam eget dolor fermentum semper at eu lorem. 책 구절 인용하기123&#123;% blockquote David Levithan, Wide Awake %&#125;Do not just seek happiness for yourself. Seek happiness for all. Through kindness. Through mercy.&#123;% endblockquote %&#125; Do not just seek happiness for yourself. Seek happiness for all. Through kindness. Through mercy. David LevithanWide Awake Twitter 인용하기123&#123;% blockquote @DevDocs https://twitter.com/devdocs/status/356095192085962752 %&#125;NEW: DevDocs now comes with syntax highlighting. http://devdocs.io&#123;% endblockquote %&#125; NEW: DevDocs now comes with syntax highlighting. http://devdocs.io @DevDocstwitter.com/devdocs/status/356095192085962752 웹 게시물 인용하기123&#123;% blockquote Seth Godin http://sethgodin.typepad.com/seths_blog/2009/07/welcome-to-island-marketing.html Welcome to Island Marketing %&#125;Every interaction is both precious and an opportunity to delight.&#123;% endblockquote %&#125; Every interaction is both precious and an opportunity to delight. Seth GodinWelcome to Island Marketing 코드 블락 Code Block코드 조각(snippet)을 포스트에 추가할 수 있는 유용한 기능입니다. 기본123&#123;% codeblock [title] [lang:language] [url] [link text] [additional options] %&#125;code snippet&#123;% endcodeblock %&#125; 여기서 additional options은 코드 블락의 포멧을 변경할 수 있습니다. 예를 들어 line_number:false, first_line:5 와 같이 사용할 수 있습니다. Extra Options Description Default line_number Show line number true highlight Enable code highlighting true first_line Specify the first line number 1 mark Line highlight specific line(s), each value separated by a comma. Specify number range using a dash Example: mark:1,4-7,10 will mark line 1, 4 to 7 and 10. wrap Wrap the code block in &lt;table&gt; true 일반 code block 사용하기123&#123;% codeblock %&#125;alert(&apos;Hello World!&apos;);&#123;% endcodeblock %&#125; 1alert(&apos;Hello World!&apos;); 언어 지정하기lang 뒤에 원하는 언어를 지정하여 사용하시면 됩니다. 123&#123;% codeblock lang:objc %&#125;[rectangle setX: 10 y: 10 width: 20 height: 20];&#123;% endcodeblock %&#125; 1[rectangle setX: 10 y: 10 width: 20 height: 20]; Code block에 제목 넣기123&#123;% codeblock Array.map %&#125;array.map(callback[, thisArg])&#123;% endcodeblock %&#125; Array.map1array.map(callback[, thisArg]) 제목과 URL 넣기1234&#123;% codeblock _.compact http://underscorejs.org/#compact Underscore.js %&#125;_.compact([0, 1, false, 2, &apos;&apos;, 3]);=&gt; [1, 2, 3]&#123;% endcodeblock %&#125; _.compactUnderscore.js12_.compact([0, 1, false, 2, &apos;&apos;, 3]);=&gt; [1, 2, 3] Backtick 코드 블락 Backtick(`) Code Block Backtick(`)은 키보드에서 ~와 같이 있습니다. 이 방법은 code block을 사용하는 것과 같습니다만 block을 구분하기 위해 세 개의 역 따옴표를 사용하는 점이 다릅니다. 기본 사용법 1[language] [title] [url] [link text] code snippet Pull Quotepull 인용을 추가하기 위한 방법은 다음과 같습니다. 123&#123;% pullquote [class] %&#125;content&#123;% endpullquote %&#125; jsFiddlejsFiddle을 포함시킬 수 있습니다. HTML, CSS, JavaScript 코드를 Gist에서 작성한 후에 공유할 수 있습니다. jsFiddle에서 작성한 후 윗 부분에 ‘Embed’ 부분을 클릭 한 후 ‘Embed snippet’ 에서 공유 소스코드를 확인 할 수 있습니다. ‘shorttag’ 부분에 jsfiddle.net/ 뒤에 오는 코드를 사용하시면 됩니다. 12jsFiddle 공유 소스&lt;script async src=&quot;//jsfiddle.net/szktx0gb/6/embed/html,css,result/&quot;&gt;&lt;/script&gt; 1&#123;% jsfiddle szktx0gb html,css,result %&#125; GistGist를 포함시킬 수 있습니다. Github에서 제공하는 서비스로, 간단한 코드를 Gist에서 작성한 후에 공유할 수 있습니다. 작성 후 공유 버튼을 누르면 아래와 같은 소스코드를 확인할 수 있습니다. 이 코드의 마지막 부분을 ‘gist_id’ 부분에 추가합니다. 12Gist 공유 소스&lt;script src=&quot;https://gist.github.com/DullyShin/49a2c3862f3aad9627a5e3fed3e3a9bc.js&quot;&gt;&lt;/script&gt; 1&#123;% gist 49a2c3862f3aad9627a5e3fed3e3a9bc %&#125; iframeiframe을 포함시킬 수 있습니다. 1&#123;% iframe url [width] [height] %&#125; Image이미지의 사이즈를 지정하여 포함시킬 수 있습니다. [width] [height] 부분에 괄호 없이 숫자를 작성하시면 이미지 사이즈를 조정할 수 있습니다. 123&#123;% img [class names] /path/to/image [width] [height] [title text [alt text]] %&#125;&#123;% img 짜잔 http://upload2.inven.co.kr/upload/2018/04/21/bbs/i14613218338.jpg 250 150 짜잔 %&#125; Linktarget=”_blank” 속성으로 링크를 포함시킬 수 있습니다. 1&#123;% link text url [external] [title] %&#125; Include Codesource/downloads/code 폴더에 있는 코드를 포함시킬 수 있습니다. 1&#123;% include_code [title] [lang:language] path/to/file %&#125; YouTubeYouTube video를 포함시킬 수 있습니다. 1&#123;% youtube video_id %&#125; video_id :유튜브에서 비디오 공유를 눌러서 나오는 url 의 뒷 부분이 해당 비디오의 고유한 아이디입니다. VimeoVimeo video를 포함시킬 수 있습니다. 1&#123;% vimeo video_id %&#125; Include Posts자신의 블로그에 다른 포스트 링크를 포함시킬 수 있습니다. 12&#123;% post_path slug %&#125;&#123;% post_link slug [title] %&#125; slug: slug 는 포스트의 제목을 말합니다. Hexo 에서는 파일 제목이 url 이 되므로 포스트 파일 만들 때 사용한 파일명을 입력하면 됩니다. post_path: 포스트 제목을 입력하면 해당 포스트의 경로가 표시됩니다. post_link: 포스트 제목을 입력하면 해당 포스트의 링크가 생성됩니다. 1&#123;% post_link Hexo-hello-world %&#125; Hexo 처음 포스트하기 Include Assets포스트의 asset을 포함시킬 수 있습니다. 123&#123;% asset_path slug %&#125;&#123;% asset_img slug [title] %&#125;&#123;% asset_link slug [title] %&#125; Raw특정 컨텐츠가 당신의 포스트 내에서 문제를 일으킨다면, raw 태그를 사용하여 감싸주세요. 그러면 렌더링 에러를 피할 수 있습니다. 123&#123;% raw %&#125;content&#123;% endraw %&#125; 참고 https://hexo.io/ko/docs/tag-plugins.html https://futurecreator.github.io/2016/06/19/hexo-tag-plugins/ Related posts markdown MarkdownEditor Hexo error","categories":[{"name":"Hexo","slug":"Hexo","permalink":"https://dullyshin.github.io/categories/Hexo/"}],"tags":[{"name":"jsFiddle","slug":"jsFiddle","permalink":"https://dullyshin.github.io/tags/jsFiddle/"},{"name":"hexo","slug":"hexo","permalink":"https://dullyshin.github.io/tags/hexo/"},{"name":"Hexo Tag Plugins","slug":"Hexo-Tag-Plugins","permalink":"https://dullyshin.github.io/tags/Hexo-Tag-Plugins/"},{"name":"Block Quote","slug":"Block-Quote","permalink":"https://dullyshin.github.io/tags/Block-Quote/"},{"name":"Gist","slug":"Gist","permalink":"https://dullyshin.github.io/tags/Gist/"},{"name":"YouTube","slug":"YouTube","permalink":"https://dullyshin.github.io/tags/YouTube/"}]},{"title":"PostgreSql 란?","slug":"PostgreSQL-Basic","date":"2018-08-27T13:36:57.000Z","updated":"2023-08-12T15:34:43.181Z","comments":true,"path":"2018/08/27/PostgreSQL-Basic/","link":"","permalink":"https://dullyshin.github.io/2018/08/27/PostgreSQL-Basic/","excerpt":"","text":"PostgreSql 란우선 PostgreSQL은 포스트-그레스-큐엘 [Post-Gres-Q-L]로 발음한다. PostgreSQL은 확장 가능성 및 표준 준수를 강조하는 객체-관계형 데이터베이스 관리 시스템(ORDBMS)의 하나이다. BSD 허가권으로 배포되며 오픈소스 개발자 및 관련 회사들이 개발에 참여하고 있다. 특징점유연한 객체 생성다른 관계형 데이터베이스 시스템과 달리, 연산자, 복합 자료형, 집계 함수, 자료형 변환자, 확장 기능 등 다양한 데이터베이스 객체를 사용자가 임의로 만들 수 있는 기능을 SQL 차원에서 제공한다. 이런 특징은 단순한 자료 저장소로써의 기능을 넘어 마치 하나의 새로운 프로그래밍 언어처럼 개발자의 창의성에 따라 무한한 기능을 손쉽게 구현할 수 있도록 한다. 상속java 또는 C++ 프로그래밍 언어와 같이 테이블을 만들어 그 테이블 상속 기능을 이용해 하위 테이블을 만들 수 있다. 테이블에 저장된 자료는 상위 테이블을 조회하면, 해당 테이블의 하위 테이블에 포함된 모든 자료를 조회할 수 있으며, 하위 테이블을 만들 때, 상위 테이블의 칼럼을 그대로 상속 받으면서, 하위 테이블에만 속하는 칼럼을 추가로 만들 수 있다. 함수때때로, ‘저장 프로시저’라고 불리는 SQL문으로 작성된 함수를 서버환경에서 사용할 수 있다. 비록 다른 언어와는 달리 제어문과 반복문을 사용하지는 못하지만, 다른 언어와 결합시킬 수 있다. 일부 언어에서는 심지어 트리거 내부에서 실행시킬 수 있다. 이러한 언어의 예는 다음과 같다. PL/pgSQL (오라클의 PL/SQL과 유사하다) 스크립트 언어를 통한 지원 (예, PL/Python, PL/php, PL/Perl) 컴파일 언어를 통한 지원 (예, C/C++, PL/Java) 통계적 언어를 통한 지원 (예, PL/R) PostgreSQL은 테이블에 대한 질의 결과를 반환하기 위한 ‘행 반환 함수’를 지원한다. 실행권한은 함수 작성자 및, 실행자 모두에게 있다. 참조http://www.gurubee.net/lecture/2929https://d2.naver.com/helloworld/227936https://ko.wikipedia.org/wiki/PostgreSQL","categories":[{"name":"Programming","slug":"Programming","permalink":"https://dullyshin.github.io/categories/Programming/"},{"name":"SQL","slug":"Programming/SQL","permalink":"https://dullyshin.github.io/categories/Programming/SQL/"}],"tags":[{"name":"Programming","slug":"Programming","permalink":"https://dullyshin.github.io/tags/Programming/"},{"name":"PostgreSQL","slug":"PostgreSQL","permalink":"https://dullyshin.github.io/tags/PostgreSQL/"},{"name":"SQL","slug":"SQL","permalink":"https://dullyshin.github.io/tags/SQL/"},{"name":"PostgreSQL_Basic","slug":"PostgreSQL-Basic","permalink":"https://dullyshin.github.io/tags/PostgreSQL-Basic/"}]},{"title":"Mailto 태그","slug":"HTML-MailtoTag","date":"2018-08-26T18:25:29.000Z","updated":"2019-09-04T02:15:23.435Z","comments":true,"path":"2018/08/27/HTML-MailtoTag/","link":"","permalink":"https://dullyshin.github.io/2018/08/27/HTML-MailtoTag/","excerpt":"","text":"mailto 태그를 잘 활용하는 방법대부분의 사람들이 mailto 태그를 사용할 때 수신자 속성만 정의하고 사용할 때가 많다. 하지만 참조,숨은 참조, 제목, 본문 내용까지 이 태그 안에 다 정의할 수가 있다. 이 방법에 대해 간단히 살펴 보도록 하자. 가장 기본적인 형태는 다음과 같다.123&lt;A href=&quot;mailto:sgj00038@naver.com&quot;&gt; sgj00038에게 이메일을 보내자.&lt;/a&gt; #### 다음으로는 참조를 삽입해 보자. 단순히 이메일 주소에 `?cc=` 부분에 참조 이메일 주소를 적어주면 된다: 1234&lt;A href=&quot;mailto:sgj00038@naver.com?cc=another@naver.com&quot;&gt; sgj00038에게 이메일을 보내자.&lt;/a&gt; #### 이제 여기다 숨은 참조`bcc`를 붙여보도록 하자. 12345&lt;A href=&quot;mailto:sgj00038@naver.com?cc=another@naver.com&amp;bcc=theother@naver.com&quot;&gt; sgj00038에게 이메일을 보내자.&lt;/a&gt; #### 이번엔 여러 사람에게 메일을 보내는 경우를 살펴 보자. 12345&lt;A href=&quot;mailto:sgj00038@naver.com,another@naver.com?cc=another0120@naver.com,sgj00038@naver.com&amp;bcc=theother@naver.com&quot;&gt; 여러사람들에게 이메일을 보내자.&lt;/a&gt; #### 이제 제목란에 적당한 제목`subject`을 붙여 보도록 하자. 123456&lt;A href=&quot;mailto:sgj00038@naver.com?cc=another@naver.com&amp;bcc=theother@naver.com&amp;subject=문의가 있습니다!&quot;&gt; sgj00038에게 이메일을 보내자.&lt;/a&gt; #### 이제 여기에 메일 본문 내용`body`까지 붙여보도록 하자. 1234567&lt;A href=&quot;mailto:sgj00038@naver.com?cc=another@naver.com&amp;bcc=theother@naver.com&amp;subject=문의가 있습니다!&amp;body=mailto 태그 사용 방법에 대해 자세히 알고 싶습니다&quot;&gt; sgj00038에게 이메일을 보내자.&lt;/a&gt; 출처 : jdmastermind.tistory.com","categories":[{"name":"Programming","slug":"Programming","permalink":"https://dullyshin.github.io/categories/Programming/"},{"name":"HTML","slug":"Programming/HTML","permalink":"https://dullyshin.github.io/categories/Programming/HTML/"}],"tags":[{"name":"Mailto 태그","slug":"Mailto-태그","permalink":"https://dullyshin.github.io/tags/Mailto-태그/"},{"name":"html tags","slug":"html-tags","permalink":"https://dullyshin.github.io/tags/html-tags/"},{"name":"html 태그","slug":"html-태그","permalink":"https://dullyshin.github.io/tags/html-태그/"}]},{"title":"MarkdownEditor","slug":"Github-MarkdownEditor","date":"2018-08-26T15:19:53.000Z","updated":"2018-08-26T18:38:54.810Z","comments":true,"path":"2018/08/27/Github-MarkdownEditor/","link":"","permalink":"https://dullyshin.github.io/2018/08/27/Github-MarkdownEditor/","excerpt":"","text":"마크다운 에디터 / Markdown Editors잘 이해가 안가고 어떻게 사용해야 할지 모르겠다 또는 위와 같은 방법을 손으로 직접 작성하기보다 클릭 몇 번으로 사용하고 싶다. 이러한 분을을 위해 마크 다운 에디터 2가지를 추천합니다! Haroopad지금 현재 사용하고 있는 에디터 입니다. 영어 천지인 프로그램 개발환경에 한국에 찾기가 힘든데.. 한국어라 행복합니다.. 왼쪽에 쓰는것을 바탕으로 오른쪽에서 실시간으로 확인할 수 있습니다. 하이튼 행복해요. 개발자 @Rhiokim님 감사합니다.아직 Markdown에 익숙하지 않은 분, 개발 초보자들을 위해 추천합니다! Haroopad 다운로드 하루패드는 웹 친화적인 문서를 작성하기 위한 마크다운 에디터입니다. 여러분은 간단한 마크다운 문법을 이용해 웹 문서를 생성하거나 블로그, 이메일 그리고 복잡한 리포트 문서를 작성할 수 있습니다. 그리고 하루패드는 윈도우, 리눅스, 맥을 지원하여 여러분이 원하는 플랫폼에서 똑같은 문서 편집 경험을 얻을 수 있습니다. Mou Mou는 가장 유명한 무료 마크다운 에디터 입니다. 입문용으로 추천합니다. 세련된 디자인과 풍부한 기능을 가지고 있습니다. Mou 다운로드 마크다운 추천 사이트 / Markdown siteMarkdown table generator에서 아주 편하게 markdown 테이블을 만들어 낼 수 있습니다.","categories":[{"name":"Programming","slug":"Programming","permalink":"https://dullyshin.github.io/categories/Programming/"},{"name":"Github","slug":"Programming/Github","permalink":"https://dullyshin.github.io/categories/Programming/Github/"}],"tags":[{"name":"마크다운 에디터","slug":"마크다운-에디터","permalink":"https://dullyshin.github.io/tags/마크다운-에디터/"},{"name":"Programming","slug":"Programming","permalink":"https://dullyshin.github.io/tags/Programming/"},{"name":"Github","slug":"Github","permalink":"https://dullyshin.github.io/tags/Github/"},{"name":"markdown Editors","slug":"markdown-Editors","permalink":"https://dullyshin.github.io/tags/markdown-Editors/"},{"name":"마크다운 테이블","slug":"마크다운-테이블","permalink":"https://dullyshin.github.io/tags/마크다운-테이블/"}]},{"title":"Hexo error","slug":"Hexo-error","date":"2018-08-26T03:57:16.000Z","updated":"2018-08-29T15:44:28.165Z","comments":true,"path":"2018/08/26/Hexo-error/","link":"","permalink":"https://dullyshin.github.io/2018/08/26/Hexo-error/","excerpt":"","text":"Hexo Error1$ Hexo server Hexo server를 시작하고 http://localhost:4000 에서 메뉴가 About이 아니라 Quant a , Home이 Inici로 보일 수 있습니다. 또는 다른 언어로 보일 수 있습니다. 이는 Hexo의 언어 설정이 ca 로 설정되어 있어 자동으로 바꾸어 주는 기능이 작동했기 때문입니다. en 버전 \\themes\\hueman\\languages\\ca.yml 12345678index: home: &apos;Inici&apos; about: &apos;Quant a&apos; search: &apos;Cercar&apos; archive: &apos;Arxiu&apos; category: &apos;Categoria&apos; uncategorized: &apos;Sense categoria&apos; tag: &apos;Etiqueta&apos; 이는 처음 Hexo 블로그를 만들고 생성된 _config.yml에 언어 설정으로 인해 변경될 수 있습니다.(Theme 파일안에 _config.yml은 아닙니다.) 아래의 language 설정을 en으로 바꾸어 주시면 됩니다. 12345678# Sitetitle: Hyejin Shin #제목subtitle: IT blog / Thanks to everyone! #부제목description: IT blog for everyone #설명keywords: Portfolio, programmer, web #키워드author: Hyejin Shin #이름language: en #언어 설정timezone: Asia/Seoul #시간 설정 저는 언어 설정을 처음부터 en으로 했는데도 되지 않아서 구글링으로 해결책을 찾아보았는데요. 변경한 후에도 언어 설정이 적용되지 않을 경우, http://localhost:4000 에서만 언어 적용되지 않고 배포한 파일은 정상적으로 작동될 수 있습니다. 잠시 후 실행된 서버를 끄고 아래의 hexo clean을 실행 한 후 정상 작동되는 것을 확인했습니다. 1$ hexo clean Hexo 언어설정으로 고생하는 분 없길 바랍니다!","categories":[{"name":"Hexo","slug":"Hexo","permalink":"https://dullyshin.github.io/categories/Hexo/"}],"tags":[{"name":"hexo 에러","slug":"hexo-에러","permalink":"https://dullyshin.github.io/tags/hexo-에러/"},{"name":"헥소 언어 설정","slug":"헥소-언어-설정","permalink":"https://dullyshin.github.io/tags/헥소-언어-설정/"},{"name":"hexo language set","slug":"hexo-language-set","permalink":"https://dullyshin.github.io/tags/hexo-language-set/"}]},{"title":"Hexo Theme Hueman","slug":"Hexo-Theme","date":"2018-08-26T03:57:16.000Z","updated":"2018-08-26T18:41:00.841Z","comments":true,"path":"2018/08/26/Hexo-Theme/","link":"","permalink":"https://dullyshin.github.io/2018/08/26/Hexo-Theme/","excerpt":"","text":"Hexo Theme Hueman지금 Hexo Theme Hueman 설정을 어떻게 하는지 알아보도록 하겠습니다.테마를 적용하시려면 아래의 링크를 들어가서 확인 부탁드리겠습니다. 제가 Hexo 시작할때 큰 도움을 받은 곳 입니다.Hexo Hueman 테마 적용하기 Menu 메뉴 메뉴는 마카이브, 카테고리, 커스텀 페이지로 직접 연결합니다. 메뉴는 간단하게 이름을 추가하거나 링크 주소를 메뉴에 추가합니다. 1234menu: Home: /hexo-theme-hueman/ About: /hexo-theme-hueman/about/index.html+ GitHub: https://github.com 상대주소와 절대주소를 모두 사용할 수 있습니다. Hueman은 메뉴안 카테고리에 쉽게 추가할 수 있습니다. 그냥 카테고리를 추가하세요 그리면 메뉴와 서브 카테고리가 추가될 것 입니다. 1234menu: Home: /hexo-theme-hueman/+ Categories: About: /hexo-theme-hueman/about/index.html 커스터마이즈테마를 수정해서 커스터마이즈 할 수 있습니다. Logo 로고원하는 이미지를 가지고 로고를 바꿀 수 있습니다. 이미지 크기는 픽셀로 설정되있습니다. 그리고 url에 파일 경로를 입력해주세요. 1234logo: width: 165 height: 60 url: images/logo-header.png ‘width’와 ‘height’에 숫자만 입력해세요. 다른 설정을 입력해도 작동하지 않습니다. Theme Color 테마 컬러링크의 색과 소셜링크 색을 변경할 수 있습니다. RGB로 색을 바꿀 수 있습니다. 1theme_color: &apos;#d35&apos; Highlight 하이라이트 60가지 넘는 하이라이트 설정을 할 수 있습니다. 코드 블럭안에 색 설정을 말합니다. ‘hueman/source/css/_highlight’ 폴더에 들어가면 가능한 옵션을 확인 할 수 있습니다. 12- highlight: androidstudio+ highlight: tomorrow Sidebar 사이드 바사이드바의 위치를 조정할 수 있습니다. 옵션은 ‘left’ &amp; ‘right’ 2가지 입니다.. 1sidebar: left Thumbnail 썸네일포스트의 썸네일 표시를 사용하지 않을 수도 있습니다. 옵션은 ‘true’와 ‘false’ 입니다. 1thumbnail: true 어떻게 썸네일 이미지를 넣을 수 있을까요?Hueman은 자동으로 당신의 포스트의 첫번째 이미지를 썸네일로 사용할 것입니다. 아니면 포스트의 자동으로 추가되는 front-matter부분에서 이미지를 직접 지정할 수 있습니다. 123title: Hello Worlddate: 2013/7/13 20:46:25+ thumbnail: https://example.com/image.jpg Favicon 파비콘파비콘을 사이트에 추가해 봅시다. 12favicon: favicon.pnge.g: 만약 파비콘 이미지를 source/css/images에 넣었다면, Path 설정을 &quot;css/image/favicon.png&quot; 으로 설정합니다. Social Links 소셜링크 소셜링크는 사이드 바 위쪽에서 확인 할 수 있습니다. 링크 이름과 링크 주소를 설정에 추가 할 수 있고 FontAwesome icon 에서 고를 수 있습니다. 123social_links: github: https://github.com/ppoffice/hexo-theme-hueman+ youtube: https://youtube.com 참고 &amp; 출처https://github.com/ppoffice/hexo-theme-hueman/wiki/Themehttps://futurecreator.github.io/2016/06/14/hexo-apply-hueman-theme/","categories":[{"name":"Hexo","slug":"Hexo","permalink":"https://dullyshin.github.io/categories/Hexo/"}],"tags":[{"name":"Hexo","slug":"Hexo","permalink":"https://dullyshin.github.io/tags/Hexo/"},{"name":"Hexo Theme Hueman","slug":"Hexo-Theme-Hueman","permalink":"https://dullyshin.github.io/tags/Hexo-Theme-Hueman/"},{"name":"Hexo Theme","slug":"Hexo-Theme","permalink":"https://dullyshin.github.io/tags/Hexo-Theme/"},{"name":"Hueman 사용법","slug":"Hueman-사용법","permalink":"https://dullyshin.github.io/tags/Hueman-사용법/"}]},{"title":"Hexo 처음 포스트하기","slug":"Hexo-hello-world","date":"2018-08-25T16:23:03.687Z","updated":"2023-08-21T14:08:22.809Z","comments":true,"path":"2018/08/26/Hexo-hello-world/","link":"","permalink":"https://dullyshin.github.io/2018/08/26/Hexo-hello-world/","excerpt":"","text":"Hexo를 시작한 것을 환영합니다! 더 많은 정보를 원하신다면 documentation를 확인해보세요 . Hexo를 사용하실때 불편함을 느끼셨다면, troubleshooting 여기에서 답을 찾을 수 있어요 아니면 GitHub을 통해 질문해주세요. Quick Start 빠른 시작Create a new post 새로운 포스트 만들기1$ hexo new \"My New Post\" More info: Writing Run server 서버 시작하기1$ hexo server More info: Server Generate static files 정적인 파일들 생성하기1$ hexo generate More info: Generating Deploy to remote sites 원격 사이트들 배포하기1$ hexo deploy Generate와 Deploy 동시실행아래와 같이 Generate와 Deploy를 동시실행 할 수도 있습니다. 12345hexo deploy --generate #Deploy 전에 Generate를 해준다.hexo d -g #단축 명령어hexo generate --deploy #Generate 후에 Deploy를 해준다.hexo g -d #단축 명령어 More info: Deployment","categories":[{"name":"Hexo","slug":"Hexo","permalink":"https://dullyshin.github.io/categories/Hexo/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"https://dullyshin.github.io/tags/hexo/"}]},{"title":"markdown","slug":"Github-markdown","date":"2018-08-25T05:32:45.000Z","updated":"2018-08-26T18:42:28.398Z","comments":true,"path":"2018/08/25/Github-markdown/","link":"","permalink":"https://dullyshin.github.io/2018/08/25/Github-markdown/","excerpt":"","text":"Markdown 사용법마크다운 / Markdown?Github을 사용하시면 README.md 파일을 통해 만나게 됩니다.마크다운(markdown)은 일반 텍스트 문서의 양식을 편집하는 문법입니다. README 파일이나 온라인 문서, 혹은 일반 텍스트 편집기로 문서 양식을 편집할 때 쓰입니다. 마크다운을 이용해 작성된 문서는 쉽게 HTML 등 다른 문서형태로 변환이 가능합니다. 마크다운 사용법 / Markdown Syntax큰 제목 This is an H112큰 제목 This is an H1====================== 작은 제목 This is an H212작은 제목 This is an H2------------- 글머리: 1~6까지만 지원합니다. This is a H1This is a H2This is a H3This is a H4This is a H5This is a H6123456# This is a H1## This is a H2### This is a H3#### This is a H4##### This is a H5###### This is a H6 테이블 Markdown table generator에서 아주 편하게 markdown 테이블을 만들어 낼 수 있습니다. dosi sales sale_date seoul 1500 2015/02/02 pusan 1200 2015/01/01 pusan 1100 2015/02/08 inchon 500 2015/01/30 123456| dosi | sales | sale_date ||--------|-------|------------|| seoul | 1500 | 2015/02/02 || pusan | 1200 | 2015/01/01 || pusan | 1100 | 2015/02/08 || inchon | 500 | 2015/01/30 | 인용문 BlockQuote : 이메일에서 사용하는 &gt; 블럭인용문자를 이용합니다. This is a blockqute. 1&gt; This is a blockqute. 목록 List : 숫자를 순서대로 작성하지 않아도 내림차순으로 정렬됩니다. First Second Third 1231. First2. Second3. Third 빨강 녹색 파랑 빨강 노랑 파랑 빨강 노랑 파랑 1234567891011* 빨강 * 노랑 * 파랑+ 빨강 + 노랑 + 파랑- 빨강 - 노랑 - 파랑 수평선 : 아래와 같은 다양한 방법이 있습니다. 123456789* * *********- - ---------------------------------------- 링크 Googlehttp://example.com/ 12[Google](http://google.com)&lt;http://example.com/&gt; 글꼴 스타일 single asteriskssingle underscoresdouble asterisksdouble underscores++underline++cancelline 123456*single asterisks*_single underscores_**double asterisks**__double underscores__++underline++~~cancelline~~ 이미지 12![카카오 라이언](https://t1.daumcdn.net/cfile/tistory/24923A33597F7BB71E)이미지 사이즈 조절 방법 : &lt;img width=&quot;&quot; height=&quot;&quot;&gt;&lt;/img&gt; 마크다운 Tip / Markdown Tip마크다운에서는 엔터키 한 번은 먹지 않는다. 문장이 같은 줄에 연이어 표시된다. 줄바꿈은 빈 칸 두 개로 구분한다. 문단과 문단 사이는 빈 줄(엔터키 두 번)로 구분한다. 다음 포스트에 마크다운 에디터를 추천합니다.&lt;%- list_related_posts([options]) %&gt; 참조https://ko.wikipedia.org/ https://nolboo.kim/blog/2013/09/07/john-gruber-markdown/ https://gist.github.com/ihoneymon/652be052a0727ad59601 http://macnews.tistory.com/2419","categories":[{"name":"Programming","slug":"Programming","permalink":"https://dullyshin.github.io/categories/Programming/"},{"name":"Github","slug":"Programming/Github","permalink":"https://dullyshin.github.io/categories/Programming/Github/"}],"tags":[{"name":"markdown","slug":"markdown","permalink":"https://dullyshin.github.io/tags/markdown/"},{"name":"마크다운 사용법","slug":"마크다운-사용법","permalink":"https://dullyshin.github.io/tags/마크다운-사용법/"},{"name":"마크다운","slug":"마크다운","permalink":"https://dullyshin.github.io/tags/마크다운/"},{"name":"마크다운 에디터","slug":"마크다운-에디터","permalink":"https://dullyshin.github.io/tags/마크다운-에디터/"},{"name":"markdown editor","slug":"markdown-editor","permalink":"https://dullyshin.github.io/tags/markdown-editor/"}]},{"title":"SQL basic","slug":"SQL-sqlBasic","date":"2018-05-11T09:36:46.000Z","updated":"2023-08-12T15:36:09.045Z","comments":true,"path":"2018/05/11/SQL-sqlBasic/","link":"","permalink":"https://dullyshin.github.io/2018/05/11/SQL-sqlBasic/","excerpt":"","text":"SQL 기본 문제 &amp; 답 SQL문에 대해 공부하시는 분은 질문을 보고 저와 같이 답을 생각해보시길 바랍니다! 테이블을 생성하고 제약조건 생성 및 연결 스크립트를 작성하세요. 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140create table product ( product_id number(6) constraint pk_product primary key, description varchar2(30));create table job ( job_id number(3) constraint pk_job primary key, function varchar2(30));create table location ( location_id number(3) constraint pk_location primary key, regional_group varchar2(20));create table department ( department_id number(3) constraint pk_department primary key, name varchar2(14), location_id number(3) constraint department_location_id_fk references location);create table employee ( employee_id number(4) constraint pk_employee primary key, last_name varchar2(15), first_name varchar2(15), middle_initial varchar2 (1), job_id number(3) constraint employee_job_id_fk references job, manager_id number(4), hire_date date, salary number(7,2), commission number(7,2), department_id number(3) constraint employee_department_id_fk references department );create table customer ( customer_id number(6) constraint pk_customer primary key, name varchar2(45), address varchar2(40), city varchar2 (30), state varchar2 (2), zip_code varchar2 (9), area_code number (3), phone_number number (7), salesperson_id number(4) references employee(employee_id), credit_limit number(3,2), hire_date date, comments long );create table sales_order ( order_id number(4) constraint pk_sales_order primary key, order_date date, name varchar2(14), customer_id number(3) references customer(customer_id), ship_date date, total number(8,2) );create table price ( product_id number(6) constraint price_product_id_fk references product, list_price number(8,2), min_price number(8,2), start_date date, constraint pk_price primary key(start_date, product_id), end_date date );create table item ( order_id number(4) constraint item_order_id_fk references sales_order, item_id number(4), product_id number(6) constraint item_id_fk references product, actual_price number(8,2), quantity number(8), total number(8,2), constraint pk_item primary key(order_id, item_id) ); 1번에서 생성한 테이블중 EMPLOYEES 테이블에 INSERT, UPDATE,DELETE, SELECT 하는 SQL문장과 실행결과를 작성하세요. 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263insert intolocation(location_id, regional_group)values(01, &apos;seoul&apos;);insert intolocation(location_id, regional_group)values(02, &apos;busan&apos;);insert intodepartment(department_id, name, location_id)values(1, &apos;accounting&apos;, 02);insert intodepartment(department_id, name, location_id)values(2, &apos;management&apos;, 01);select * from department;insert into job(job_id, function) values(1,&apos;계산&apos;);insert into job(job_id, function) values(2,&apos;연산&apos;);select * from job;select * from department;select * from employee;insert intoemployee(employee_id, last_name, first_name, middle_initial, job_id, manager_id, hire_date, salary, commission, department_id)values(0001, &apos;park&apos;, &apos;smith&apos;, &apos;p&apos;, 1, 0003, sysdate, 10000, 100, 1);update employee set commission = 3000 where employee_id =1;delete from employee where employee_id = 1; TCL을 구별하여 설명하고 EMPLOYEES 테이블에 TCL 명령어의 SQL문장과 실행 결과를 작성하세요. TCL이란 ?TCL(transaction control language)이란 DML(INSERT,UPDATE, DELETE, MERGE)에 의해 변화되는 데이터 관리를 위한 기능 TCL종류 ?COMMIT, ROLLBACK TCL종류 각각 사용 예제 123INSERT INTO EMPLOYEE ( EMPLOYEE_ID, LAST_NAME, FIRST_NAME, MIDDLE_INITIAL, JOB_ID, MANAGER_ID, HIRE_DATE, SALARY, COMMISION, DEPARTMENT_ID)VALUES (1000, &apos;LASTNM&apos;, &apos;FIRSTNM&apos;, &apos;FL&apos;, 1, 100, TO_DATE(20180308), 5000000, 500, 10); 1번에서 생성한 제약조건을 조회하는 SQL문장과 실행결과를 작성하세요. (테이블명, 제약조건명, 제약조건 타입 조회할 것) 12345select table_name, constraint_name, constraint_typefrom user_constraintswhere table_name = &apos;EMPLOYEE&apos;; DEPARTMENT 테이블에 부서번호, 부서명을 수강생이름, 주소를 추가하세요. EMPLOYEES 테이블에 위에 입력한 부서번호에 해당하는 사원정보를 INSERT, UPDATE, DELETE, SELECT 하는 SQL문장과 실행결과를 작성하세요. 1234567891011121314151617181920212223242526272829ALTER TABLE department ADD (department_no VARCHAR2(14));ALTER TABLE department ADD (address VARCHAR2(20));INSERT INTO department (DEPARTMENT_ID, NAME, LOCATION_ID) VALUES (3,&apos;총무부&apos;,1);INSERT INTO EMPLOYEE ( EMPLOYEE_ID, LAST_NAME, FIRST_NAME, MIDDLE_INITIAL, JOB_ID, MANAGER_ID, HIRE_DATE, SALARY, COMMISSION, DEPARTMENT_ID) VALUES (2000, &apos;BBBBBNM&apos;, &apos;AAAAANM&apos;, &apos;A&apos;, 1, 100, TO_DATE(20180308), 3000, 300, 1);INSERT INTO EMPLOYEE ( EMPLOYEE_ID, LAST_NAME, FIRST_NAME, MIDDLE_INITIAL, JOB_ID, MANAGER_ID, HIRE_DATE, SALARY, COMMISSION, DEPARTMENT_ID) VALUES (2, &apos;BBB&apos;, &apos;AAA&apos;, &apos;A&apos;, 2, 2000, TO_DATE(20180503), 3000, 300, 1);UPDATE EMPLOYEE SET HIRE_DATE = TO_DATE(20180309) WHERE EMPLOYEE_ID = 2000;DELETE FROM EMPLOYEE WHERE EMPLOYEE_ID = 2000;SELECT * FROM job;SELECT * FROM EMPLOYEE; 아래의 질문에 SQL문을 작성하세요. EMPLOYEES 테이블에서 수당을 받지 않는 사원들의 부서를 중복값은 제거해서 출력하세요. 123select distinct(department_id) from employeewhere COMMISSION is null; EMPLOYEES 테이블에서 DEPTNO 별로 최대급여를 출력하는데, 최대급여가 높은 것부터 출력하시오 1234567select department_id, max(salary)from employeegroup by department_idorder by max(salary) desc; EMPLOYEES 테이블에서 사원이 2명 이상인 부서에 대해 부서별 평균급여를 계산하시오. 1234567select department_id, avg(salary)from employeegroup by department_idhaving count(*) &gt;=2; EMPLOYEES 테이블에서 입사년도가 1981년보다 큰 사원의 수는? 1select * from employee where hire_date &gt; &apos;1981/01/01&apos;;","categories":[{"name":"Programming","slug":"Programming","permalink":"https://dullyshin.github.io/categories/Programming/"},{"name":"SQL","slug":"Programming/SQL","permalink":"https://dullyshin.github.io/categories/Programming/SQL/"}],"tags":[{"name":"sql","slug":"sql","permalink":"https://dullyshin.github.io/tags/sql/"},{"name":"query","slug":"query","permalink":"https://dullyshin.github.io/tags/query/"},{"name":"sql 기본","slug":"sql-기본","permalink":"https://dullyshin.github.io/tags/sql-기본/"},{"name":"my sql","slug":"my-sql","permalink":"https://dullyshin.github.io/tags/my-sql/"}]},{"title":"SQL Advanced","slug":"SQL-sqlAdvanced","date":"2018-05-11T07:45:10.000Z","updated":"2018-09-02T16:00:56.403Z","comments":true,"path":"2018/05/11/SQL-sqlAdvanced/","link":"","permalink":"https://dullyshin.github.io/2018/05/11/SQL-sqlAdvanced/","excerpt":"","text":"고급 SQL 실습sales , geography 테이블, 데이터 직접 생성하신 후 실습하세요.(이미 있다면 삭제 후 생성해주세요.) 아래의 SQL을 실행한 후에 문제에 답을 생각해봅시다. 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849drop table sales;drop table geography;create table sales ( dosi varchar2(20), sales number, sale_date date) ;INSERT INTO sales (dosi,sales,sale_date) values (&apos;seoul&apos;,1500,&apos;2015/02/02&apos;);INSERT INTO sales (dosi,sales,sale_date) values (&apos;pusan&apos;,1200,&apos;2015/01/01&apos;);INSERT INTO sales (dosi,sales,sale_date) values (&apos;pusan&apos;,1100,&apos;2015/02/08&apos;);INSERT INTO sales (dosi,sales,sale_date) values (&apos;inchon&apos;,500,&apos;2015/01/30&apos;);create table geography ( region varchar2(10), dosi varchar2(20)) ;INSERT INTO geography (region,dosi) VALUES (&apos;east&apos;,&apos;pusan&apos;);INSERT INTO geography (region,dosi) VALUES (&apos;east&apos;,&apos;sokcho&apos;);INSERT INTO geography (region,dosi) VALUES (&apos;west&apos;,&apos;seoul&apos;);INSERT INTO geography (region,dosi) VALUES (&apos;west&apos;,&apos;inchon&apos;);COMMIT; 위의 쿼리문을 잘 따라하셨으면 아래의 테이블과 같은 결과를 확인할 수 있습니다. sales 테이블 조회 결과 dosi sales sale_date seoul 1500 2015/02/02 pusan 1200 2015/01/01 pusan 1100 2015/02/08 inchon 500 2015/01/30 geography 테이블 조회 결과 region dosi east pusan east sokcho west seoul west inchon 문제 sales,geography 테이블에 PK Index, Normal Index 를 생성 후 인덱스를 조회하는 SQL문장과 실행결과를 작성하세요. 12345678910111213141516171819202122232425CREATE UNIQUE INDEX IDX_GEOGRAPHY_REGION_DOSI ON GEOGRAPHY(REGION, DOSI);CREATE INDEX IDX_SALES_DOSI ON SALES(DOSI);SELECT A.INDEX_NAMEFROM USER_IND_COLUMNS A , USER_INDEXES BWHERE A.TABLE_NAME = &apos;SALES&apos; AND A.INDEX_NAME = B.INDEX_NAME AND A.COLUMN_NAME = &apos;DOSI&apos;;INDEX_NAME--------------------IDX_SALES_DOSISELECT A.INDEX_NAMEFROM USER_IND_COLUMNS A, USER_INDEXES BWHERE A.TABLE_NAME = &apos;GEOGRAPHY&apos; AND A.INDEX_NAME = B.INDEX_NAME AND A.COLUMN_NAME = &apos;REGION&apos;;INDEX_NAME--------------------IDX_GEOGRAPHY_REGION_DOSI sales, geography 테이블을 조인하여 조회하는 뷰를 생성하는 SQL문장을 작성하세요. 123456CREATE OR REPLACE VIEW V_SALES_GEOGRAPHY (SALES, DOSI, SALES_DATE, REGION)ASSELECT S.SALES, S.DOSI, S.SALE_DATE, G.REGIONFROM SALES S, GEOGRAPHY GWHERE S.DOSI = G.DOSIORDER BY S.DOSI; 다음 결과를 출력하는 SQL을 작성하세요.(집합연산자 사용) 기간별, 지역별 매출합계 yyyymm region sales 201501 east 1200 201501 west 500 201502 east 1100 201502 west 1500 조인 SQL문장 1234567SELECT TO_CHAR(S.SALE_DATE, &apos;YYYYMM&apos;) AS YYYYMM , G.REGION , SUM(S.SALES) AS SALESFROM SALES S , GEOGRAPHY GWHERE S.DOSI = G.DOSIGROUP BY TO_CHAR(S.SALE_DATE,&apos;YYYYMM&apos;), G.REGION; 서브쿼리 SQL문장 1234567SELECT TO_CHAR(S. SALE_DATE, &apos;YYYYMM&apos;) AS YYYYMM , ( SELECT REGION FROM GEOGRAPHY G WHERE G.DOSI = S.DOSI ) REGION , S.SALESFROM SALES SORDER BY TO_CHAR(S.SALE_DATE,&apos;YYYYMM&apos;), REGION ASC; 도시별 매출합계 아래 결과를 조인쿼리로 작성해 보세요. dosi sales sokcho 매출없음 inchon 500 pusan 2300 seoul 1500 123456789101112SELECT G.DOSI , NVL( TO_CHAR(Z.SUM_SALES), &apos;매출없음&apos; )FROM GEOGRAPHY GLEFT OUTER JOIN ( SELECT DOSI , SUM(SALES) AS SUM_SALES FROM SALES GROUP BY DOSI ORDER BY DOSI) ZON G.DOSI = Z.DOSIORDER BY Z.SUM_SALES ASC NULLS FIRST; 도시별 매출합계 아래 결과를 from 절에 geography 테이블 하나만 위치시키고 쿼리를 작성해 보세요. dosi sales sokcho 매출없음 inchon 500 pusan 2300 seoul 1500 1234567SELECT G.DOSI AS DOSI , NVL(( SELECT TO_CHAR( SUM(S.SALES) ) FROM SALES S GROUP BY S.DOSI HAVING G.DOSI = DOSI), &apos;매출없음&apos;) AS SALESFROM GEOGRAPHY GORDER BY SALES DESC NULLS FIRST; WITH구문을 이용하여 다음 결과를 출력하는 SQL을 작성하세요. (지역별, 기간별(월별) 합계를 출력하는데 월별매출액이 1200 이상 데이터 추출) region yyyymm sales east 201501 1200 east 201501 1200 12345678910WITH W_SALES AS ( SELECT G.REGION , TO_CHAR(S.SALE_DATE,&apos;YYYYMM&apos;) YYYYMM , S.SALES FROM SALES S, GEOGRAPHY G WHERE S.DOSI = G.DOSI AND S.SALES &gt;= 1200 ORDER BY G.REGION, TO_CHAR(S.SALE_DATE,&apos;YYYYMM&apos;))SELECT * FROM W_SALES;","categories":[{"name":"Programming","slug":"Programming","permalink":"https://dullyshin.github.io/categories/Programming/"},{"name":"SQL","slug":"Programming/SQL","permalink":"https://dullyshin.github.io/categories/Programming/SQL/"}],"tags":[{"name":"sql","slug":"sql","permalink":"https://dullyshin.github.io/tags/sql/"},{"name":"query","slug":"query","permalink":"https://dullyshin.github.io/tags/query/"},{"name":"my sql","slug":"my-sql","permalink":"https://dullyshin.github.io/tags/my-sql/"},{"name":"my sql 조인문","slug":"my-sql-조인문","permalink":"https://dullyshin.github.io/tags/my-sql-조인문/"}]}]}