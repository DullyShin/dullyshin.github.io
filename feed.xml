<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Geek Coading</title>
  
  <subtitle>IT blog / Thanks to everyone!</subtitle>
  <link href="/feed.xml" rel="self"/>
  
  <link href="https://dullyshin.github.io/"/>
  <updated>2024-11-12T04:56:32.349Z</updated>
  <id>https://dullyshin.github.io/</id>
  
  <author>
    <name>Hyejin Shin</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>HTML-MultiLanguage</title>
    <link href="https://dullyshin.github.io/2024/11/12/HTML-MultiLanguage/"/>
    <id>https://dullyshin.github.io/2024/11/12/HTML-MultiLanguage/</id>
    <published>2024-11-12T04:55:18.000Z</published>
    <updated>2024-11-12T04:56:32.349Z</updated>
    
    <content type="html"><![CDATA[<h3 id="HTML을-통한-다국어-웹사이트-만들기"><a href="#HTML을-통한-다국어-웹사이트-만들기" class="headerlink" title="HTML을 통한 다국어 웹사이트 만들기"></a>HTML을 통한 다국어 웹사이트 만들기</h3><p>다국어 웹사이트는 다양한 언어를 사용하는 글로벌 사용자들에게 보다 나은 경험을 제공할 수 있는 중요한 요소입니다. 특히, HTML을 사용하여 여러 언어를 지원하는 웹사이트를 구축하면, 사용자의 지역적 차이를 넘어 다양한 문화와 언어에 맞춘 서비스를 제공할 수 있습니다. 이번 블로그 글에서는 <strong>HTML을 통한 다국어 웹사이트 만들기</strong>의 기초적인 개념과 실용적인 방법을 살펴보겠습니다.</p><hr><h3 id="1-다국어-웹사이트란-무엇인가"><a href="#1-다국어-웹사이트란-무엇인가" class="headerlink" title="1. 다국어 웹사이트란 무엇인가?"></a>1. <strong>다국어 웹사이트란 무엇인가?</strong></h3><p>다국어 웹사이트는 사용자가 선택한 언어에 맞춰 콘텐츠를 제공하는 웹사이트를 말합니다. 글로벌 웹사이트를 구축할 때, 다양한 언어를 지원하면 각국의 사용자들이 더 친숙하게 웹사이트를 이용할 수 있으며, 이로 인해 더 나은 사용자 경험을 제공할 수 있습니다. 예를 들어, 영어, 스페인어, 중국어, 한국어 등 여러 언어를 제공하는 웹사이트가 바로 다국어 웹사이트입니다.</p><h3 id="2-다국어-웹사이트-구축의-필요성"><a href="#2-다국어-웹사이트-구축의-필요성" class="headerlink" title="2. 다국어 웹사이트 구축의 필요성"></a>2. <strong>다국어 웹사이트 구축의 필요성</strong></h3><ul><li><strong>글로벌 확장</strong>: 다국어 웹사이트는 다양한 국가와 지역의 사용자를 대상으로 서비스를 제공할 수 있습니다.</li><li><strong>사용자 경험 개선</strong>: 사용자가 자신의 언어로 웹사이트를 방문하면, 보다 직관적이고 친숙하게 이용할 수 있습니다.</li><li><strong>SEO 최적화</strong>: 다국어 콘텐츠는 검색엔진 최적화(SEO)에도 도움이 됩니다. 각 언어별로 검색되는 키워드를 타겟팅할 수 있기 때문입니다.</li></ul><hr><h3 id="3-HTML에서-다국어-웹사이트를-위한-준비"><a href="#3-HTML에서-다국어-웹사이트를-위한-준비" class="headerlink" title="3. HTML에서 다국어 웹사이트를 위한 준비"></a>3. <strong>HTML에서 다국어 웹사이트를 위한 준비</strong></h3><p>HTML에서 다국어 웹사이트를 구축하려면, 우선 몇 가지 기본적인 설정이 필요합니다. 이 설정은 웹페이지가 여러 언어를 제대로 표시하고, 사용자와의 상호작용에서 언어를 자동으로 처리할 수 있게 도와줍니다.</p><h4 id="3-1-언어-설정하기-lt-html-gt-태그의-lang-속성"><a href="#3-1-언어-설정하기-lt-html-gt-태그의-lang-속성" class="headerlink" title="3.1 언어 설정하기: &lt;html&gt; 태그의 lang 속성"></a>3.1 <strong>언어 설정하기: <code>&lt;html&gt;</code> 태그의 <code>lang</code> 속성</strong></h4><p><code>&lt;html&gt;</code> 태그의 <code>lang</code> 속성은 페이지의 기본 언어를 정의하는 데 사용됩니다. 예를 들어, 기본 언어가 영어인 웹사이트는 다음과 같이 설정할 수 있습니다:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br></pre></td></tr></table></figure><p>한국어 웹사이트라면 이렇게 설정합니다:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"ko"</span>&gt;</span></span><br></pre></td></tr></table></figure><p>이 <code>lang</code> 속성은 검색엔진 최적화(SEO)와 접근성(Accessibility)에도 영향을 미칩니다. 화면 리더와 같은 보조 기술은 <code>lang</code> 속성을 통해 페이지의 언어를 인식하고, 이를 바탕으로 사용자에게 적합한 음성 안내를 제공합니다.</p><h4 id="3-2-언어별-문자-집합-설정-lt-meta-charset-quot-UTF-8-quot-gt"><a href="#3-2-언어별-문자-집합-설정-lt-meta-charset-quot-UTF-8-quot-gt" class="headerlink" title="3.2 언어별 문자 집합 설정: &lt;meta charset=&quot;UTF-8&quot;&gt;"></a>3.2 <strong>언어별 문자 집합 설정: <code>&lt;meta charset=&quot;UTF-8&quot;&gt;</code></strong></h4><p>다국어 웹사이트에서 중요한 부분 중 하나는 문자 인코딩입니다. 여러 언어의 문자들이 제대로 표시되기 위해서는 <code>UTF-8</code> 문자 인코딩을 사용하는 것이 가장 안전합니다. 이는 한글, 일본어, 아랍어 등 다양한 문자들을 지원합니다.</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br></pre></td></tr></table></figure><p>이 태그는 <code>&lt;head&gt;</code> 섹션에 포함되어야 하며, HTML 문서가 다양한 문자셋을 안전하게 처리할 수 있도록 합니다.</p><hr><h3 id="4-다국어-콘텐츠-제공-방법"><a href="#4-다국어-콘텐츠-제공-방법" class="headerlink" title="4. 다국어 콘텐츠 제공 방법"></a>4. <strong>다국어 콘텐츠 제공 방법</strong></h3><p>다국어 웹사이트를 구축하는 데 있어 가장 중요한 것은 언어별로 콘텐츠를 어떻게 제공할 것인가입니다. HTML에서는 여러 가지 방법으로 다국어 콘텐츠를 제공할 수 있습니다.</p><h4 id="4-1-언어별-페이지를-구분하기"><a href="#4-1-언어별-페이지를-구분하기" class="headerlink" title="4.1 언어별 페이지를 구분하기"></a>4.1 <strong>언어별 페이지를 구분하기</strong></h4><p>가장 직관적인 방법은 각 언어별로 별도의 HTML 페이지를 만들어 사용하는 것입니다. 예를 들어, 영어, 한국어, 스페인어 버전의 웹사이트를 각각 <code>index-en.html</code>, <code>index-ko.html</code>, <code>index-es.html</code>로 관리할 수 있습니다.</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 영어 페이지 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"index-en.html"</span>&gt;</span>English<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 한국어 페이지 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"index-ko.html"</span>&gt;</span>한국어<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 스페인어 페이지 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"index-es.html"</span>&gt;</span>Español<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><p>이 방법은 간단하고 이해하기 쉬운 구조지만, 관리할 페이지가 많아지면 유지보수가 어려워질 수 있습니다.</p><h4 id="4-2-URL-파라미터-또는-쿼리-스트링을-활용하기"><a href="#4-2-URL-파라미터-또는-쿼리-스트링을-활용하기" class="headerlink" title="4.2 URL 파라미터 또는 쿼리 스트링을 활용하기"></a>4.2 <strong>URL 파라미터 또는 쿼리 스트링을 활용하기</strong></h4><p>또 다른 방법은 URL에 언어 코드를 쿼리 파라미터로 전달하여 언어를 변경하는 방식입니다. 예를 들어, <code>example.com?lang=en</code>, <code>example.com?lang=ko</code>와 같은 형태로 설정할 수 있습니다.</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 영어 페이지 링크 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"index.html?lang=en"</span>&gt;</span>English<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 한국어 페이지 링크 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"index.html?lang=ko"</span>&gt;</span>한국어<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><p>이 방법은 하나의 HTML 파일에서 언어를 동적으로 변경할 수 있어, 페이지가 많을 때 유리합니다. 서버 사이드 또는 JavaScript를 이용해 URL의 언어 파라미터를 받아서 해당 언어에 맞는 콘텐츠를 표시할 수 있습니다.</p><h4 id="4-3-동적-콘텐츠-로딩-JavaScript-활용"><a href="#4-3-동적-콘텐츠-로딩-JavaScript-활용" class="headerlink" title="4.3 동적 콘텐츠 로딩 (JavaScript 활용)"></a>4.3 <strong>동적 콘텐츠 로딩 (JavaScript 활용)</strong></h4><p>HTML 문서에 여러 언어의 콘텐츠를 모두 포함시키고, JavaScript를 통해 언어를 동적으로 변경하는 방법입니다. 이 방법은 하나의 HTML 파일로 모든 언어를 처리할 수 있어 효율적입니다.</p><p>예를 들어, JSON 파일을 사용하여 각 언어에 맞는 텍스트를 로드하고 표시할 수 있습니다. 각 언어별 텍스트를 JSON 파일로 관리하고, 사용자가 선택한 언어에 맞는 콘텐츠를 표시하는 방식입니다.</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">// en.json</span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">"greeting"</span>: <span class="string">"Hello"</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// ko.json</span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">"greeting"</span>: <span class="string">"안녕하세요"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// JavaScript로 JSON 파일을 로드하여 언어 변경</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">loadLanguage</span>(<span class="params">language</span>) </span>&#123;</span><br><span class="line">  fetch(<span class="string">`<span class="subst">$&#123;language&#125;</span>.json`</span>)</span><br><span class="line">    .then(<span class="function"><span class="params">response</span> =&gt;</span> response.json())</span><br><span class="line">    .then(<span class="function"><span class="params">data</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="built_in">document</span>.getElementById(<span class="string">"greeting"</span>).textContent = data.greeting;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>이 방법은 페이지를 새로 고침하지 않고도 언어를 변경할 수 있기 때문에 사용자 경험을 향상시킵니다.</p><hr><h3 id="5-다국어-웹사이트의-SEO-최적화"><a href="#5-다국어-웹사이트의-SEO-최적화" class="headerlink" title="5. 다국어 웹사이트의 SEO 최적화"></a>5. <strong>다국어 웹사이트의 SEO 최적화</strong></h3><p>다국어 웹사이트를 구축할 때는 <strong>SEO 최적화</strong>가 매우 중요합니다. 언어별로 검색 엔진에 제대로 인덱싱되도록 설정하는 것이 필요합니다. 이를 위해서는 <strong><code>&lt;link rel=&quot;alternate&quot; hreflang=&quot;x&quot;&gt;</code></strong> 태그를 사용하여 각 언어 페이지의 관계를 명시해야 합니다.</p><h4 id="hreflang-태그-사용-예시"><a href="#hreflang-태그-사용-예시" class="headerlink" title="hreflang 태그 사용 예시"></a><code>hreflang</code> 태그 사용 예시</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 영어 페이지 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"alternate"</span> <span class="attr">hreflang</span>=<span class="string">"en"</span> <span class="attr">href</span>=<span class="string">"index-en.html"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 한국어 페이지 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"alternate"</span> <span class="attr">hreflang</span>=<span class="string">"ko"</span> <span class="attr">href</span>=<span class="string">"index-ko.html"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 스페인어 페이지 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"alternate"</span> <span class="attr">hreflang</span>=<span class="string">"es"</span> <span class="attr">href</span>=<span class="string">"index-es.html"</span>&gt;</span></span><br></pre></td></tr></table></figure><p><code>hreflang</code> 태그는 각 언어별 페이지가 서로 다른 언어로 제공되고 있다는 것을 검색 엔진에게 알려줍니다. 이를 통해 검색 결과에서 사용자에게 적합한 언어 페이지가 표시될 확률이 높아집니다.</p><hr><h3 id="6-다국어-웹사이트의-접근성-고려하기"><a href="#6-다국어-웹사이트의-접근성-고려하기" class="headerlink" title="6. 다국어 웹사이트의 접근성 고려하기"></a>6. <strong>다국어 웹사이트의 접근성 고려하기</strong></h3><p>웹 접근성(Accessibility)은 모든 사용자가 웹 콘텐츠를 쉽게 이용할 수 있도록 만드는 중요한 요소입니다. 다국어 웹사이트에서는 특히 <strong>언어 선택 기능</strong>이 직관적이고 명확하게 제공되어야 하며, 언어 변경 시 페이지의 콘텐츠가 제대로 변경되는지 확인해야 합니다.</p><p>또한, 언어별로 사용되는 문법이나 형식(예: 날짜, 숫자, 주소 등)이 다를 수 있으므로, <strong>지역화(l10n)</strong>와 <strong>국제화(i18n)</strong>를 고려해야 합니다. 예를 들어, 날짜 형식은 <code>MM/DD/YYYY</code>와 <code>DD/MM/YYYY</code>로 다를 수 있으므로, 이를 자동으로 처리할 수 있는 라이브러리를 사용하는 것이 좋습니다.</p><hr><h3 id="결론"><a href="#결론" class="headerlink" title="결론"></a>결론</h3><p>다국어 웹사이트는 글로벌 사용자와의 소통을 강화하고, 다양한 문화권에 맞춘 콘텐츠를 제공하는 데 필수적인 요소입니다. HTML을 통한 다국어 웹사이트 구축은 간단한 설정부터 고급 동적 콘텐츠 제공까지 다양한 방법이 있습니다. 각 언어별로 콘텐츠를 어떻게 처리할지, SEO 최적화를 어떻게 할지에 대한 전략을 세운 후, 사용자 경험을 고려한 디자인과 기능을 제공하는 것이 중요합니다.</p><p>앞으로 다국어 웹사이트를 구축하려는 개발자나 웹사이트 운영자는 이러한 방법들을 적절히 활용하여, 글로벌 사용자에게 더 나은 서비스를 제공할 수 있을 것입니다.</p><h4 id="Related-Posts"><a href="#Related-Posts" class="headerlink" title="Related Posts"></a>Related Posts</h4><ul><li><a href="/2019/08/07/HTML-table/" title="HTML 간단하게 표 만들기">HTML 간단하게 표 만들기</a></li><li><a href="/2018/08/29/HTML-Editor/" title="HTML 에디터 (jsFiddle,메모장)">HTML 에디터 (jsFiddle,메모장)</a></li><li><a href="/2019/08/07/HTML-buttonLink/" title="HTML-버튼에 링크 거는 방법">HTML-버튼에 링크 거는 방법</a></li><li><a href="/2021/10/25/HTML-comment/" title="HTML - 주석 태그 <!-- -->">HTML - 주석 태그 <!-- --></a></li><li><a href="/2018/08/30/HTML-imgLink/" title="HTML 이미지 링크거는 법">HTML 이미지 링크거는 법</a></li><li><a href="/2018/08/27/HTML-MailtoTag/" title="Mailto 태그">Mailto 태그</a></li><li><a href="/2024/01/04/HTML-enter/" title="HTML 줄바꿈 입력하기">HTML 줄바꿈 입력하기</a></li></ul><h4 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h4><ul><li><a href="https://chatgpt.com/" target="_blank" rel="noopener">https://chatgpt.com/</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;HTML을-통한-다국어-웹사이트-만들기&quot;&gt;&lt;a href=&quot;#HTML을-통한-다국어-웹사이트-만들기&quot; class=&quot;headerlink&quot; title=&quot;HTML을 통한 다국어 웹사이트 만들기&quot;&gt;&lt;/a&gt;HTML을 통한 다국어 웹사이트 만들기&lt;/
      
    
    </summary>
    
      <category term="Programming" scheme="https://dullyshin.github.io/categories/Programming/"/>
    
      <category term="HTML" scheme="https://dullyshin.github.io/categories/Programming/HTML/"/>
    
    
  </entry>
  
  <entry>
    <title>HTML의 보안 문제와 예방 방법</title>
    <link href="https://dullyshin.github.io/2024/11/12/HTML-Security/"/>
    <id>https://dullyshin.github.io/2024/11/12/HTML-Security/</id>
    <published>2024-11-12T04:51:24.000Z</published>
    <updated>2024-11-12T04:54:40.668Z</updated>
    
    <content type="html"><![CDATA[<h3 id="HTML의-보안-문제와-예방-방법"><a href="#HTML의-보안-문제와-예방-방법" class="headerlink" title="HTML의 보안 문제와 예방 방법"></a>HTML의 보안 문제와 예방 방법</h3><p>웹 개발에서 보안은 매우 중요한 이슈입니다. 특히 <strong>HTML</strong>은 웹 페이지의 구조를 정의하는 언어로, 웹 보안의 첫 번째 방어선 역할을 합니다. HTML 문서에서 발생할 수 있는 보안 취약점은 종종 <strong>JavaScript</strong>나 <strong>서버 사이드 코드</strong>와 결합되어 공격자가 웹 애플리케이션을 악용할 수 있는 경로를 열어줍니다. 이 글에서는 HTML에서 발생할 수 있는 주요 보안 문제와 이를 예방하는 방법을 다루겠습니다.</p><hr><h3 id="1-교차-사이트-스크립팅-XSS-Cross-Site-Scripting"><a href="#1-교차-사이트-스크립팅-XSS-Cross-Site-Scripting" class="headerlink" title="1. 교차 사이트 스크립팅(XSS, Cross-Site Scripting)"></a>1. <strong>교차 사이트 스크립팅(XSS, Cross-Site Scripting)</strong></h3><p><strong>XSS</strong>는 웹 애플리케이션에서 가장 흔히 발생하는 보안 취약점 중 하나로, 공격자가 악성 스크립트를 웹 페이지에 삽입하여 다른 사용자에게 실행시키는 공격입니다. 주로 입력 필드나 URL 쿼리 문자열 등을 통해 악성 JavaScript 코드가 삽입되어 피해자가 악성 스크립트에 노출됩니다.</p><h4 id="XSS-공격의-예시"><a href="#XSS-공격의-예시" class="headerlink" title="XSS 공격의 예시"></a>XSS 공격의 예시</h4><ul><li>사용자가 제출하는 폼에 악성 JavaScript 코드를 입력하여 다른 사용자의 세션 쿠키를 탈취하거나, 권한을 가로챕니다.</li></ul><h4 id="예방-방법"><a href="#예방-방법" class="headerlink" title="예방 방법"></a>예방 방법</h4><ul><li><p><strong>HTML 인코딩</strong>: 사용자 입력을 HTML로 삽입할 때, <code>&lt;</code>, <code>&gt;</code>, <code>&quot;</code>, <code>&#39;</code>, <code>&amp;</code>와 같은 특수 문자를 HTML 엔티티로 변환해야 합니다. 예를 들어, <code>&lt;</code>는 <code>&amp;lt;</code>, <code>&gt;</code>는 <code>&amp;gt;</code>로 변환합니다.</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>User input: &amp;lt;script&amp;gt;alert('XSS')&amp;lt;/script&amp;gt;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p><strong>콘텐츠 보안 정책(CSP, Content Security Policy)</strong>: CSP는 웹 페이지에서 실행되는 스크립트를 제한하는 보안 기능으로, 외부 스크립트나 인라인 스크립트의 실행을 제한할 수 있습니다. 이를 통해 XSS 공격을 방어할 수 있습니다.</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"Content-Security-Policy"</span> <span class="attr">content</span>=<span class="string">"default-src 'self'; script-src 'self'"</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p><strong>자바스크립트 안전한 사용</strong>: 사용자가 제출한 입력값을 서버에서 처리할 때, 이 값을 그대로 웹 페이지에 반영하지 않고, 필터링하거나 검증 과정을 거쳐야 합니다.</p></li></ul><hr><h3 id="2-교차-사이트-요청-위조-CSRF-Cross-Site-Request-Forgery"><a href="#2-교차-사이트-요청-위조-CSRF-Cross-Site-Request-Forgery" class="headerlink" title="2. 교차 사이트 요청 위조(CSRF, Cross-Site Request Forgery)"></a>2. <strong>교차 사이트 요청 위조(CSRF, Cross-Site Request Forgery)</strong></h3><p><strong>CSRF</strong>는 공격자가 사용자의 인증 정보를 도용하여 사용자의 의도와 상관없이 서버에 요청을 보내는 공격입니다. 예를 들어, 사용자가 로그인된 상태에서 악성 사이트에 접속하면, 공격자는 사용자의 쿠키를 이용해 서버에 권한을 가진 요청을 보낼 수 있습니다.</p><h4 id="CSRF-공격의-예시"><a href="#CSRF-공격의-예시" class="headerlink" title="CSRF 공격의 예시"></a>CSRF 공격의 예시</h4><ul><li>사용자가 로그인 상태에서 이메일을 보낼 수 있는 웹 애플리케이션을 사용 중일 때, 악성 사이트에서 자동으로 이메일을 발송하는 요청을 보냅니다.</li></ul><h4 id="예방-방법-1"><a href="#예방-방법-1" class="headerlink" title="예방 방법"></a>예방 방법</h4><ul><li><p><strong>CSRF 토큰 사용</strong>: 각 요청에 고유한 CSRF 토큰을 포함시켜 요청을 검증합니다. 서버는 이 토큰을 검증하여, 요청이 실제 사용자의 요청인지 확인합니다.</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"hidden"</span> <span class="attr">name</span>=<span class="string">"csrf_token"</span> <span class="attr">value</span>=<span class="string">"randomCSRFtoken"</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p><strong>SameSite 쿠키 속성 설정</strong>: 쿠키에 <code>SameSite</code> 속성을 설정하여, 다른 사이트에서 이 쿠키를 전송하지 못하게 할 수 있습니다.</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">Set-Cookie</span>: sessionid=12345; SameSite=Strict;</span><br></pre></td></tr></table></figure></li></ul><hr><h3 id="3-파일-업로드-취약점"><a href="#3-파일-업로드-취약점" class="headerlink" title="3. 파일 업로드 취약점"></a>3. <strong>파일 업로드 취약점</strong></h3><p>HTML 폼을 사용하여 파일을 업로드할 때, 서버에서 파일의 종류를 검증하지 않으면 악성 파일이 업로드될 수 있습니다. 예를 들어, 공격자는 <code>.php</code>나 <code>.exe</code>와 같은 실행 가능한 파일을 업로드하여 서버에서 악성 코드를 실행할 수 있습니다.</p><h4 id="파일-업로드-공격의-예시"><a href="#파일-업로드-공격의-예시" class="headerlink" title="파일 업로드 공격의 예시"></a>파일 업로드 공격의 예시</h4><ul><li>사용자가 이미지 파일로 위장한 PHP 스크립트를 업로드하여, 서버에서 악성 코드를 실행합니다.</li></ul><h4 id="예방-방법-2"><a href="#예방-방법-2" class="headerlink" title="예방 방법"></a>예방 방법</h4><ul><li><strong>파일 확장자 검증</strong>: 업로드된 파일의 확장자뿐만 아니라 MIME 타입도 검증해야 합니다.</li><li><strong>파일 내용 검사</strong>: 파일을 서버에 저장하기 전에 파일의 내용을 검사하여 악성 코드가 포함되어 있지 않은지 확인합니다.</li><li><strong>파일 이름 변경</strong>: 업로드된 파일의 이름을 변경하여, 파일 경로를 예측할 수 없도록 합니다.</li></ul><hr><h3 id="4-HTTP-응답-헤더-취약점"><a href="#4-HTTP-응답-헤더-취약점" class="headerlink" title="4. HTTP 응답 헤더 취약점"></a>4. <strong>HTTP 응답 헤더 취약점</strong></h3><p><strong>HTTP 응답 헤더</strong>는 웹 서버가 클라이언트에 보낼 때 포함되는 메타데이터입니다. 이 응답 헤더에는 웹 보안과 관련된 중요한 설정이 포함될 수 있습니다. 그러나 응답 헤더를 제대로 설정하지 않으면 보안 취약점이 발생할 수 있습니다.</p><h4 id="주요-취약점"><a href="#주요-취약점" class="headerlink" title="주요 취약점"></a>주요 취약점</h4><ul><li><strong>X-Frame-Options</strong>: 이 헤더가 없으면 클릭재킹(clickjacking) 공격에 노출될 수 있습니다.</li><li><strong>Strict-Transport-Security (HSTS)</strong>: HSTS가 설정되지 않으면 중간자 공격(MITM)에 취약할 수 있습니다.</li></ul><h4 id="예방-방법-3"><a href="#예방-방법-3" class="headerlink" title="예방 방법"></a>예방 방법</h4><ul><li><p><strong>X-Frame-Options</strong>: 클릭재킹 공격을 방지하려면 이 헤더를 설정하여 페이지가 다른 사이트의 iframe에 포함되지 않도록 합니다.</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">X-Frame-Options</span>: DENY</span><br></pre></td></tr></table></figure></li><li><p><strong>Strict-Transport-Security</strong>: HTTPS 연결을 강제로 사용하게 하여, 중간자 공격을 방지할 수 있습니다.</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">Strict-Transport-Security</span>: max-age=31536000; includeSubDomains</span><br></pre></td></tr></table></figure></li><li><p><strong>X-XSS-Protection</strong>: XSS 공격을 방지하기 위해 이 헤더를 설정할 수 있습니다.</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">X-XSS-Protection</span>: 1; mode=block</span><br></pre></td></tr></table></figure></li></ul><hr><h3 id="5-클릭재킹-Clickjacking"><a href="#5-클릭재킹-Clickjacking" class="headerlink" title="5. 클릭재킹(Clickjacking)"></a>5. <strong>클릭재킹(Clickjacking)</strong></h3><p>클릭재킹은 사용자가 실제로 클릭하는 것이 아닌, 보이지 않는 숨겨진 프레임을 클릭하게 만드는 공격입니다. 이 공격은 사용자가 웹 페이지의 UI 요소를 클릭할 때, 의도하지 않은 다른 요소를 클릭하게 만듭니다.</p><h4 id="클릭재킹의-예시"><a href="#클릭재킹의-예시" class="headerlink" title="클릭재킹의 예시"></a>클릭재킹의 예시</h4><ul><li>공격자가 피해자의 페이지를 iframe으로 삽입하여, 클릭을 유도하고 악성 링크나 버튼을 클릭하게 만듭니다.</li></ul><h4 id="예방-방법-4"><a href="#예방-방법-4" class="headerlink" title="예방 방법"></a>예방 방법</h4><ul><li><strong>X-Frame-Options 사용</strong>: 앞서 설명한 대로, <code>X-Frame-Options</code> 헤더를 설정하여 웹 페이지가 다른 사이트의 iframe에 포함되지 않도록 합니다.</li><li><strong>CSP 설정</strong>: <code>Content-Security-Policy</code>를 설정하여 외부 도메인에서 콘텐츠가 로드되지 않도록 할 수 있습니다.<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"Content-Security-Policy"</span> <span class="attr">content</span>=<span class="string">"frame-ancestors 'none'"</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><hr><h3 id="6-클라이언트-측-스크립트-보안"><a href="#6-클라이언트-측-스크립트-보안" class="headerlink" title="6. 클라이언트 측 스크립트 보안"></a>6. <strong>클라이언트 측 스크립트 보안</strong></h3><p>HTML 문서에서 <strong>JavaScript</strong>와 <strong>AJAX</strong>를 사용하여 클라이언트 측에서 데이터를 처리할 때, 보안 취약점이 발생할 수 있습니다. 예를 들어, 사용자의 입력을 서버로 보내기 전에 제대로 필터링하지 않으면 SQL 인젝션, XSS 등 다양한 공격에 노출될 수 있습니다.</p><h4 id="예방-방법-5"><a href="#예방-방법-5" class="headerlink" title="예방 방법"></a>예방 방법</h4><ul><li><strong>입력 검증</strong>: 클라이언트와 서버에서 사용자 입력을 모두 검증하고, 예상되는 값만을 받아들입니다.</li><li><strong>HTTPS 사용</strong>: 모든 데이터 전송은 HTTPS 프로토콜을 통해 암호화하여, 중간자 공격을 방지합니다.</li></ul><hr><h3 id="결론"><a href="#결론" class="headerlink" title="결론"></a>결론</h3><p>HTML은 웹 페이지의 기본 구조를 정의하는 중요한 역할을 하지만, 보안 취약점도 존재합니다. XSS, CSRF, 파일 업로드 취약점 등 다양한 보안 위협이 존재하므로, 이러한 공격을 예방하기 위해서는 HTML과 함께 서버 측 보안, 클라이언트 측 보안도 함께 고려해야 합니다.</p><p>보안은 단기적인 해결책이 아닌, 지속적인 관리와 점검이 필요합니다. HTML 문서를 작성할 때, 위에서 설명한 보안 기법들을 적용하고, 보안 관련 도구와 정책을 적극적으로 활용하여 웹 애플리케이션을 안전하게 보호할 수 있습니다.</p><h4 id="Related-Posts"><a href="#Related-Posts" class="headerlink" title="Related Posts"></a>Related Posts</h4><ul><li><a href="/2019/08/07/HTML-table/" title="HTML 간단하게 표 만들기">HTML 간단하게 표 만들기</a></li><li><a href="/2018/08/29/HTML-Editor/" title="HTML 에디터 (jsFiddle,메모장)">HTML 에디터 (jsFiddle,메모장)</a></li><li><a href="/2019/08/07/HTML-buttonLink/" title="HTML-버튼에 링크 거는 방법">HTML-버튼에 링크 거는 방법</a></li><li><a href="/2021/10/25/HTML-comment/" title="HTML - 주석 태그 <!-- -->">HTML - 주석 태그 <!-- --></a></li><li><a href="/2018/08/30/HTML-imgLink/" title="HTML 이미지 링크거는 법">HTML 이미지 링크거는 법</a></li><li><a href="/2018/08/27/HTML-MailtoTag/" title="Mailto 태그">Mailto 태그</a></li><li><a href="/2024/01/04/HTML-enter/" title="HTML 줄바꿈 입력하기">HTML 줄바꿈 입력하기</a></li></ul><h4 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h4><ul><li><a href="https://chatgpt.com/" target="_blank" rel="noopener">https://chatgpt.com/</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;HTML의-보안-문제와-예방-방법&quot;&gt;&lt;a href=&quot;#HTML의-보안-문제와-예방-방법&quot; class=&quot;headerlink&quot; title=&quot;HTML의 보안 문제와 예방 방법&quot;&gt;&lt;/a&gt;HTML의 보안 문제와 예방 방법&lt;/h3&gt;&lt;p&gt;웹 개발에서
      
    
    </summary>
    
      <category term="Programming" scheme="https://dullyshin.github.io/categories/Programming/"/>
    
      <category term="HTML" scheme="https://dullyshin.github.io/categories/Programming/HTML/"/>
    
    
      <category term="HTML의 보안 문제와 예방 방법" scheme="https://dullyshin.github.io/tags/HTML%EC%9D%98-%EB%B3%B4%EC%95%88-%EB%AC%B8%EC%A0%9C%EC%99%80-%EC%98%88%EB%B0%A9-%EB%B0%A9%EB%B2%95/"/>
    
      <category term="교차 사이트 스크립팅" scheme="https://dullyshin.github.io/tags/%EA%B5%90%EC%B0%A8-%EC%82%AC%EC%9D%B4%ED%8A%B8-%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8C%85/"/>
    
      <category term="교차 사이트 요청 위조" scheme="https://dullyshin.github.io/tags/%EA%B5%90%EC%B0%A8-%EC%82%AC%EC%9D%B4%ED%8A%B8-%EC%9A%94%EC%B2%AD-%EC%9C%84%EC%A1%B0/"/>
    
      <category term="클릭재킹" scheme="https://dullyshin.github.io/tags/%ED%81%B4%EB%A6%AD%EC%9E%AC%ED%82%B9/"/>
    
  </entry>
  
  <entry>
    <title>HTML 문서의 최신 트렌드와 도구</title>
    <link href="https://dullyshin.github.io/2024/11/12/HTML-recentTrendAndTool/"/>
    <id>https://dullyshin.github.io/2024/11/12/HTML-recentTrendAndTool/</id>
    <published>2024-11-12T04:48:22.000Z</published>
    <updated>2024-11-12T04:49:54.349Z</updated>
    
    <content type="html"><![CDATA[<h3 id="HTML-문서의-최신-트렌드와-도구"><a href="#HTML-문서의-최신-트렌드와-도구" class="headerlink" title="HTML 문서의 최신 트렌드와 도구"></a>HTML 문서의 최신 트렌드와 도구</h3><p>웹 개발은 빠르게 발전하는 분야입니다. 특히 HTML은 웹 페이지의 구조를 정의하는 가장 기본적인 언어로, 새로운 기능과 트렌드가 계속해서 도입되고 있습니다. 이러한 변화는 웹 페이지의 성능을 향상시키고, 개발자들의 작업을 더 효율적으로 만들며, 사용자 경험을 개선하는 데 큰 도움이 됩니다. 이번 블로그 글에서는 <strong>HTML 문서의 최신 트렌드</strong>와 <strong>HTML 개발에 유용한 도구들</strong>을 살펴보겠습니다.</p><hr><h3 id="1-HTML5와-시맨틱-웹의-강화"><a href="#1-HTML5와-시맨틱-웹의-강화" class="headerlink" title="1. HTML5와 시맨틱 웹의 강화"></a>1. <strong>HTML5와 시맨틱 웹의 강화</strong></h3><p>HTML5는 웹의 표준으로 자리 잡으며, 시맨틱 태그(Semantic Tags)를 중심으로 한 <strong>시맨틱 웹</strong>(Semantic Web)의 도입을 촉진했습니다. 시맨틱 웹은 각 요소가 그 의미를 명확하게 나타내도록 하는 접근 방식으로, 이를 통해 웹 페이지 구조의 가독성, 접근성, SEO(검색엔진 최적화) 등을 개선할 수 있습니다.</p><h4 id="주요-시맨틱-태그"><a href="#주요-시맨틱-태그" class="headerlink" title="주요 시맨틱 태그"></a>주요 시맨틱 태그</h4><ul><li><strong><code>&lt;header&gt;</code></strong>: 문서나 섹션의 머리말을 나타냅니다.</li><li><strong><code>&lt;footer&gt;</code></strong>: 문서나 섹션의 바닥글을 정의합니다.</li><li><strong><code>&lt;article&gt;</code></strong>: 독립적인 콘텐츠 블록을 나타냅니다.</li><li><strong><code>&lt;section&gt;</code></strong>: 문서 내에서 주요 섹션을 정의합니다.</li><li><strong><code>&lt;nav&gt;</code></strong>: 네비게이션 링크를 그룹화합니다.</li><li><strong><code>&lt;main&gt;</code></strong>: 문서의 주요 콘텐츠를 정의합니다.</li><li><strong><code>&lt;figure&gt;</code></strong>, <strong><code>&lt;figcaption&gt;</code></strong>: 그림, 다이어그램, 비디오 등에 설명을 추가합니다.</li></ul><h4 id="왜-중요한가"><a href="#왜-중요한가" class="headerlink" title="왜 중요한가?"></a>왜 중요한가?</h4><ul><li><strong>SEO 개선</strong>: 검색 엔진은 시맨틱 태그를 통해 페이지의 구조를 더 잘 이해하고, 콘텐츠를 정확히 인덱싱할 수 있습니다.</li><li><strong>접근성 향상</strong>: 시맨틱 태그는 화면 리더와 같은 보조 기술들이 웹 콘텐츠를 이해하는 데 도움을 줍니다.</li></ul><hr><h3 id="2-웹-컴포넌트-Web-Components"><a href="#2-웹-컴포넌트-Web-Components" class="headerlink" title="2. 웹 컴포넌트(Web Components)"></a>2. <strong>웹 컴포넌트(Web Components)</strong></h3><p><strong>웹 컴포넌트</strong>는 HTML, CSS, JavaScript를 결합하여 재사용 가능한 UI 컴포넌트를 만드는 기술입니다. 웹 컴포넌트를 사용하면 독립적이고 캡슐화된 구성 요소를 만들 수 있으며, 다양한 프로젝트에서 재사용할 수 있습니다.</p><h4 id="주요-기술"><a href="#주요-기술" class="headerlink" title="주요 기술"></a>주요 기술</h4><ul><li><strong>Custom Elements</strong>: 사용자 정의 HTML 태그를 생성할 수 있습니다.</li><li><strong>Shadow DOM</strong>: 스타일과 스크립트가 외부에서 영향을 미치지 않도록 캡슐화합니다.</li><li><strong>HTML Templates</strong>: HTML 템플릿을 정의하여, 동적으로 콘텐츠를 삽입할 수 있습니다.</li></ul><h4 id="장점"><a href="#장점" class="headerlink" title="장점"></a>장점</h4><ul><li><strong>컴포넌트 재사용성</strong>: 개발자가 독립적인 UI 요소를 만들고, 이를 여러 프로젝트에서 재사용할 수 있습니다.</li><li><strong>스타일 캡슐화</strong>: 웹 컴포넌트는 외부 스타일 시트와의 충돌 없이 자신만의 스타일을 유지합니다.</li><li><strong>향상된 유지보수성</strong>: 독립적인 모듈로 개발이 가능하여 코드 관리와 유지보수가 쉬워집니다.</li></ul><hr><h3 id="3-모던-CSS와-HTML의-통합-Flexbox-Grid-CSS-Variables"><a href="#3-모던-CSS와-HTML의-통합-Flexbox-Grid-CSS-Variables" class="headerlink" title="3. 모던 CSS와 HTML의 통합 (Flexbox, Grid, CSS Variables)"></a>3. <strong>모던 CSS와 HTML의 통합 (Flexbox, Grid, CSS Variables)</strong></h3><p>HTML의 발전과 함께 CSS도 점점 더 강력해지고 있습니다. <strong>Flexbox</strong>와 <strong>CSS Grid</strong>는 레이아웃을 정의하는 데 필수적인 도구로 자리잡았고, <strong>CSS Variables</strong>는 스타일 시트의 관리 방식을 혁신적으로 변화시켰습니다.</p><h4 id="Flexbox와-CSS-Grid의-활용"><a href="#Flexbox와-CSS-Grid의-활용" class="headerlink" title="Flexbox와 CSS Grid의 활용"></a>Flexbox와 CSS Grid의 활용</h4><ul><li><strong>Flexbox</strong>는 1차원 레이아웃을 다루는 데 최적화된 시스템으로, 복잡한 정렬 작업을 손쉽게 처리할 수 있습니다.</li><li><strong>CSS Grid</strong>는 2차원 레이아웃을 위한 도구로, 행과 열을 기준으로 복잡한 레이아웃을 쉽게 구현할 수 있습니다.</li></ul><p>이 두 기술을 HTML 문서에서 함께 사용하면 더욱 정교하고 반응성이 뛰어난 레이아웃을 만들 수 있습니다.</p><h4 id="CSS-Variables"><a href="#CSS-Variables" class="headerlink" title="CSS Variables"></a>CSS Variables</h4><p><strong>CSS Variables</strong>를 사용하면 스타일을 보다 유연하게 관리할 수 있습니다. 값이 반복되는 스타일 속성을 변수로 정의하여 코드의 재사용성을 높이고 유지보수를 용이하게 합니다.</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-pseudo">:root</span> &#123;</span><br><span class="line">  <span class="attribute">--primary-color</span>: <span class="number">#3498db</span>;</span><br><span class="line">  <span class="attribute">--secondary-color</span>: <span class="number">#2ecc71</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">button</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="built_in">var</span>(--primary-color);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h3 id="4-HTML의-접근성-Accessibility-a11y-개선"><a href="#4-HTML의-접근성-Accessibility-a11y-개선" class="headerlink" title="4. HTML의 접근성(Accessibility, a11y) 개선"></a>4. <strong>HTML의 접근성(Accessibility, a11y) 개선</strong></h3><p>웹 접근성은 모든 사용자에게 웹 콘텐츠가 접근 가능하도록 보장하는 중요한 요소입니다. HTML5는 웹 접근성을 개선하기 위한 많은 기능을 제공하며, <strong>ARIA(Accessible Rich Internet Applications)</strong> 태그를 활용하면 웹 애플리케이션을 더욱 접근 가능하게 만들 수 있습니다.</p><h4 id="ARIA의-활용"><a href="#ARIA의-활용" class="headerlink" title="ARIA의 활용"></a>ARIA의 활용</h4><ul><li><strong><code>role</code></strong>: HTML 요소에 역할을 지정하여, 보조 기술이 해당 요소를 이해하도록 돕습니다.</li><li><strong><code>aria-label</code></strong>: 버튼이나 링크 등에 대체 텍스트를 제공하여, 화면 리더 사용자에게 유용한 정보를 제공합니다.</li><li><strong><code>aria-live</code></strong>: 동적 콘텐츠를 알리기 위해 사용하며, 보조 기술에서 실시간으로 정보를 전달할 수 있습니다.</li></ul><h4 id="최신-트렌드"><a href="#최신-트렌드" class="headerlink" title="최신 트렌드"></a>최신 트렌드</h4><ul><li><strong>키보드 내비게이션 강화</strong>: 웹 페이지는 마우스를 사용하지 않고도 키보드로 탐색할 수 있어야 합니다.</li><li><strong>모바일 접근성</strong>: 모바일 기기에서의 접근성을 고려해 반응형 디자인을 적용하고, 터치스크린 사용자에게 최적화된 인터페이스를 제공합니다.</li></ul><hr><h3 id="5-HTML과-JavaScript의-통합-Web-APIs"><a href="#5-HTML과-JavaScript의-통합-Web-APIs" class="headerlink" title="5. HTML과 JavaScript의 통합 (Web APIs)"></a>5. <strong>HTML과 JavaScript의 통합 (Web APIs)</strong></h3><p>JavaScript와의 통합은 HTML의 기능을 확장하는 데 중요한 역할을 합니다. <strong>Web APIs</strong>는 HTML과 JavaScript 간의 상호작용을 강화하여 다양한 기능을 구현할 수 있게 합니다.</p><h4 id="주요-Web-API-예시"><a href="#주요-Web-API-예시" class="headerlink" title="주요 Web API 예시"></a>주요 Web API 예시</h4><ul><li><strong>Geolocation API</strong>: 사용자의 위치를 감지하여, 위치 기반 서비스를 제공합니다.</li><li><strong>Fetch API</strong>: AJAX 요청을 보다 간편하게 처리할 수 있습니다.</li><li><strong>LocalStorage / SessionStorage</strong>: 클라이언트 측에서 데이터를 저장하여 페이지를 새로 고침하더라도 데이터를 유지할 수 있습니다.</li><li><strong>WebSockets</strong>: 실시간 양방향 통신을 가능하게 합니다.</li></ul><h3 id="6-Progressive-Web-Apps-PWA"><a href="#6-Progressive-Web-Apps-PWA" class="headerlink" title="6. Progressive Web Apps (PWA)"></a>6. <strong>Progressive Web Apps (PWA)</strong></h3><p>Progressive Web App(PWA)은 웹과 네이티브 앱의 장점을 결합한 웹 애플리케이션입니다. <strong>서비스 워커(Service Worker)</strong>와 <strong>앱 매니페스트(App Manifest)</strong>를 사용하여, 오프라인에서도 동작하고, 푸시 알림, 홈 화면에 추가 기능 등을 제공할 수 있습니다.</p><h4 id="HTML에서-PWA-구현"><a href="#HTML에서-PWA-구현" class="headerlink" title="HTML에서 PWA 구현"></a>HTML에서 PWA 구현</h4><ul><li><strong>Web App Manifest</strong>: 앱을 홈 화면에 추가할 때의 이름, 아이콘, 색상 등을 정의합니다.</li><li><strong>Service Worker</strong>: 네트워크 요청을 가로채고, 캐싱하여 오프라인에서도 웹 앱이 동작할 수 있게 합니다.</li></ul><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"name"</span>: <span class="string">"My PWA App"</span>,</span><br><span class="line">  <span class="attr">"short_name"</span>: <span class="string">"PWA"</span>,</span><br><span class="line">  <span class="attr">"start_url"</span>: <span class="string">"/"</span>,</span><br><span class="line">  <span class="attr">"display"</span>: <span class="string">"standalone"</span>,</span><br><span class="line">  <span class="attr">"background_color"</span>: <span class="string">"#ffffff"</span>,</span><br><span class="line">  <span class="attr">"description"</span>: <span class="string">"A Progressive Web App example"</span>,</span><br><span class="line">  <span class="attr">"icons"</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">"src"</span>: <span class="string">"/icons/icon-192x192.png"</span>,</span><br><span class="line">      <span class="attr">"sizes"</span>: <span class="string">"192x192"</span>,</span><br><span class="line">      <span class="attr">"type"</span>: <span class="string">"image/png"</span></span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h3 id="7-HTML-문서의-최신-도구들"><a href="#7-HTML-문서의-최신-도구들" class="headerlink" title="7. HTML 문서의 최신 도구들"></a>7. <strong>HTML 문서의 최신 도구들</strong></h3><p>웹 개발에서 HTML 문서를 작성하고 최적화하는 데 도움이 되는 최신 도구들은 개발자의 작업을 더욱 효율적이고 정확하게 만듭니다.</p><h4 id="7-1-Code-Editors"><a href="#7-1-Code-Editors" class="headerlink" title="7.1. Code Editors"></a>7.1. <strong>Code Editors</strong></h4><ul><li><strong>VS Code</strong>: 많은 개발자들이 사용하는 강력한 코드 편집기입니다. 다양한 플러그인과 기능이 제공되어 HTML, CSS, JavaScript 작업에 유용합니다.</li><li><strong>Sublime Text</strong>: 가벼운 코드 편집기이며, 속도가 빠르고 직관적인 인터페이스를 제공합니다.</li></ul><h4 id="7-2-Preprocessors"><a href="#7-2-Preprocessors" class="headerlink" title="7.2. Preprocessors"></a>7.2. <strong>Preprocessors</strong></h4><ul><li><strong>Sass</strong>와 <strong>LESS</strong>: CSS의 전처리기로, 변수를 사용하고, 네스트된 스타일을 정의하는 등 더 강력하고 효율적인 스타일 시트를 작성할 수 있습니다.</li><li><strong>Pug</strong>: HTML 템플릿 엔진으로, 코드의 가독성을 높이고 작성 속도를 개선할 수 있습니다.</li></ul><h4 id="7-3-Linting-및-포매팅-도구"><a href="#7-3-Linting-및-포매팅-도구" class="headerlink" title="7.3. Linting 및 포매팅 도구"></a>7.3. <strong>Linting 및 포매팅 도구</strong></h4><ul><li><strong>Prettier</strong>: 코드를 자동으로 포맷팅하여 일관된 코드 스타일을 유지할 수 있습니다.</li><li><strong>ESLint</strong>: JavaScript 코드를 분석하여 문법 오류나 코드 스타일 문제를 사전에 해결할 수 있도록 돕습니다.</li></ul><h4 id="7-4-웹-성능-분석-도구"><a href="#7-4-웹-성능-분석-도구" class="headerlink" title="7.4. 웹 성능 분석 도구"></a>7.4. <strong>웹 성능 분석 도구</strong></h4><ul><li><strong>Lighthouse</strong>: Google에서 제공하는 오픈 소스 도구로, 웹 페이지의 성능, 접근성, SEO 등을 분석할 수 있습니다.</li></ul><ul><li><strong>WebPageTest</strong>: 웹 페이지 로딩 속도를 테스트하고 성능을 최적화할 수 있는 도구입니다.</li></ul><hr><h3 id="결론"><a href="#결론" class="headerlink" title="결론"></a>결론</h3><p>HTML은 꾸준히 발전하고 있으며, 최신 트렌드와 도구를 활용하면 웹 페이지를 더욱 강력하고 효율적으로 만들 수 있습니다. HTML5의 시맨틱 태그, 웹 컴포넌트, 접근성 강화, 그리고 최신 CSS 기법들은 개발자들에게 더 나은 사용자 경험과 성능을 제공하는 데 중요한 역할을 합니다. 또한, 웹 개발 도구들을 적절히 사용하면 개발 과정이 더 쉬워지고, 웹 페이지의 품질도 향상될 것입니다.</p><p>이러한 최신 트렌드와 도구들을 잘 활용하여 웹 개발에 한발 더 가까워져 보세요!</p><h4 id="Related-Posts"><a href="#Related-Posts" class="headerlink" title="Related Posts"></a>Related Posts</h4><ul><li><a href="/2019/08/07/HTML-table/" title="HTML 간단하게 표 만들기">HTML 간단하게 표 만들기</a></li><li><a href="/2018/08/29/HTML-Editor/" title="HTML 에디터 (jsFiddle,메모장)">HTML 에디터 (jsFiddle,메모장)</a></li><li><a href="/2019/08/07/HTML-buttonLink/" title="HTML-버튼에 링크 거는 방법">HTML-버튼에 링크 거는 방법</a></li><li><a href="/2021/10/25/HTML-comment/" title="HTML - 주석 태그 <!-- -->">HTML - 주석 태그 <!-- --></a></li><li><a href="/2018/08/30/HTML-imgLink/" title="HTML 이미지 링크거는 법">HTML 이미지 링크거는 법</a></li><li><a href="/2018/08/27/HTML-MailtoTag/" title="Mailto 태그">Mailto 태그</a></li><li><a href="/2024/01/04/HTML-enter/" title="HTML 줄바꿈 입력하기">HTML 줄바꿈 입력하기</a></li></ul><h4 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h4><ul><li><a href="https://chatgpt.com/" target="_blank" rel="noopener">https://chatgpt.com/</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;HTML-문서의-최신-트렌드와-도구&quot;&gt;&lt;a href=&quot;#HTML-문서의-최신-트렌드와-도구&quot; class=&quot;headerlink&quot; title=&quot;HTML 문서의 최신 트렌드와 도구&quot;&gt;&lt;/a&gt;HTML 문서의 최신 트렌드와 도구&lt;/h3&gt;&lt;p&gt;웹 
      
    
    </summary>
    
      <category term="Programming" scheme="https://dullyshin.github.io/categories/Programming/"/>
    
      <category term="HTML" scheme="https://dullyshin.github.io/categories/Programming/HTML/"/>
    
    
      <category term="HTML 문서의 최신 트렌드와 도구" scheme="https://dullyshin.github.io/tags/HTML-%EB%AC%B8%EC%84%9C%EC%9D%98-%EC%B5%9C%EC%8B%A0-%ED%8A%B8%EB%A0%8C%EB%93%9C%EC%99%80-%EB%8F%84%EA%B5%AC/"/>
    
      <category term="시맨틱 웹" scheme="https://dullyshin.github.io/tags/%EC%8B%9C%EB%A7%A8%ED%8B%B1-%EC%9B%B9/"/>
    
      <category term="웹 컴포넌트" scheme="https://dullyshin.github.io/tags/%EC%9B%B9-%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8/"/>
    
      <category term="HTML의 접근성" scheme="https://dullyshin.github.io/tags/HTML%EC%9D%98-%EC%A0%91%EA%B7%BC%EC%84%B1/"/>
    
  </entry>
  
  <entry>
    <title>HTML Lazy Loading 정의와 활용법</title>
    <link href="https://dullyshin.github.io/2024/11/12/HTML-LazyLoading/"/>
    <id>https://dullyshin.github.io/2024/11/12/HTML-LazyLoading/</id>
    <published>2024-11-12T04:43:12.000Z</published>
    <updated>2024-11-12T04:45:57.737Z</updated>
    
    <content type="html"><![CDATA[<h3 id="HTML-Lazy-Loading-정의와-활용법"><a href="#HTML-Lazy-Loading-정의와-활용법" class="headerlink" title="HTML Lazy Loading: 정의와 활용법"></a>HTML Lazy Loading: 정의와 활용법</h3><p><strong>Lazy Loading</strong>(지연 로딩)은 웹 페이지에서 이미지, 비디오, 스크립트, 또는 기타 리소스를 사용자가 실제로 필요로 할 때까지 로드하지 않고, <strong>나중에 로드</strong>하는 기법을 의미합니다. 이 기술을 사용하면 웹 페이지 초기 로딩 속도를 빠르게 하고, 네트워크 대역폭을 효율적으로 사용할 수 있습니다. 특히 이미지나 동영상 같은 대용량 미디어 파일을 지연 로딩하는 것이 효과적입니다.</p><p>HTML에서 Lazy Loading은 <strong>이미지</strong>나 <strong>iframe</strong> 요소에 적용하여 사용자가 해당 요소를 화면에 볼 때만 로드되도록 할 수 있습니다. 이를 통해 불필요한 리소스 로딩을 방지하고, 페이지 로딩 시간을 단축시킬 수 있습니다.</p><hr><h3 id="1-Lazy-Loading의-이점"><a href="#1-Lazy-Loading의-이점" class="headerlink" title="1. Lazy Loading의 이점"></a>1. <strong>Lazy Loading의 이점</strong></h3><ul><li><strong>페이지 로딩 속도 향상</strong>: 페이지가 처음 로드될 때 필요한 리소스만 로드하므로 초기 로딩 시간이 짧아집니다.</li><li><strong>네트워크 대역폭 절약</strong>: 사용자가 보지 않는 이미지나 비디오 같은 미디어 파일은 로드하지 않으므로 대역폭을 절약할 수 있습니다.</li><li><strong>사용자 경험 개선</strong>: 페이지가 빠르게 로드되면 사용자 경험이 향상되고, 이탈률이 줄어듭니다.</li><li><strong>SEO</strong>: 페이지가 빨리 로드되면 검색 엔진에서 페이지 랭킹에 긍정적인 영향을 미칠 수 있습니다.</li></ul><hr><h3 id="2-HTML에서-Lazy-Loading-사용하기"><a href="#2-HTML에서-Lazy-Loading-사용하기" class="headerlink" title="2. HTML에서 Lazy Loading 사용하기"></a>2. <strong>HTML에서 Lazy Loading 사용하기</strong></h3><p>HTML에서 Lazy Loading을 구현하는 가장 간단한 방법은 <code>loading</code> 속성을 사용하는 것입니다. 이 속성은 <strong>이미지</strong>(<code>&lt;img&gt;</code>)와 <strong>iframe</strong>(<code>&lt;iframe&gt;</code>) 요소에 적용할 수 있습니다.</p><h4 id="2-1-이미지에-Lazy-Loading-적용"><a href="#2-1-이미지에-Lazy-Loading-적용" class="headerlink" title="2.1. 이미지에 Lazy Loading 적용"></a>2.1. <strong>이미지에 Lazy Loading 적용</strong></h4><p>HTML5에서 제공하는 <code>loading</code> 속성으로 이미지에 Lazy Loading을 간단히 적용할 수 있습니다. <code>loading=&quot;lazy&quot;</code> 속성을 사용하면 브라우저가 사용자가 이미지가 보일 때까지 로드하지 않도록 지시할 수 있습니다.</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"image.jpg"</span> <span class="attr">alt</span>=<span class="string">"Example image"</span> <span class="attr">loading</span>=<span class="string">"lazy"</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><code>loading=&quot;lazy&quot;</code>: 이 속성을 사용하면 이미지가 화면에 보일 때까지 로드되지 않습니다.</li></ul><h5 id="작동-방식"><a href="#작동-방식" class="headerlink" title="작동 방식:"></a>작동 방식:</h5><ul><li>사용자가 페이지를 스크롤하여 이미지가 화면에 나타날 때, 그때 이미지가 로드됩니다.</li><li>이미지는 사용자가 보는 화면에 나타날 때만 요청되므로 초기 페이지 로딩 속도가 빨라집니다.</li></ul><h4 id="2-2-iframe에-Lazy-Loading-적용"><a href="#2-2-iframe에-Lazy-Loading-적용" class="headerlink" title="2.2. iframe에 Lazy Loading 적용"></a>2.2. <strong>iframe에 Lazy Loading 적용</strong></h4><p><code>iframe</code> 요소에 대해서도 마찬가지로 <code>loading=&quot;lazy&quot;</code> 속성을 사용할 수 있습니다. 주로 비디오, 지도, 외부 콘텐츠를 로딩할 때 사용됩니다.</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">src</span>=<span class="string">"https://www.example.com"</span> <span class="attr">loading</span>=<span class="string">"lazy"</span>&gt;</span><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br></pre></td></tr></table></figure><p>이 방식으로, <code>iframe</code>도 화면에 나타날 때 로드되도록 설정할 수 있습니다.</p><hr><h3 id="3-Lazy-Loading의-동작-원리"><a href="#3-Lazy-Loading의-동작-원리" class="headerlink" title="3. Lazy Loading의 동작 원리"></a>3. <strong>Lazy Loading의 동작 원리</strong></h3><p>Lazy Loading이 어떻게 동작하는지 살펴보면 다음과 같습니다:</p><ol><li><strong>초기 로드</strong>: 페이지가 로드되면, <code>loading=&quot;lazy&quot;</code> 속성이 있는 요소는 바로 로드되지 않고, 해당 요소가 화면에 보일 때까지 기다립니다.</li><li><strong>사용자 스크롤</strong>: 사용자가 페이지를 스크롤하여 이미지나 iframe이 화면에 나타날 때, 브라우저는 해당 리소스를 로드합니다.</li><li><strong>스크롤 이벤트</strong>: 화면에 나타날 때만 리소스를 요청하기 때문에, 초기 페이지 로딩에 필요한 리소스만 요청하여 페이지의 로딩 속도가 빨라집니다.</li></ol><p>이 기법은 <strong>Intersection Observer API</strong>를 기반으로 작동하는 브라우저들이 많이 채택하고 있으며, 브라우저는 이 API를 사용하여 요소가 뷰포트에 들어올 때 로드하도록 합니다.</p><hr><h3 id="4-Lazy-Loading을-사용할-때-고려할-점"><a href="#4-Lazy-Loading을-사용할-때-고려할-점" class="headerlink" title="4. Lazy Loading을 사용할 때 고려할 점"></a>4. <strong>Lazy Loading을 사용할 때 고려할 점</strong></h3><h4 id="4-1-호환성"><a href="#4-1-호환성" class="headerlink" title="4.1. 호환성"></a>4.1. <strong>호환성</strong></h4><p><code>loading=&quot;lazy&quot;</code> 속성은 현재 대부분의 최신 브라우저에서 지원되지만, 모든 브라우저에서 완벽하게 동작하는 것은 아닙니다. 예를 들어, Internet Explorer와 일부 구형 브라우저에서는 지원하지 않으므로, 이를 고려해야 합니다. 이를 해결하려면 JavaScript polyfill을 사용하거나, <strong>Intersection Observer</strong> API를 직접 구현하여 Lazy Loading을 지원할 수 있습니다.</p><h4 id="4-2-SEO에-미치는-영향"><a href="#4-2-SEO에-미치는-영향" class="headerlink" title="4.2. SEO에 미치는 영향"></a>4.2. <strong>SEO에 미치는 영향</strong></h4><p>Lazy Loading을 사용할 때 SEO에 부정적인 영향을 미칠 수 있다는 우려가 있습니다. Google과 같은 검색 엔진은 페이지를 크롤링할 때 JavaScript를 실행하여 이미지를 로드하고 콘텐츠를 읽습니다. 그러나 Lazy Loading을 사용할 경우, 검색 엔진 크롤러가 이미지를 놓칠 수 있습니다. 이를 해결하려면, <code>alt</code> 텍스트와 이미지에 대한 충분한 설명을 추가하거나, <strong><code>noscript</code></strong> 태그를 사용하여 대체 콘텐츠를 제공하는 방법을 고려할 수 있습니다.</p><h4 id="예시-noscript-사용"><a href="#예시-noscript-사용" class="headerlink" title="예시: noscript 사용"></a>예시: <strong><code>noscript</code> 사용</strong></h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">noscript</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"image.jpg"</span> <span class="attr">alt</span>=<span class="string">"Example image"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">noscript</span>&gt;</span></span><br></pre></td></tr></table></figure><p><code>noscript</code> 태그는 JavaScript가 비활성화된 경우에도 리소스가 로드되도록 대체 콘텐츠를 제공하는 방법입니다.</p><hr><h3 id="5-JavaScript로-Lazy-Loading-구현하기"><a href="#5-JavaScript로-Lazy-Loading-구현하기" class="headerlink" title="5. JavaScript로 Lazy Loading 구현하기"></a>5. <strong>JavaScript로 Lazy Loading 구현하기</strong></h3><p><code>loading=&quot;lazy&quot;</code> 속성을 지원하지 않는 브라우저에서 Lazy Loading을 구현하려면 <strong>Intersection Observer API</strong>를 사용한 JavaScript 기반 솔루션을 사용할 수 있습니다. 이 API는 요소가 뷰포트에 들어왔을 때 콜백을 실행하는 방식으로 Lazy Loading을 처리합니다.</p><h4 id="JavaScript로-Lazy-Loading-구현-예시"><a href="#JavaScript로-Lazy-Loading-구현-예시" class="headerlink" title="JavaScript로 Lazy Loading 구현 예시:"></a>JavaScript로 Lazy Loading 구현 예시:</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">data-src</span>=<span class="string">"image.jpg"</span> <span class="attr">alt</span>=<span class="string">"Lazy load example"</span> <span class="attr">class</span>=<span class="string">"lazy"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript">  <span class="comment">// Intersection Observer API 사용</span></span></span><br><span class="line"><span class="javascript">  <span class="keyword">const</span> images = <span class="built_in">document</span>.querySelectorAll(<span class="string">'img.lazy'</span>);</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">  <span class="keyword">const</span> observer = <span class="keyword">new</span> IntersectionObserver(<span class="function">(<span class="params">entries, observer</span>) =&gt;</span> &#123;</span></span><br><span class="line"><span class="javascript">    entries.forEach(<span class="function"><span class="params">entry</span> =&gt;</span> &#123;</span></span><br><span class="line"><span class="javascript">      <span class="keyword">if</span> (entry.isIntersecting) &#123;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">const</span> img = entry.target;</span></span><br><span class="line"><span class="javascript">        img.src = img.dataset.src;  <span class="comment">// 실제 이미지로 변경</span></span></span><br><span class="line"><span class="javascript">        img.classList.remove(<span class="string">'lazy'</span>);</span></span><br><span class="line"><span class="javascript">        observer.unobserve(img);  <span class="comment">// 더 이상 감지하지 않음</span></span></span><br><span class="line"><span class="undefined">      &#125;</span></span><br><span class="line"><span class="undefined">    &#125;);</span></span><br><span class="line"><span class="undefined">  &#125;);</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">  images.forEach(<span class="function"><span class="params">img</span> =&gt;</span> observer.observe(img));</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>이 코드에서는 이미지가 뷰포트에 들어올 때, <code>data-src</code>에 저장된 실제 이미지 URL을 <code>src</code> 속성에 할당하여 이미지를 로드합니다.</p><hr><h3 id="6-Lazy-Loading-적용-시-주의사항"><a href="#6-Lazy-Loading-적용-시-주의사항" class="headerlink" title="6. Lazy Loading 적용 시 주의사항"></a>6. <strong>Lazy Loading 적용 시 주의사항</strong></h3><ul><li><strong>리소스 순서</strong>: 중요한 콘텐츠가 포함된 이미지나 요소는 Lazy Loading을 적용하지 않거나 우선적으로 로드하도록 설정하는 것이 좋습니다. 예를 들어, 페이지 상단에 위치한 주요 배너 이미지나 아이콘 등은 즉시 로드되도록 설정해야 합니다.</li><li><strong>비동기 로딩에 따른 예외 처리</strong>: 일부 이미지나 비디오가 로드되지 않는 상황에 대비하여, <strong>placeholder</strong>나 <strong>error</strong> 상태를 처리할 수 있는 대체 콘텐츠를 제공해야 합니다.</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"placeholder.jpg"</span> <span class="attr">data-src</span>=<span class="string">"real-image.jpg"</span> <span class="attr">class</span>=<span class="string">"lazy"</span> <span class="attr">alt</span>=<span class="string">"Lazy loaded image"</span>&gt;</span></span><br></pre></td></tr></table></figure><hr><h3 id="결론"><a href="#결론" class="headerlink" title="결론"></a>결론</h3><p>Lazy Loading은 페이지 로딩 속도를 향상시키고, 사용자 경험을 개선하는 데 중요한 기술입니다. HTML5의 <code>loading=&quot;lazy&quot;</code> 속성은 Lazy Loading을 매우 쉽게 구현할 수 있게 해줍니다. 이를 통해 웹 페이지의 리소스를 필요한 시점에만 로드하여 초기 로딩 시간을 단축시키고, 네트워크 자원을 효율적으로 사용할 수 있습니다.</p><p>다만, 브라우저 호환성 문제나 SEO 측면에서 고려해야 할 사항도 있으므로, 이를 해결할 수 있는 방법을 함께 고민하면서 Lazy Loading을 적용하는 것이 중요합니다.</p><h4 id="Related-Posts"><a href="#Related-Posts" class="headerlink" title="Related Posts"></a>Related Posts</h4><ul><li><a href="/2019/08/07/HTML-table/" title="HTML 간단하게 표 만들기">HTML 간단하게 표 만들기</a></li><li><a href="/2018/08/29/HTML-Editor/" title="HTML 에디터 (jsFiddle,메모장)">HTML 에디터 (jsFiddle,메모장)</a></li><li><a href="/2019/08/07/HTML-buttonLink/" title="HTML-버튼에 링크 거는 방법">HTML-버튼에 링크 거는 방법</a></li><li><a href="/2021/10/25/HTML-comment/" title="HTML - 주석 태그 <!-- -->">HTML - 주석 태그 <!-- --></a></li><li><a href="/2018/08/30/HTML-imgLink/" title="HTML 이미지 링크거는 법">HTML 이미지 링크거는 법</a></li><li><a href="/2018/08/27/HTML-MailtoTag/" title="Mailto 태그">Mailto 태그</a></li><li><a href="/2024/01/04/HTML-enter/" title="HTML 줄바꿈 입력하기">HTML 줄바꿈 입력하기</a></li></ul><h4 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h4><ul><li><a href="https://chatgpt.com/" target="_blank" rel="noopener">https://chatgpt.com/</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;HTML-Lazy-Loading-정의와-활용법&quot;&gt;&lt;a href=&quot;#HTML-Lazy-Loading-정의와-활용법&quot; class=&quot;headerlink&quot; title=&quot;HTML Lazy Loading: 정의와 활용법&quot;&gt;&lt;/a&gt;HTML Lazy 
      
    
    </summary>
    
      <category term="Programming" scheme="https://dullyshin.github.io/categories/Programming/"/>
    
      <category term="HTML" scheme="https://dullyshin.github.io/categories/Programming/HTML/"/>
    
    
      <category term="Lazy Loading" scheme="https://dullyshin.github.io/tags/Lazy-Loading/"/>
    
      <category term="HTML Lazy Loading 정의" scheme="https://dullyshin.github.io/tags/HTML-Lazy-Loading-%EC%A0%95%EC%9D%98/"/>
    
      <category term="HTML Lazy Loading 활용법" scheme="https://dullyshin.github.io/tags/HTML-Lazy-Loading-%ED%99%9C%EC%9A%A9%EB%B2%95/"/>
    
  </entry>
  
  <entry>
    <title>웹 성능 최적화를 위한 HTML 기법</title>
    <link href="https://dullyshin.github.io/2024/11/12/HTML-OptimizingWebPerformance/"/>
    <id>https://dullyshin.github.io/2024/11/12/HTML-OptimizingWebPerformance/</id>
    <published>2024-11-12T04:34:30.000Z</published>
    <updated>2024-11-12T04:44:31.326Z</updated>
    
    <content type="html"><![CDATA[<p>웹 성능 최적화는 현대 웹 개발에서 매우 중요한 요소입니다. 페이지 로딩 속도는 사용자 경험에 큰 영향을 미치며, 검색엔진 최적화(SEO)에도 중요한 역할을 합니다. 특히, HTML은 웹 페이지의 구조를 정의하는 핵심적인 역할을 하므로, HTML을 최적화하는 것이 웹 성능을 향상시키는 데 중요한 부분입니다. 이번 블로그 글에서는 <strong>웹 성능 최적화를 위한 HTML 기법</strong>을 다루고, 페이지 로딩 속도를 개선하고 더 나은 사용자 경험을 제공하는 방법을 알아보겠습니다.</p><hr><h2 id="웹-성능-최적화를-위한-HTML-기법"><a href="#웹-성능-최적화를-위한-HTML-기법" class="headerlink" title="웹 성능 최적화를 위한 HTML 기법"></a>웹 성능 최적화를 위한 HTML 기법</h2><p>웹 성능 최적화는 페이지 로딩 시간을 단축시키고, 사용자에게 더 빠르고 원활한 경험을 제공하기 위해 필요한 작업입니다. HTML은 웹 페이지의 구조를 정의하는 기술로, 이 구조를 최적화하는 것만으로도 웹 성능에 큰 차이를 만들 수 있습니다. 여기서는 HTML의 작성 방식이나 HTML 태그를 활용하여 성능을 개선할 수 있는 몇 가지 기법을 소개합니다.</p><h3 id="1-불필요한-HTML-요소-제거하기"><a href="#1-불필요한-HTML-요소-제거하기" class="headerlink" title="1. 불필요한 HTML 요소 제거하기"></a>1. <strong>불필요한 HTML 요소 제거하기</strong></h3><p>웹 페이지의 성능을 최적화하는 첫 번째 단계는 <strong>불필요한 HTML 요소를 제거하는 것</strong>입니다. 필요하지 않은 태그나 중복된 코드를 제거하면 페이지 로딩 속도를 빠르게 할 수 있습니다. 예를 들어, 사용하지 않는 스타일시트나 스크립트, 불필요한 <code>&lt;div&gt;</code> 태그 등을 삭제하면 페이지가 더 가벼워집니다.</p><h4 id="최적화-팁"><a href="#최적화-팁" class="headerlink" title="최적화 팁"></a>최적화 팁</h4><ul><li>페이지에 실제로 필요하지 않은 태그는 제거합니다.</li><li>중복된 클래스나 ID 속성을 사용하지 않도록 주의합니다.</li><li>HTML 문서에 사용되지 않는 스타일이나 스크립트는 외부 파일로 분리하거나 제거합니다.</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 불필요한 div 요소 제거 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"wrapper"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"content"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>컨텐츠<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 최적화된 코드 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>컨텐츠<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="2-문서-구조-간소화하기-Semantic-HTML-사용"><a href="#2-문서-구조-간소화하기-Semantic-HTML-사용" class="headerlink" title="2. 문서 구조 간소화하기 (Semantic HTML 사용)"></a>2. <strong>문서 구조 간소화하기 (Semantic HTML 사용)</strong></h3><p>HTML5에서 도입된 <strong>시맨틱 HTML(Semantic HTML)</strong>은 검색엔진 최적화와 접근성 개선뿐만 아니라 성능에도 도움을 줍니다. 시맨틱 HTML을 사용하면 불필요한 태그를 줄이고, 문서의 구조를 간단하고 명확하게 유지할 수 있습니다.</p><h4 id="최적화-팁-1"><a href="#최적화-팁-1" class="headerlink" title="최적화 팁"></a>최적화 팁</h4><ul><li><code>&lt;header&gt;</code>, <code>&lt;nav&gt;</code>, <code>&lt;section&gt;</code>, <code>&lt;article&gt;</code>, <code>&lt;footer&gt;</code> 등 시맨틱 태그를 사용하여 HTML 구조를 명확하게 정의합니다.</li><li>콘텐츠의 의미를 정확하게 반영하는 태그를 사용하면 브라우저가 더 효율적으로 렌더링할 수 있습니다.</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">header</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h1</span>&gt;</span>웹 성능 최적화<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">header</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">nav</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>홈<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>서비스<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">nav</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">main</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">article</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>HTML 기법<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>웹 성능 최적화를 위한 HTML 기법을 소개합니다.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">article</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">main</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">footer</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>&amp;copy; 2024<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">footer</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="3-이미지-최적화"><a href="#3-이미지-최적화" class="headerlink" title="3. 이미지 최적화"></a>3. <strong>이미지 최적화</strong></h3><p>이미지는 웹 페이지에서 중요한 요소이지만, 고해상도의 큰 이미지 파일은 페이지 로딩 속도를 크게 저하시킬 수 있습니다. HTML에서 이미지를 삽입할 때, 이미지의 크기와 형식을 최적화하는 것이 중요합니다.</p><h4 id="최적화-팁-2"><a href="#최적화-팁-2" class="headerlink" title="최적화 팁"></a>최적화 팁</h4><ul><li><strong>이미지 파일 크기 줄이기</strong>: 이미지의 해상도나 품질을 적절하게 조정하여 파일 크기를 줄입니다. 필요 이상으로 고해상도의 이미지를 사용하지 않도록 합니다.</li><li><strong>웹 최적화 포맷 사용</strong>: JPEG, PNG, WebP 등 최적화된 이미지 포맷을 사용합니다. WebP는 JPEG보다 더 효율적인 압축을 제공합니다.</li><li><strong><code>&lt;picture&gt;</code> 태그 사용</strong>: 다양한 해상도와 화면 크기에 맞춰 다른 이미지를 제공할 수 있습니다.</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 최적화된 이미지 사용 예 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">picture</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">source</span> <span class="attr">srcset</span>=<span class="string">"image-small.webp"</span> <span class="attr">media</span>=<span class="string">"(max-width: 600px)"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">source</span> <span class="attr">srcset</span>=<span class="string">"image-large.webp"</span> <span class="attr">media</span>=<span class="string">"(min-width: 601px)"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"image-large.jpg"</span> <span class="attr">alt</span>=<span class="string">"웹 성능 최적화"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">picture</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="4-외부-리소스-비동기-로딩-Async-amp-Defer"><a href="#4-외부-리소스-비동기-로딩-Async-amp-Defer" class="headerlink" title="4. 외부 리소스 비동기 로딩 (Async &amp; Defer)"></a>4. <strong>외부 리소스 비동기 로딩 (Async &amp; Defer)</strong></h3><p>자바스크립트나 CSS 파일이 로드되는 방식은 페이지 로딩 속도에 큰 영향을 미칩니다. 기본적으로 JavaScript 파일은 페이지의 다른 요소들이 로드되기 전에 로드되어 실행되므로, 페이지 렌더링을 지연시킬 수 있습니다. 이를 해결하려면 <strong><code>async</code></strong> 또는 <strong><code>defer</code></strong> 속성을 사용하여 비동기적으로 로드하도록 할 수 있습니다.</p><h4 id="최적화-팁-3"><a href="#최적화-팁-3" class="headerlink" title="최적화 팁"></a>최적화 팁</h4><ul><li><strong><code>async</code></strong>: 스크립트가 비동기적으로 로드되어 페이지 렌더링과 동시에 실행됩니다.</li><li><strong><code>defer</code></strong>: 페이지가 모두 로드된 후 스크립트를 실행하도록 지연시킵니다.</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 비동기적으로 JavaScript 로드 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"script.js"</span> <span class="attr">async</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 페이지 렌더링 후 스크립트 실행 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"script.js"</span> <span class="attr">defer</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="5-CSS-및-JavaScript-파일-압축-및-병합"><a href="#5-CSS-및-JavaScript-파일-압축-및-병합" class="headerlink" title="5. CSS 및 JavaScript 파일 압축 및 병합"></a>5. <strong>CSS 및 JavaScript 파일 압축 및 병합</strong></h3><p>HTML 문서에서 CSS와 JavaScript 파일이 여러 개로 나누어져 있으면, 각 파일을 로드할 때마다 네트워크 요청이 발생하여 성능에 악영향을 미칩니다. CSS와 JavaScript 파일을 압축하고 병합하여 네트워크 요청을 줄이는 것이 성능 최적화에 큰 도움이 됩니다.</p><h4 id="최적화-팁-4"><a href="#최적화-팁-4" class="headerlink" title="최적화 팁"></a>최적화 팁</h4><ul><li><strong>파일 압축</strong>: <code>.css</code>와 <code>.js</code> 파일을 압축하여 불필요한 공백과 주석을 제거합니다.</li><li><strong>파일 병합</strong>: 여러 개의 CSS 또는 JavaScript 파일을 하나로 병합하여 HTTP 요청 횟수를 줄입니다.</li><li><strong>CDN(Content Delivery Network) 사용</strong>: 자주 사용되는 라이브러리나 프레임워크는 CDN을 통해 로드하면, 전 세계적으로 빠른 응답 속도를 제공합니다.</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 압축된 CSS 및 JavaScript 파일 로드 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"style.min.css"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"script.min.js"</span> <span class="attr">defer</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="6-서버-사이드-캐싱-활용하기"><a href="#6-서버-사이드-캐싱-활용하기" class="headerlink" title="6. 서버 사이드 캐싱 활용하기"></a>6. <strong>서버 사이드 캐싱 활용하기</strong></h3><p>웹 페이지를 처음 로드할 때마다 모든 리소스를 새로 요청하는 것보다, <strong>서버 사이드 캐싱</strong>을 활용하여 이미 로드한 리소스를 다시 사용할 수 있도록 하는 것이 성능 최적화에 도움이 됩니다. HTML 문서 자체를 캐싱할 수는 없지만, CSS, JavaScript, 이미지 등 자주 변경되지 않는 리소스를 캐싱할 수 있습니다.</p><h4 id="최적화-팁-5"><a href="#최적화-팁-5" class="headerlink" title="최적화 팁"></a>최적화 팁</h4><ul><li><strong>Cache-Control 헤더</strong>: 서버에서 캐싱 정책을 정의하는 헤더를 설정하여 리소스가 일정 기간 동안 캐시되도록 합니다.</li><li><strong>ETag 사용</strong>: 서버는 리소스가 변경되었는지 확인하는 데 ETag 헤더를 사용할 수 있습니다.</li></ul><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 예시: 서버 캐싱 설정 (Apache)</span></span><br><span class="line"><span class="attribute">Cache</span>-Control: public, max-age=31536000</span><br></pre></td></tr></table></figure><h3 id="7-폰트-최적화"><a href="#7-폰트-최적화" class="headerlink" title="7. 폰트 최적화"></a>7. <strong>폰트 최적화</strong></h3><p>웹 폰트는 페이지 로딩에 영향을 미칠 수 있으므로, 폰트를 최적화하는 것도 성능에 중요합니다. 웹 폰트를 로드할 때는 필요한 문자셋만 로드하고, 폰트 파일 크기를 최소화하는 것이 좋습니다.</p><h4 id="최적화-팁-6"><a href="#최적화-팁-6" class="headerlink" title="최적화 팁"></a>최적화 팁</h4><ul><li><strong><code>font-display</code> 속성 사용</strong>: <code>font-display: swap;</code>을 사용하여 폰트가 로드되지 않았을 때 기본 글꼴을 잠시 보여주고, 폰트가 로드된 후에 적용하도록 합니다.</li><li><strong>WOFF2 포맷 사용</strong>: WOFF2 포맷은 웹 폰트에서 가장 효율적인 포맷으로, 더 작은 파일 크기를 제공합니다.</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&amp;display=swap"</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="8-HTML5-오프라인-기능-활용"><a href="#8-HTML5-오프라인-기능-활용" class="headerlink" title="8. HTML5 오프라인 기능 활용"></a>8. <strong>HTML5 오프라인 기능 활용</strong></h3><p>HTML5는 오프라인에서 웹 애플리케이션을 실행할 수 있는 기능을 제공합니다. 이를 활용하면 사용자가 인터넷에 연결되지 않아도 페이지를 사용할 수 있게 할 수 있습니다. 이를 통해 페이지 로딩 속도를 개선하고, 사용자 경험을 향상시킬 수 있습니다.</p><h4 id="최적화-팁-7"><a href="#최적화-팁-7" class="headerlink" title="최적화 팁"></a>최적화 팁</h4><ul><li><strong>Service Worker 사용</strong>: 서비스 워커를 이용해 네트워크 요청을 제어하고, 오프라인에서 사용할 수 있도록 리소스를 미리 캐시합니다.</li><li><strong>AppCache</strong>: HTML5의 앱 캐시를 사용하여 일부 리소스를 미리 로컬에 저장해</li></ul><p>두고, 오프라인에서 페이지를 제공할 수 있습니다.</p><hr><h2 id="결론"><a href="#결론" class="headerlink" title="결론"></a>결론</h2><p>웹 성능 최적화는 웹 페이지 로딩 시간을 줄이고, 사용자 경험을 향상시키는 데 필수적입니다. HTML 기법을 적절히 활용하여 웹 페이지 구조를 간소화하고, 이미지와 폰트 파일을 최적화하며, 비동기 로딩 기법을 적용하는 등의 방법을 통해 성능을 개선할 수 있습니다. 웹 페이지의 성능을 최적화하려면 지속적인 관리와 모니터링이 필요하지만, 기본적인 HTML 최적화만으로도 상당한 개선을 이룰 수 있습니다.</p><p>웹 성능 최적화는 단순히 페이지 로딩 속도를 빠르게 만드는 것만이 아니라, 사용자 경험을 향상시키고 검색엔진 최적화(SEO)에도 긍정적인 영향을 미칩니다. 이 글에서 소개한 HTML 최적화 기법들을 통해 더 나은 웹 성능을 구현해보세요.</p><h4 id="Related-Posts"><a href="#Related-Posts" class="headerlink" title="Related Posts"></a>Related Posts</h4><ul><li><a href="/2019/08/07/HTML-table/" title="HTML 간단하게 표 만들기">HTML 간단하게 표 만들기</a></li><li><a href="/2018/08/29/HTML-Editor/" title="HTML 에디터 (jsFiddle,메모장)">HTML 에디터 (jsFiddle,메모장)</a></li><li><a href="/2019/08/07/HTML-buttonLink/" title="HTML-버튼에 링크 거는 방법">HTML-버튼에 링크 거는 방법</a></li><li><a href="/2021/10/25/HTML-comment/" title="HTML - 주석 태그 <!-- -->">HTML - 주석 태그 <!-- --></a></li><li><a href="/2018/08/30/HTML-imgLink/" title="HTML 이미지 링크거는 법">HTML 이미지 링크거는 법</a></li><li><a href="/2018/08/27/HTML-MailtoTag/" title="Mailto 태그">Mailto 태그</a></li><li><a href="/2024/01/04/HTML-enter/" title="HTML 줄바꿈 입력하기">HTML 줄바꿈 입력하기</a></li></ul><h4 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h4><ul><li><a href="https://chatgpt.com/" target="_blank" rel="noopener">https://chatgpt.com/</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;웹 성능 최적화는 현대 웹 개발에서 매우 중요한 요소입니다. 페이지 로딩 속도는 사용자 경험에 큰 영향을 미치며, 검색엔진 최적화(SEO)에도 중요한 역할을 합니다. 특히, HTML은 웹 페이지의 구조를 정의하는 핵심적인 역할을 하므로, HTML
      
    
    </summary>
    
      <category term="Programming" scheme="https://dullyshin.github.io/categories/Programming/"/>
    
      <category term="HTML" scheme="https://dullyshin.github.io/categories/Programming/HTML/"/>
    
    
      <category term="웹 성능 최적화를 위한 HTML 기법" scheme="https://dullyshin.github.io/tags/%EC%9B%B9-%EC%84%B1%EB%8A%A5-%EC%B5%9C%EC%A0%81%ED%99%94%EB%A5%BC-%EC%9C%84%ED%95%9C-HTML-%EA%B8%B0%EB%B2%95/"/>
    
      <category term="불필요한 HTML 요소 제거하기" scheme="https://dullyshin.github.io/tags/%EB%B6%88%ED%95%84%EC%9A%94%ED%95%9C-HTML-%EC%9A%94%EC%86%8C-%EC%A0%9C%EA%B1%B0%ED%95%98%EA%B8%B0/"/>
    
      <category term="Semantic HTML 사용" scheme="https://dullyshin.github.io/tags/Semantic-HTML-%EC%82%AC%EC%9A%A9/"/>
    
      <category term="이미지 최적화" scheme="https://dullyshin.github.io/tags/%EC%9D%B4%EB%AF%B8%EC%A7%80-%EC%B5%9C%EC%A0%81%ED%99%94/"/>
    
  </entry>
  
  <entry>
    <title>HTML과 CSS의 협업 레이아웃 구성하기</title>
    <link href="https://dullyshin.github.io/2024/11/12/HTML-CSS/"/>
    <id>https://dullyshin.github.io/2024/11/12/HTML-CSS/</id>
    <published>2024-11-12T04:29:15.000Z</published>
    <updated>2024-11-12T04:31:41.528Z</updated>
    
    <content type="html"><![CDATA[<p>HTML과 CSS는 웹 개발에서 핵심적인 역할을 하는 두 가지 기술입니다. HTML은 웹 페이지의 구조를 정의하고, CSS는 그 구조의 스타일과 레이아웃을 담당합니다. 이 두 기술은 서로 긴밀하게 협력하여 시각적으로 매력적이고, 반응형이며, 사용자 친화적인 웹 페이지를 만들 수 있습니다. 이번 블로그 글에서는 <strong>HTML과 CSS의 협업을 통해 레이아웃을 구성하는 방법</strong>에 대해 알아보겠습니다.</p><hr><h2 id="HTML과-CSS의-협업-레이아웃-구성하기"><a href="#HTML과-CSS의-협업-레이아웃-구성하기" class="headerlink" title="HTML과 CSS의 협업: 레이아웃 구성하기"></a>HTML과 CSS의 협업: 레이아웃 구성하기</h2><p>웹 페이지의 레이아웃을 만들 때 HTML과 CSS의 협업은 필수적입니다. HTML은 페이지의 뼈대와 콘텐츠를 정의하고, CSS는 그 콘텐츠의 시각적 배치를 담당하여 사용자에게 직관적이고 미려한 페이지를 제공합니다. 이 글에서는 HTML과 CSS를 어떻게 협업시켜 웹 페이지의 레이아웃을 구성할 수 있는지, 실용적인 방법과 함께 설명하겠습니다.</p><h3 id="1-HTML로-레이아웃의-구조-만들기"><a href="#1-HTML로-레이아웃의-구조-만들기" class="headerlink" title="1. HTML로 레이아웃의 구조 만들기"></a>1. <strong>HTML로 레이아웃의 구조 만들기</strong></h3><p>웹 페이지의 레이아웃을 만들기 위한 첫 번째 단계는 HTML로 구조를 정의하는 것입니다. HTML은 페이지에 포함될 다양한 요소들을 배치하는 역할을 합니다. 주로 사용되는 HTML 요소는 다음과 같습니다.</p><ul><li><strong><code>&lt;header&gt;</code></strong>: 웹 페이지의 상단, 로고나 네비게이션 등을 배치하는 영역.</li><li><strong><code>&lt;nav&gt;</code></strong>: 내비게이션 메뉴를 정의하는 영역.</li><li><strong><code>&lt;main&gt;</code></strong>: 페이지의 주요 콘텐츠가 위치하는 영역.</li><li><strong><code>&lt;section&gt;</code></strong>: 콘텐츠를 섹션별로 구분하는 역할.</li><li><strong><code>&lt;article&gt;</code></strong>: 독립적인 콘텐츠나 기사, 블로그 포스트 등을 나타내는 요소.</li><li><strong><code>&lt;aside&gt;</code></strong>: 페이지의 사이드바나 부가적인 콘텐츠를 배치하는 영역.</li><li><strong><code>&lt;footer&gt;</code></strong>: 웹 페이지의 하단, 저작권 정보나 연락처 등을 포함하는 영역.</li></ul><h4 id="기본-HTML-구조-예시"><a href="#기본-HTML-구조-예시" class="headerlink" title="기본 HTML 구조 예시:"></a>기본 HTML 구조 예시:</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"ko"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>HTML과 CSS 협업: 레이아웃 구성하기<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">header</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span>웹 페이지 제목<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">nav</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>홈<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>서비스<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>연락처<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">nav</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">header</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">main</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">section</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">h2</span>&gt;</span>주요 콘텐츠 섹션<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">p</span>&gt;</span>이곳은 페이지의 주요 콘텐츠가 위치하는 곳입니다.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">aside</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">h3</span>&gt;</span>사이드바<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">p</span>&gt;</span>부가적인 콘텐츠나 광고가 들어갈 수 있습니다.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">aside</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">main</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">footer</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>&amp;copy; 2024 웹사이트 이름<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">footer</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>이 HTML 구조에서 페이지의 주요 콘텐츠는 <code>&lt;main&gt;</code> 안에 배치되고, 사이드바는 <code>&lt;aside&gt;</code> 태그로 정의되었습니다. <code>&lt;header&gt;</code>와 <code>&lt;footer&gt;</code>는 각각 상단과 하단에 배치되어 페이지의 다른 중요한 부분들을 구성합니다.</p><h3 id="2-CSS로-레이아웃-디자인하기"><a href="#2-CSS로-레이아웃-디자인하기" class="headerlink" title="2. CSS로 레이아웃 디자인하기"></a>2. <strong>CSS로 레이아웃 디자인하기</strong></h3><p>이제 HTML로 기본 구조를 설정한 후, CSS를 사용하여 해당 구조의 시각적인 배치를 담당할 차례입니다. CSS는 페이지의 레이아웃을 설정하고, 각 요소가 화면에 어떻게 표시될지 정의합니다. 가장 기본적인 레이아웃 기법 중 하나는 <strong>플로트(Floats)</strong>, <strong>플렉스박스(Flexbox)</strong>, <strong>그리드 레이아웃(Grid Layout)</strong>을 사용하는 것입니다.</p><h4 id="2-1-플렉스박스를-이용한-레이아웃-구성"><a href="#2-1-플렉스박스를-이용한-레이아웃-구성" class="headerlink" title="2.1. 플렉스박스를 이용한 레이아웃 구성"></a><strong>2.1. 플렉스박스를 이용한 레이아웃 구성</strong></h4><p><strong>플렉스박스(Flexbox)</strong>는 레이아웃을 만들 때 매우 유용한 CSS 기술입니다. Flexbox는 요소들을 가로 또는 세로로 배치하고, 공간을 효율적으로 분배하는 데 도움을 줍니다.</p><h5 id="플렉스박스-레이아웃-예시"><a href="#플렉스박스-레이아웃-예시" class="headerlink" title="플렉스박스 레이아웃 예시"></a>플렉스박스 레이아웃 예시</h5><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">    <span class="attribute">font-family</span>: Arial, sans-serif;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">header</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#333</span>;</span><br><span class="line">    <span class="attribute">color</span>: white;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">nav</span> <span class="selector-tag">ul</span> &#123;</span><br><span class="line">    <span class="attribute">list-style</span>: none;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">nav</span> <span class="selector-tag">ul</span> <span class="selector-tag">li</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: inline;</span><br><span class="line">    <span class="attribute">margin-right</span>: <span class="number">20px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">main</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: flex;</span><br><span class="line">    <span class="attribute">justify-content</span>: space-between;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">20px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">section</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">70%</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">aside</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">25%</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#f4f4f4</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">15px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">footer</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#333</span>;</span><br><span class="line">    <span class="attribute">color</span>: white;</span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">position</span>: fixed;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">bottom</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><strong><code>display: flex;</code></strong>: <code>main</code> 요소에 플렉스박스를 적용하여 자식 요소들이 가로로 나열되도록 설정합니다.</li><li><strong><code>justify-content: space-between;</code></strong>: 자식 요소들 사이에 여백을 고르게 분배합니다.</li><li><strong><code>section</code>과 <code>aside</code></strong>: <code>section</code>은 70%, <code>aside</code>는 25%의 너비를 가지도록 설정하여 두 영역이 나란히 배치됩니다.</li></ul><h4 id="2-2-그리드-레이아웃을-이용한-레이아웃-구성"><a href="#2-2-그리드-레이아웃을-이용한-레이아웃-구성" class="headerlink" title="2.2. 그리드 레이아웃을 이용한 레이아웃 구성"></a><strong>2.2. 그리드 레이아웃을 이용한 레이아웃 구성</strong></h4><p><strong>CSS Grid Layout</strong>은 복잡한 레이아웃을 만들 때 유용한 기술로, 페이지의 전체 레이아웃을 그리드 시스템으로 구성할 수 있습니다.</p><h5 id="그리드-레이아웃-예시"><a href="#그리드-레이아웃-예시" class="headerlink" title="그리드 레이아웃 예시"></a>그리드 레이아웃 예시</h5><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">    <span class="attribute">font-family</span>: Arial, sans-serif;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">header</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#333</span>;</span><br><span class="line">    <span class="attribute">color</span>: white;</span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">20px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">nav</span> <span class="selector-tag">ul</span> &#123;</span><br><span class="line">    <span class="attribute">list-style</span>: none;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">display</span>: flex;</span><br><span class="line">    <span class="attribute">justify-content</span>: center;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">nav</span> <span class="selector-tag">ul</span> <span class="selector-tag">li</span> &#123;</span><br><span class="line">    <span class="attribute">margin-right</span>: <span class="number">20px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">main</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: grid;</span><br><span class="line">    <span class="attribute">grid-template-columns</span>: <span class="number">3</span>fr <span class="number">1</span>fr;</span><br><span class="line">    <span class="attribute">gap</span>: <span class="number">20px</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">20px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">section</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#fff</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">20px</span>;</span><br><span class="line">    <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">4px</span> <span class="number">8px</span> <span class="built_in">rgba</span>(0, 0, 0, 0.1);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">aside</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#f4f4f4</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">15px</span>;</span><br><span class="line">    <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">4px</span> <span class="number">8px</span> <span class="built_in">rgba</span>(0, 0, 0, 0.1);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">footer</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#333</span>;</span><br><span class="line">    <span class="attribute">color</span>: white;</span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">position</span>: fixed;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">bottom</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><strong><code>display: grid;</code></strong>: <code>main</code> 요소를 그리드로 설정합니다.</li><li><strong><code>grid-template-columns: 3fr 1fr;</code></strong>: 그리드에서 두 개의 열을 정의합니다. 첫 번째 열은 전체 공간의 75%(<code>3fr</code>), 두 번째 열은 25%(<code>1fr</code>)를 차지합니다.</li><li><strong><code>gap: 20px;</code></strong>: 그리드 항목들 사이에 20px의 간격을 설정합니다.</li></ul><h3 id="3-반응형-웹-디자인-Responsive-Web-Design"><a href="#3-반응형-웹-디자인-Responsive-Web-Design" class="headerlink" title="3. 반응형 웹 디자인 (Responsive Web Design)"></a>3. <strong>반응형 웹 디자인 (Responsive Web Design)</strong></h3><p>현대의 웹 디자인에서 가장 중요한 요소 중 하나는 바로 <strong>반응형 디자인</strong>입니다. 반응형 디자인은 웹 페이지가 다양한 화면 크기와 장치에 맞춰 자동으로 레이아웃을 조정하는 방식입니다. CSS에서는 <strong>미디어 쿼리(Media Queries)</strong>를 사용하여 특정 화면 크기에서 다른 스타일을 적용할 수 있습니다.</p><h5 id="반응형-웹-디자인-예시"><a href="#반응형-웹-디자인-예시" class="headerlink" title="반응형 웹 디자인 예시"></a>반응형 웹 디자인 예시</h5><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">@<span class="keyword">media</span> (max-width: <span class="number">768px</span>) &#123;</span><br><span class="line">    <span class="selector-tag">main</span> &#123;</span><br><span class="line">        <span class="attribute">display</span>: block;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="selector-tag">section</span> &#123;</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">        <span class="attribute">margin-bottom</span>: <span class="number">20px</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="selector-tag">aside</span> &#123;</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><strong><code>@media (max-width: 768px)</code></strong>: 화면 너비가 768px 이하일 때, <code>main</code>을 블록 요소로 바꾸고 <code>section</code>과 <code>aside</code>의 너비를 100%로 설정하여 모바일 화면에서 콘텐츠가 세로로 표시되도록 합니다.</li></ul><h3 id="4-결론"><a href="#4-결론" class="headerlink" title="4. 결론"></a>4. <strong>결론</strong></h3><p>HTML과 CSS의 협업은 웹 페이지를 디자인하는 데 있어서 매우 중요한 역할을 합니다. HTML은 페이지의 구조를 정의하고, CSS는 그 구조에 스타일을 입혀 시각적인 레이아웃을 구성합니다. 플렉스박스와 그리드 레이아웃을 사용하면 복잡한 레이아웃도 손쉽게 구현할 수 있으며</p><p>, 미디어 쿼리를 사용하여 반응형 웹 디자인을 적용할 수 있습니다.</p><p>이제 여러분도 HTML과 CSS를 통해 강력하고 유연한 웹 페이지 레이아웃을 만들 수 있을 것입니다. 웹 개발에서 중요한 기본기를 다지고, HTML과 CSS의 협업을 잘 활용해보세요!</p><hr><p>이렇게 HTML과 CSS의 협업을 통해 웹 페이지 레이아웃을 구성하는 방법에 대해 다루었습니다. 레이아웃을 효율적으로 구현하려면 HTML로 구조를 만들고, CSS로 스타일을 적용하는 과정을 이해하고 연습하는 것이 중요합니다.</p><h4 id="Related-Posts"><a href="#Related-Posts" class="headerlink" title="Related Posts"></a>Related Posts</h4><ul><li><a href="/2024/11/12/HTML-basic-grammer/" title="HTML의 기본문법 웹 페이지를 만드는 첫걸음">HTML의 기본문법 웹 페이지를 만드는 첫걸음</a></li><li><a href="/2019/08/07/HTML-table/" title="HTML 간단하게 표 만들기">HTML 간단하게 표 만들기</a></li><li><a href="/2018/08/29/HTML-Editor/" title="HTML 에디터 (jsFiddle,메모장)">HTML 에디터 (jsFiddle,메모장)</a></li><li><a href="/2019/08/07/HTML-buttonLink/" title="HTML-버튼에 링크 거는 방법">HTML-버튼에 링크 거는 방법</a></li><li><a href="/2021/10/25/HTML-comment/" title="HTML - 주석 태그 <!-- -->">HTML - 주석 태그 <!-- --></a></li><li><a href="/2018/08/30/HTML-imgLink/" title="HTML 이미지 링크거는 법">HTML 이미지 링크거는 법</a></li><li><a href="/2018/08/27/HTML-MailtoTag/" title="Mailto 태그">Mailto 태그</a></li><li><a href="/2024/01/04/HTML-enter/" title="HTML 줄바꿈 입력하기">HTML 줄바꿈 입력하기</a></li></ul><h4 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h4><ul><li><a href="https://chatgpt.com/" target="_blank" rel="noopener">https://chatgpt.com/</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;HTML과 CSS는 웹 개발에서 핵심적인 역할을 하는 두 가지 기술입니다. HTML은 웹 페이지의 구조를 정의하고, CSS는 그 구조의 스타일과 레이아웃을 담당합니다. 이 두 기술은 서로 긴밀하게 협력하여 시각적으로 매력적이고, 반응형이며, 사용
      
    
    </summary>
    
      <category term="Programming" scheme="https://dullyshin.github.io/categories/Programming/"/>
    
      <category term="HTML" scheme="https://dullyshin.github.io/categories/Programming/HTML/"/>
    
    
      <category term="HTML과 CSS의 협업 레이아웃 구성하기" scheme="https://dullyshin.github.io/tags/HTML%EA%B3%BC-CSS%EC%9D%98-%ED%98%91%EC%97%85-%EB%A0%88%EC%9D%B4%EC%95%84%EC%9B%83-%EA%B5%AC%EC%84%B1%ED%95%98%EA%B8%B0/"/>
    
  </entry>
  
  <entry>
    <title>SEO 최적화를 위한 HTML 태그 활용법</title>
    <link href="https://dullyshin.github.io/2024/11/12/HTML-SEOOptimization/"/>
    <id>https://dullyshin.github.io/2024/11/12/HTML-SEOOptimization/</id>
    <published>2024-11-12T03:02:53.000Z</published>
    <updated>2024-11-12T03:07:19.062Z</updated>
    
    <content type="html"><![CDATA[<p>SEO(검색엔진 최적화)는 웹사이트가 검색엔진 결과 페이지에서 더 높은 순위를 얻을 수 있도록 돕는 전략입니다. HTML 태그는 SEO 최적화에 중요한 역할을 하며, 검색엔진이 페이지 내용을 이해하고 평가하는 데 도움을 줍니다. 이번 블로그 글에서는 SEO 최적화를 위한 HTML 태그 활용법을 구체적으로 알아보겠습니다.</p><hr><h2 id="SEO-최적화를-위한-HTML-태그-활용법"><a href="#SEO-최적화를-위한-HTML-태그-활용법" class="headerlink" title="SEO 최적화를 위한 HTML 태그 활용법"></a>SEO 최적화를 위한 HTML 태그 활용법</h2><p>SEO는 웹사이트가 검색엔진 결과에서 상위에 노출되기 위해 필요한 여러 전략을 포함합니다. 그 중에서도 HTML 태그는 검색엔진이 웹페이지의 콘텐츠를 올바르게 해석하고, 관련성 높은 정보를 제공하는 데 중요한 역할을 합니다. 이번 글에서는 SEO 최적화를 위해 필수적으로 사용해야 하는 HTML 태그들을 소개하고, 이를 어떻게 활용할 수 있는지 살펴보겠습니다.</p><h3 id="1-lt-title-gt-태그"><a href="#1-lt-title-gt-태그" class="headerlink" title="1. &lt;title&gt; 태그"></a>1. <strong><code>&lt;title&gt;</code> 태그</strong></h3><p><strong><code>&lt;title&gt;</code></strong> 태그는 웹 페이지의 제목을 정의하며, 검색엔진 결과 페이지에서 표시되는 중요한 요소입니다. 페이지의 핵심 키워드를 제목에 포함시켜야 합니다.</p><ul><li><strong>중요성</strong>: 검색엔진은 <code>&lt;title&gt;</code> 태그를 통해 해당 페이지의 주제를 파악합니다. 또한 사용자가 검색 결과에서 이 제목을 보고 클릭할지를 결정하는 중요한 요소이기도 합니다.</li><li><strong>최적화 팁</strong>: 제목은 50-60자 이내로 작성하고, 페이지의 핵심 키워드를 포함시켜야 합니다. 너무 길거나 너무 짧으면 클릭률에 부정적인 영향을 미칠 수 있습니다.</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>SEO 최적화를 위한 HTML 태그 활용법 | 웹사이트 최적화 팁<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="2-lt-meta-description-gt-태그"><a href="#2-lt-meta-description-gt-태그" class="headerlink" title="2. &lt;meta description&gt; 태그"></a>2. <strong><code>&lt;meta description&gt;</code> 태그</strong></h3><p><strong><code>&lt;meta name=&quot;description&quot;&gt;</code></strong> 태그는 페이지의 내용을 간단히 설명하는 텍스트입니다. 이 설명은 검색엔진 결과에서 페이지 제목 아래에 표시됩니다.</p><ul><li><strong>중요성</strong>: <code>meta description</code>은 직접적으로 SEO 순위에 영향을 미치지는 않지만, 클릭률(CTR)에 영향을 미칩니다. 매력적인 설명은 사용자가 페이지를 클릭하도록 유도할 수 있습니다.</li><li><strong>최적화 팁</strong>: 설명은 150-160자 이내로 작성하며, 핵심 키워드를 포함시킵니다. 문장이 자연스럽고 유용한 정보를 제공해야 합니다.</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"description"</span> <span class="attr">content</span>=<span class="string">"SEO 최적화를 위한 HTML 태그 활용법을 배우고, 검색엔진에서 상위 순위를 얻는 방법을 알아보세요."</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="3-헤딩-태그-lt-h1-gt-lt-h2-gt-lt-h3-gt-등"><a href="#3-헤딩-태그-lt-h1-gt-lt-h2-gt-lt-h3-gt-등" class="headerlink" title="3. 헤딩 태그 (&lt;h1&gt;, &lt;h2&gt;, &lt;h3&gt; 등)"></a>3. <strong>헤딩 태그 (<code>&lt;h1&gt;</code>, <code>&lt;h2&gt;</code>, <code>&lt;h3&gt;</code> 등)</strong></h3><p><strong>헤딩 태그</strong>는 페이지의 구조를 정의하며, 검색엔진이 콘텐츠의 중요도를 파악하는 데 도움을 줍니다. <code>&lt;h1&gt;</code>은 페이지의 가장 중요한 제목을 정의하고, 그 이하의 헤딩은 콘텐츠의 하위 섹션을 구분합니다.</p><ul><li><strong>중요성</strong>: <code>&lt;h1&gt;</code> 태그는 페이지에서 가장 중요한 제목을 나타내므로, 페이지의 핵심 키워드를 포함해야 합니다. 그 외의 <code>&lt;h2&gt;</code>, <code>&lt;h3&gt;</code> 등의 태그는 콘텐츠의 구조를 명확히 하고, 검색엔진이 페이지의 정보를 잘 이해하도록 돕습니다.</li><li><strong>최적화 팁</strong>: 각 페이지에는 하나의 <code>&lt;h1&gt;</code>만 사용하고, <code>&lt;h2&gt;</code>와 <code>&lt;h3&gt;</code>로 콘텐츠를 계층적으로 나누어 검색엔진과 사용자 모두가 쉽게 이해할 수 있도록 합니다.</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>SEO 최적화를 위한 HTML 태그 사용법<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>1. Title 태그 최적화<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h3</span>&gt;</span>Title 태그는 검색엔진 최적화의 첫걸음입니다.<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="4-lt-a-gt-태그-링크-태그"><a href="#4-lt-a-gt-태그-링크-태그" class="headerlink" title="4. &lt;a&gt; 태그 (링크 태그)"></a>4. <strong><code>&lt;a&gt;</code> 태그 (링크 태그)</strong></h3><p><strong><code>&lt;a&gt;</code></strong> 태그는 다른 페이지나 웹사이트로 연결되는 하이퍼링크를 생성합니다. 검색엔진은 이 링크를 통해 페이지 간 관계를 파악합니다.</p><ul><li><strong>중요성</strong>: 외부 링크(백링크)나 내부 링크를 잘 활용하면 페이지의 신뢰도를 높일 수 있습니다. <code>&lt;a&gt;</code> 태그에 사용되는 <strong>앵커 텍스트</strong>는 링크된 페이지의 내용을 설명하는 중요한 요소입니다.</li><li><strong>최적화 팁</strong>: 링크에 사용되는 앵커 텍스트는 자연스럽고, 관련된 키워드를 포함하는 것이 좋습니다. “여기를 클릭”보다는 “SEO 최적화 방법 보기”와 같은 명확한 설명을 사용하는 것이 유리합니다.</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"https://example.com/seo-tips"</span> <span class="attr">title</span>=<span class="string">"SEO 팁 보기"</span>&gt;</span>SEO 최적화 방법<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="5-lt-alt-gt-속성-이미지-대체-텍스트"><a href="#5-lt-alt-gt-속성-이미지-대체-텍스트" class="headerlink" title="5. &lt;alt&gt; 속성 (이미지 대체 텍스트)"></a>5. <strong><code>&lt;alt&gt;</code> 속성 (이미지 대체 텍스트)</strong></h3><p><strong><code>&lt;img&gt;</code></strong> 태그의 <strong><code>alt</code></strong> 속성은 이미지에 대한 설명을 제공합니다. 이는 시각 장애가 있는 사용자나 검색엔진이 이미지를 이해할 수 있도록 돕습니다.</p><ul><li><strong>중요성</strong>: 검색엔진은 이미지를 이해하지 못하기 때문에 <code>alt</code> 속성을 통해 이미지를 설명합니다. 또한, <code>alt</code> 속성은 이미지가 로드되지 않거나 스크린 리더를 사용하는 사용자에게 유용한 정보를 제공합니다.</li><li><strong>최적화 팁</strong>: 이미지의 내용에 대해 정확하고 간결한 설명을 제공하고, 관련 키워드를 자연스럽게 포함시킵니다.</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"seo-optimization.jpg"</span> <span class="attr">alt</span>=<span class="string">"SEO 최적화를 위한 HTML 태그 예시 이미지"</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="6-lt-link-rel-quot-canonical-quot-gt-태그"><a href="#6-lt-link-rel-quot-canonical-quot-gt-태그" class="headerlink" title="6. &lt;link rel=&quot;canonical&quot;&gt; 태그"></a>6. <strong><code>&lt;link rel=&quot;canonical&quot;&gt;</code> 태그</strong></h3><p><strong><code>&lt;link rel=&quot;canonical&quot;&gt;</code></strong> 태그는 중복 콘텐츠 문제를 해결하는 데 도움이 됩니다. 동일한 콘텐츠가 여러 페이지에 있을 경우, 검색엔진에게 어느 페이지가 원본인지 알려줍니다.</p><ul><li><strong>중요성</strong>: 동일한 콘텐츠가 여러 페이지에 존재할 경우, 검색엔진은 이를 중복 콘텐츠로 간주하여 SEO 순위에 영향을 줄 수 있습니다. <code>rel=&quot;canonical&quot;</code> 태그를 사용하면 원본 페이지를 지정하여 중복 콘텐츠 문제를 방지할 수 있습니다.</li><li><strong>최적화 팁</strong>: 동일한 콘텐츠가 여러 URL에 존재할 경우, <code>rel=&quot;canonical&quot;</code> 태그를 사용하여 원본 URL을 명시해야 합니다.</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"canonical"</span> <span class="attr">href</span>=<span class="string">"https://example.com/seo-optimization"</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="7-lt-meta-robots-gt-태그"><a href="#7-lt-meta-robots-gt-태그" class="headerlink" title="7. &lt;meta robots&gt; 태그"></a>7. <strong><code>&lt;meta robots&gt;</code> 태그</strong></h3><p><strong><code>&lt;meta name=&quot;robots&quot;&gt;</code></strong> 태그는 검색엔진에게 페이지에 대해 어떤 작업을 수행할지 지시합니다. 예를 들어, 검색엔진에 페이지를 크롤링하거나 인덱싱하지 않도록 지시할 수 있습니다.</p><ul><li><strong>중요성</strong>: 특정 페이지를 검색엔진에 인덱싱하지 않도록 하거나, 링크를 따라가지 않도록 할 수 있습니다. 이를 통해 불필요한 페이지가 검색 결과에 표시되지 않도록 관리할 수 있습니다.</li><li><strong>최적화 팁</strong>: 페이지가 검색 결과에 나타나지 않게 하려면 <code>noindex, nofollow</code>를 설정합니다.</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"robots"</span> <span class="attr">content</span>=<span class="string">"noindex, nofollow"</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="8-lt-strong-gt-와-lt-em-gt-태그-강조-및-강조-표시"><a href="#8-lt-strong-gt-와-lt-em-gt-태그-강조-및-강조-표시" class="headerlink" title="8. &lt;strong&gt;와 &lt;em&gt; 태그 (강조 및 강조 표시)"></a>8. <strong><code>&lt;strong&gt;</code>와 <code>&lt;em&gt;</code> 태그 (강조 및 강조 표시)</strong></h3><p><strong><code>&lt;strong&gt;</code></strong>와 <strong><code>&lt;em&gt;</code></strong> 태그는 텍스트의 강조를 나타냅니다. <code>&lt;strong&gt;</code>은 중요도를 강조하고, <code>&lt;em&gt;</code>은 강조된 텍스트를 의미적으로 강조합니다.</p><ul><li><strong>중요성</strong>: 검색엔진은 <code>&lt;strong&gt;</code>과 <code>&lt;em&gt;</code> 태그로 강조된 텍스트를 중요한 키워드로 간주할 수 있습니다. 중요한 키워드는 이 태그를 통해 강조하는 것이 좋습니다.</li><li><strong>최적화 팁</strong>: 주요 키워드를 강조할 때 사용하여, 해당 키워드가 페이지에서 중요한 역할을 한다는 것을 검색엔진에 알립니다.</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>SEO 최적화를 위해 <span class="tag">&lt;<span class="name">strong</span>&gt;</span>HTML 태그<span class="tag">&lt;/<span class="name">strong</span>&gt;</span>를 올바르게 사용하는 것이 매우 중요합니다.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>자세한 내용은 <span class="tag">&lt;<span class="name">em</span>&gt;</span>SEO 전문가<span class="tag">&lt;/<span class="name">em</span>&gt;</span>의 조언을 참고하세요.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="9-URL-구조-최적화"><a href="#9-URL-구조-최적화" class="headerlink" title="9. URL 구조 최적화"></a>9. <strong>URL 구조 최적화</strong></h3><p>URL은 간결하고 이해하기 쉬워야 하며, 핵심 키워드를 포함하는 것이 좋습니다. 검색엔진은 URL을 통해 페이지의 주제를 파악할 수 있습니다.</p><ul><li><strong>중요성</strong>: 잘 구성된 URL은 검색엔진 최적화에 도움을 줍니다. 특히, 하이픈(-)을 사용하여 단어를 구분하는 것이 좋습니다.</li><li><strong>최적화 팁</strong>: URL은 짧고, 명확하며, 관련된 키워드를 포함해야 합니다.</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://example.com/seo-optimization-tips</span><br></pre></td></tr></table></figure><h3 id="10-모바일-친화적인-웹페이지-만들기"><a href="#10-모바일-친화적인-웹페이지-만들기" class="headerlink" title="10. 모바일 친화적인 웹페이지 만들기"></a>10. <strong>모바일 친화적인 웹페이지 만들기</strong></h3><p>모바일 최적화는 SEO에 필수적입니다. 구글은 모바일 친화적인 웹사이트를 선호하며, 모바일 최적화</p><p>가 잘 되어 있으면 검색엔진 결과에서 유리하게 작용할 수 있습니다.</p><ul><li><strong>중요성</strong>: 모바일 사용자가 급격히 증가하면서, 모바일 친화적인 웹사이트가 SEO 순위에 큰 영향을 미칩니다.</li><li><strong>최적화 팁</strong>: <code>meta viewport</code> 태그를 사용하여 모바일 화면에 맞게 페이지를 조정하고, 반응형 디자인을 적용해야 합니다.</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br></pre></td></tr></table></figure><hr><h2 id="결론"><a href="#결론" class="headerlink" title="결론"></a>결론</h2><p>SEO 최적화를 위한 HTML 태그 활용은 웹사이트의 검색엔진 순위를 높이는 데 중요한 역할을 합니다. 제목, 설명, 헤딩 태그, 이미지 대체 텍스트 등 각 태그는 검색엔진이 페이지를 이해하고, 관련된 콘텐츠를 검색 결과에서 정확히 보여줄 수 있도록 돕습니다. 이 글에서 소개한 태그들을 적절히 활용하면, 검색엔진 최적화뿐만 아니라 사용자 경험을 향상시킬 수 있습니다. SEO는 지속적인 작업이지만, HTML 태그를 올바르게 활용하면 그 효과는 확실히 나타날 것입니다.</p><h4 id="Related-Posts"><a href="#Related-Posts" class="headerlink" title="Related Posts"></a>Related Posts</h4><ul><li><a href="/2024/11/12/HTML-basic-grammer/" title="HTML의 기본문법 웹 페이지를 만드는 첫걸음">HTML의 기본문법 웹 페이지를 만드는 첫걸음</a></li><li><a href="/2019/08/07/HTML-table/" title="HTML 간단하게 표 만들기">HTML 간단하게 표 만들기</a></li><li><a href="/2018/08/29/HTML-Editor/" title="HTML 에디터 (jsFiddle,메모장)">HTML 에디터 (jsFiddle,메모장)</a></li><li><a href="/2019/08/07/HTML-buttonLink/" title="HTML-버튼에 링크 거는 방법">HTML-버튼에 링크 거는 방법</a></li><li><a href="/2021/10/25/HTML-comment/" title="HTML - 주석 태그 <!-- -->">HTML - 주석 태그 <!-- --></a></li><li><a href="/2018/08/30/HTML-imgLink/" title="HTML 이미지 링크거는 법">HTML 이미지 링크거는 법</a></li><li><a href="/2018/08/27/HTML-MailtoTag/" title="Mailto 태그">Mailto 태그</a></li><li><a href="/2024/01/04/HTML-enter/" title="HTML 줄바꿈 입력하기">HTML 줄바꿈 입력하기</a></li></ul><h4 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h4><ul><li><a href="https://chatgpt.com/" target="_blank" rel="noopener">https://chatgpt.com/</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;SEO(검색엔진 최적화)는 웹사이트가 검색엔진 결과 페이지에서 더 높은 순위를 얻을 수 있도록 돕는 전략입니다. HTML 태그는 SEO 최적화에 중요한 역할을 하며, 검색엔진이 페이지 내용을 이해하고 평가하는 데 도움을 줍니다. 이번 블로그 글에
      
    
    </summary>
    
      <category term="Programming" scheme="https://dullyshin.github.io/categories/Programming/"/>
    
      <category term="HTML" scheme="https://dullyshin.github.io/categories/Programming/HTML/"/>
    
    
      <category term="SEO 최적화를 위한 HTML 태그 활용법" scheme="https://dullyshin.github.io/tags/SEO-%EC%B5%9C%EC%A0%81%ED%99%94%EB%A5%BC-%EC%9C%84%ED%95%9C-HTML-%ED%83%9C%EA%B7%B8-%ED%99%9C%EC%9A%A9%EB%B2%95/"/>
    
      <category term="모바일 친화적인 웹페이지 만들기" scheme="https://dullyshin.github.io/tags/%EB%AA%A8%EB%B0%94%EC%9D%BC-%EC%B9%9C%ED%99%94%EC%A0%81%EC%9D%B8-%EC%9B%B9%ED%8E%98%EC%9D%B4%EC%A7%80-%EB%A7%8C%EB%93%A4%EA%B8%B0/"/>
    
      <category term="URL 구조 최적화" scheme="https://dullyshin.github.io/tags/URL-%EA%B5%AC%EC%A1%B0-%EC%B5%9C%EC%A0%81%ED%99%94/"/>
    
      <category term="strong와 em 태그 (강조 및 강조 표시)" scheme="https://dullyshin.github.io/tags/strong%EC%99%80-em-%ED%83%9C%EA%B7%B8-%EA%B0%95%EC%A1%B0-%EB%B0%8F-%EA%B0%95%EC%A1%B0-%ED%91%9C%EC%8B%9C/"/>
    
      <category term="title 태그" scheme="https://dullyshin.github.io/tags/title-%ED%83%9C%EA%B7%B8/"/>
    
  </entry>
  
  <entry>
    <title>HTML 폼의 기본 구조</title>
    <link href="https://dullyshin.github.io/2024/11/12/HTML-Form/"/>
    <id>https://dullyshin.github.io/2024/11/12/HTML-Form/</id>
    <published>2024-11-12T02:58:09.000Z</published>
    <updated>2024-11-12T03:01:36.745Z</updated>
    
    <content type="html"><![CDATA[<p>HTML 폼(Form) 요소는 웹 애플리케이션에서 사용자와 상호작용할 수 있는 중요한 부분입니다. HTML 폼을 사용하면 사용자가 정보를 입력하고, 서버로 전송하거나 다른 방식으로 데이터를 처리할 수 있습니다. 다양한 폼 요소와 속성들이 제공되어 웹 폼을 매우 유연하고 효율적으로 만들 수 있습니다. 이 글에서는 HTML 폼 요소의 기본부터 고급 기능까지 깊이 파헤쳐 보겠습니다.</p><hr><h2 id="HTML-폼-Form-요소-깊이-파헤치기"><a href="#HTML-폼-Form-요소-깊이-파헤치기" class="headerlink" title="HTML 폼(Form) 요소 깊이 파헤치기"></a>HTML 폼(Form) 요소 깊이 파헤치기</h2><p>HTML 폼은 웹 페이지에서 사용자로부터 데이터를 입력받을 수 있는 핵심 요소입니다. 기본적인 텍스트 입력부터 파일 업로드, 날짜 선택, 심지어 사용자 인증까지 다양한 기능을 제공합니다. 이번 블로그 글에서는 HTML 폼 요소의 다양한 종류와 그 활용법을 자세히 알아보겠습니다.</p><h3 id="1-HTML-폼의-기본-구조"><a href="#1-HTML-폼의-기본-구조" class="headerlink" title="1. HTML 폼의 기본 구조"></a>1. <strong>HTML 폼의 기본 구조</strong></h3><p>HTML 폼은 기본적으로 <code>&lt;form&gt;</code> 태그를 사용하여 구성됩니다. 폼 안에는 다양한 입력 요소들이 포함되며, 이들 요소는 데이터를 입력받는 필드 역할을 합니다. HTML 폼의 구조는 아래와 같습니다.</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"/submit"</span> <span class="attr">method</span>=<span class="string">"POST"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"username"</span>&gt;</span>사용자 이름:<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">id</span>=<span class="string">"username"</span> <span class="attr">name</span>=<span class="string">"username"</span>&gt;</span></span><br><span class="line">  </span><br><span class="line">  <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"email"</span>&gt;</span>이메일:<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"email"</span> <span class="attr">id</span>=<span class="string">"email"</span> <span class="attr">name</span>=<span class="string">"email"</span>&gt;</span></span><br><span class="line">  </span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"제출"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><strong><code>&lt;form&gt;</code></strong>: 폼을 정의하는 태그입니다. <code>action</code> 속성은 데이터를 전송할 URL을 지정하고, <code>method</code> 속성은 데이터 전송 방법(GET 또는 POST)을 지정합니다.</li><li><strong><code>&lt;label&gt;</code></strong>: 폼 요소에 대한 레이블을 정의합니다. 사용자가 필드를 이해하는 데 도움이 됩니다.</li><li><strong><code>&lt;input&gt;</code></strong>: 실제 데이터를 입력하는 필드입니다. 다양한 타입을 지정할 수 있습니다.</li><li><strong><code>&lt;submit&gt;</code></strong>: 폼을 제출하는 버튼입니다.</li></ul><h3 id="2-주요-폼-입력-요소들"><a href="#2-주요-폼-입력-요소들" class="headerlink" title="2. 주요 폼 입력 요소들"></a>2. <strong>주요 폼 입력 요소들</strong></h3><h4 id="2-1-텍스트-입력-필드-lt-input-type-quot-text-quot-gt"><a href="#2-1-텍스트-입력-필드-lt-input-type-quot-text-quot-gt" class="headerlink" title="2.1. 텍스트 입력 필드 (&lt;input type=&quot;text&quot;&gt;)"></a><strong>2.1. 텍스트 입력 필드 (<code>&lt;input type=&quot;text&quot;&gt;</code>)</strong></h4><p>텍스트 필드는 가장 기본적인 입력 요소입니다. 사용자가 텍스트를 입력할 수 있는 필드를 생성합니다. <code>name</code> 속성은 서버로 전송되는 데이터의 이름을 지정합니다.</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"username"</span>&gt;</span>사용자 이름:<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">id</span>=<span class="string">"username"</span> <span class="attr">name</span>=<span class="string">"username"</span> <span class="attr">required</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><code>required</code>: 이 필드는 반드시 입력해야 한다는 의미입니다.</li><li><code>placeholder</code>: 필드가 비어 있을 때 표시되는 안내 텍스트입니다.</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"username"</span> <span class="attr">placeholder</span>=<span class="string">"사용자 이름을 입력하세요"</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="2-2-이메일-입력-필드-lt-input-type-quot-email-quot-gt"><a href="#2-2-이메일-입력-필드-lt-input-type-quot-email-quot-gt" class="headerlink" title="2.2. 이메일 입력 필드 (&lt;input type=&quot;email&quot;&gt;)"></a><strong>2.2. 이메일 입력 필드 (<code>&lt;input type=&quot;email&quot;&gt;</code>)</strong></h4><p>이메일 주소를 입력 받는 필드로, 브라우저는 이메일 형식을 검증하고 올바른 형식이 아닐 경우 경고를 표시합니다.</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"email"</span>&gt;</span>이메일:<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"email"</span> <span class="attr">id</span>=<span class="string">"email"</span> <span class="attr">name</span>=<span class="string">"email"</span> <span class="attr">required</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="2-3-비밀번호-입력-필드-lt-input-type-quot-password-quot-gt"><a href="#2-3-비밀번호-입력-필드-lt-input-type-quot-password-quot-gt" class="headerlink" title="2.3. 비밀번호 입력 필드 (&lt;input type=&quot;password&quot;&gt;)"></a><strong>2.3. 비밀번호 입력 필드 (<code>&lt;input type=&quot;password&quot;&gt;</code>)</strong></h4><p>비밀번호를 입력 받을 때는 텍스트를 가리는 <code>password</code> 타입을 사용합니다.</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"password"</span>&gt;</span>비밀번호:<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"password"</span> <span class="attr">id</span>=<span class="string">"password"</span> <span class="attr">name</span>=<span class="string">"password"</span> <span class="attr">required</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="2-4-라디오-버튼-lt-input-type-quot-radio-quot-gt"><a href="#2-4-라디오-버튼-lt-input-type-quot-radio-quot-gt" class="headerlink" title="2.4. 라디오 버튼 (&lt;input type=&quot;radio&quot;&gt;)"></a><strong>2.4. 라디오 버튼 (<code>&lt;input type=&quot;radio&quot;&gt;</code>)</strong></h4><p>라디오 버튼은 사용자가 여러 옵션 중 하나를 선택할 수 있게 해 줍니다. <code>name</code> 속성을 동일하게 설정하여 그룹화할 수 있습니다.</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"male"</span>&gt;</span>남성<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">id</span>=<span class="string">"male"</span> <span class="attr">name</span>=<span class="string">"gender"</span> <span class="attr">value</span>=<span class="string">"male"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"female"</span>&gt;</span>여성<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">id</span>=<span class="string">"female"</span> <span class="attr">name</span>=<span class="string">"gender"</span> <span class="attr">value</span>=<span class="string">"female"</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="2-5-체크박스-lt-input-type-quot-checkbox-quot-gt"><a href="#2-5-체크박스-lt-input-type-quot-checkbox-quot-gt" class="headerlink" title="2.5. 체크박스 (&lt;input type=&quot;checkbox&quot;&gt;)"></a><strong>2.5. 체크박스 (<code>&lt;input type=&quot;checkbox&quot;&gt;</code>)</strong></h4><p>체크박스는 여러 개의 옵션 중에서 여러 개를 선택할 수 있게 해 줍니다. 여러 개의 체크박스를 그룹으로 묶을 수 있습니다.</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"subscribe"</span>&gt;</span>뉴스레터 구독<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">id</span>=<span class="string">"subscribe"</span> <span class="attr">name</span>=<span class="string">"subscribe"</span> <span class="attr">value</span>=<span class="string">"yes"</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="2-6-셀렉트-박스-lt-select-gt-와-lt-option-gt"><a href="#2-6-셀렉트-박스-lt-select-gt-와-lt-option-gt" class="headerlink" title="2.6. 셀렉트 박스 (&lt;select&gt;와 &lt;option&gt;)"></a><strong>2.6. 셀렉트 박스 (<code>&lt;select&gt;</code>와 <code>&lt;option&gt;</code>)</strong></h4><p>셀렉트 박스는 드롭다운 목록을 표시할 때 사용됩니다. 사용자가 선택할 수 있는 여러 옵션을 제공합니다.</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"country"</span>&gt;</span>국가:<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"country"</span> <span class="attr">name</span>=<span class="string">"country"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"kr"</span>&gt;</span>대한민국<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"us"</span>&gt;</span>미국<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"jp"</span>&gt;</span>일본<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="2-7-텍스트-영역-lt-textarea-gt"><a href="#2-7-텍스트-영역-lt-textarea-gt" class="headerlink" title="2.7. 텍스트 영역 (&lt;textarea&gt;)"></a><strong>2.7. 텍스트 영역 (<code>&lt;textarea&gt;</code>)</strong></h4><p><code>&lt;textarea&gt;</code>는 여러 줄로 이루어진 텍스트 입력 필드로, 긴 텍스트나 메모를 입력받을 때 사용됩니다.</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"message"</span>&gt;</span>메시지:<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">textarea</span> <span class="attr">id</span>=<span class="string">"message"</span> <span class="attr">name</span>=<span class="string">"message"</span> <span class="attr">rows</span>=<span class="string">"4"</span> <span class="attr">cols</span>=<span class="string">"50"</span> <span class="attr">required</span>&gt;</span><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="2-8-파일-업로드-lt-input-type-quot-file-quot-gt"><a href="#2-8-파일-업로드-lt-input-type-quot-file-quot-gt" class="headerlink" title="2.8. 파일 업로드 (&lt;input type=&quot;file&quot;&gt;)"></a><strong>2.8. 파일 업로드 (<code>&lt;input type=&quot;file&quot;&gt;</code>)</strong></h4><p>파일 업로드 필드는 사용자가 파일을 선택할 수 있게 해줍니다.</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"file"</span>&gt;</span>파일 업로드:<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"file"</span> <span class="attr">id</span>=<span class="string">"file"</span> <span class="attr">name</span>=<span class="string">"file"</span> <span class="attr">accept</span>=<span class="string">".jpg, .png, .pdf"</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><code>accept</code>: 업로드 가능한 파일 타입을 제한할 수 있습니다.</li></ul><h4 id="2-9-날짜와-시간-lt-input-type-quot-date-quot-gt-lt-input-type-quot-time-quot-gt"><a href="#2-9-날짜와-시간-lt-input-type-quot-date-quot-gt-lt-input-type-quot-time-quot-gt" class="headerlink" title="2.9. 날짜와 시간 (&lt;input type=&quot;date&quot;&gt;, &lt;input type=&quot;time&quot;&gt;)"></a><strong>2.9. 날짜와 시간 (<code>&lt;input type=&quot;date&quot;&gt;</code>, <code>&lt;input type=&quot;time&quot;&gt;</code>)</strong></h4><p>HTML5에서는 날짜와 시간을 입력받을 수 있는 필드를 추가했습니다. 이 입력 요소들은 브라우저에서 날짜와 시간 선택 UI를 제공합니다.</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"birthday"</span>&gt;</span>생일:<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"date"</span> <span class="attr">id</span>=<span class="string">"birthday"</span> <span class="attr">name</span>=<span class="string">"birthday"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"meeting-time"</span>&gt;</span>미팅 시간:<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"time"</span> <span class="attr">id</span>=<span class="string">"meeting-time"</span> <span class="attr">name</span>=<span class="string">"meeting-time"</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="3-폼-제출과-전송"><a href="#3-폼-제출과-전송" class="headerlink" title="3. 폼 제출과 전송"></a>3. <strong>폼 제출과 전송</strong></h3><p>폼을 제출할 때는 <code>&lt;input type=&quot;submit&quot;&gt;</code> 버튼을 사용합니다. 사용자가 데이터를 입력하고 이 버튼을 클릭하면, 폼이 제출되어 서버로 데이터를 전송합니다.</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"제출"</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="3-1-폼-제출을-위한-버튼과-리셋-버튼"><a href="#3-1-폼-제출을-위한-버튼과-리셋-버튼" class="headerlink" title="3.1. 폼 제출을 위한 버튼과 리셋 버튼"></a><strong>3.1. 폼 제출을 위한 버튼과 리셋 버튼</strong></h4><ul><li><strong><code>&lt;input type=&quot;reset&quot;&gt;</code></strong>: 폼의 모든 필드를 초기화하는 버튼을 추가할 수 있습니다.</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"reset"</span> <span class="attr">value</span>=<span class="string">"초기화"</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><strong><code>&lt;button&gt;</code></strong>: 버튼 태그를 사용해 제출 버튼을 만들 수도 있습니다. 이 경우 JavaScript를 사용하여 폼을 제어할 수 있습니다.</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"submit"</span>&gt;</span>제출<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="4-폼-검증-Validation"><a href="#4-폼-검증-Validation" class="headerlink" title="4. 폼 검증 (Validation)"></a>4. <strong>폼 검증 (Validation)</strong></h3><p>HTML5는 클라이언트 측에서 기본적인 폼 검증을 지원합니다. <code>required</code>, <code>pattern</code>, <code>minlength</code>, <code>maxlength</code>, <code>type</code> 등 다양한 속성을 사용하여 입력값을 검증할 수 있습니다.</p><ul><li><strong><code>required</code></strong>: 필수 입력 항목으로 설정합니다.</li><li><strong><code>pattern</code></strong>: 정규 표현식을 사용하여 입력값을 검증합니다.</li><li><strong><code>min</code>과 <code>max</code></strong>: 숫자 입력 시 최소값과 최대값을 설정합니다.</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"age"</span>&gt;</span>나이:<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"number"</span> <span class="attr">id</span>=<span class="string">"age"</span> <span class="attr">name</span>=<span class="string">"age"</span> <span class="attr">min</span>=<span class="string">"18"</span> <span class="attr">max</span>=<span class="string">"100"</span> <span class="attr">required</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="5-폼-데이터-전송-방식"><a href="#5-폼-데이터-전송-방식" class="headerlink" title="5. 폼 데이터 전송 방식"></a>5. <strong>폼 데이터 전송 방식</strong></h3><p>HTML 폼은 두 가지 주요 방식으로 데이터를 전송할 수 있습니다:</p><ul><li><strong>GET</strong>: URL에 데이터를 쿼리 문자열로 전송합니다. 일반적으로 검색이나 필터링에 사용됩니다.</li><li><strong>POST</strong>: 데이터를 HTTP 요청 본문에 포함하여 서버로 전송합니다. 보안이 필요한 데이터나 파일 업로드에 사용됩니다.</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"/submit"</span> <span class="attr">method</span>=<span class="string">"POST"</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 폼 필드들 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"제출"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="6-결론"><a href="#6-결론" class="headerlink" title="6. 결론"></a>6. <strong>결론</strong></h3><p>HTML 폼 요소는 웹에서 데이터를 수집하고 처리하는 데 중요한 역할을 합니다. 다양한 폼 요소들(<code>input</code>, <code>textarea</code>, <code>select</code>, <code>button</code> 등)을 적절히 활용하면, 사용자 경험을 크게 향상시킬 수 있습니다. 또한 HTML5의 새로운 입력 유형과 폼 검증 기능을 통해 더 편리하고 안전한 폼을 만들 수 있습니다. 폼은 웹 애플리케이션의 핵심적인 부분이므로, 폼을 다룰 때 정확한 구조와 기능을 이해하고 활용하는 것이 중요합니다.</p><h4 id="Related-Posts"><a href="#Related-Posts" class="headerlink" title="Related Posts"></a>Related Posts</h4><ul><li><a href="/2024/11/12/HTML-basic-grammer/" title="HTML의 기본문법 웹 페이지를 만드는 첫걸음">HTML의 기본문법 웹 페이지를 만드는 첫걸음</a></li><li><a href="/2019/08/07/HTML-table/" title="HTML 간단하게 표 만들기">HTML 간단하게 표 만들기</a></li><li><a href="/2018/08/29/HTML-Editor/" title="HTML 에디터 (jsFiddle,메모장)">HTML 에디터 (jsFiddle,메모장)</a></li><li><a href="/2019/08/07/HTML-buttonLink/" title="HTML-버튼에 링크 거는 방법">HTML-버튼에 링크 거는 방법</a></li><li><a href="/2021/10/25/HTML-comment/" title="HTML - 주석 태그 <!-- -->">HTML - 주석 태그 <!-- --></a></li><li><a href="/2018/08/30/HTML-imgLink/" title="HTML 이미지 링크거는 법">HTML 이미지 링크거는 법</a></li><li><a href="/2018/08/27/HTML-MailtoTag/" title="Mailto 태그">Mailto 태그</a></li><li><a href="/2024/01/04/HTML-enter/" title="HTML 줄바꿈 입력하기">HTML 줄바꿈 입력하기</a></li></ul><h4 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h4><ul><li><a href="https://chatgpt.com/" target="_blank" rel="noopener">https://chatgpt.com/</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;HTML 폼(Form) 요소는 웹 애플리케이션에서 사용자와 상호작용할 수 있는 중요한 부분입니다. HTML 폼을 사용하면 사용자가 정보를 입력하고, 서버로 전송하거나 다른 방식으로 데이터를 처리할 수 있습니다. 다양한 폼 요소와 속성들이 제공되어
      
    
    </summary>
    
      <category term="Programming" scheme="https://dullyshin.github.io/categories/Programming/"/>
    
      <category term="HTML" scheme="https://dullyshin.github.io/categories/Programming/HTML/"/>
    
    
      <category term="HTML 폼의 기본 구조" scheme="https://dullyshin.github.io/tags/HTML-%ED%8F%BC%EC%9D%98-%EA%B8%B0%EB%B3%B8-%EA%B5%AC%EC%A1%B0/"/>
    
      <category term="다양한 폼 요소들" scheme="https://dullyshin.github.io/tags/%EB%8B%A4%EC%96%91%ED%95%9C-%ED%8F%BC-%EC%9A%94%EC%86%8C%EB%93%A4/"/>
    
      <category term="input" scheme="https://dullyshin.github.io/tags/input/"/>
    
      <category term="textarea" scheme="https://dullyshin.github.io/tags/textarea/"/>
    
      <category term="select" scheme="https://dullyshin.github.io/tags/select/"/>
    
      <category term="button" scheme="https://dullyshin.github.io/tags/button/"/>
    
  </entry>
  
  <entry>
    <title>HTML5의 주요 기능과 변화</title>
    <link href="https://dullyshin.github.io/2024/11/12/HTML-mainfunctionchange/"/>
    <id>https://dullyshin.github.io/2024/11/12/HTML-mainfunctionchange/</id>
    <published>2024-11-12T02:51:19.000Z</published>
    <updated>2024-11-12T02:57:22.785Z</updated>
    
    <content type="html"><![CDATA[<p>HTML5는 웹 기술의 큰 전환점이 되었으며, 웹 개발자들에게 더 강력하고 유연한 도구들을 제공했습니다. HTML5의 주요 기능과 변화는 웹의 구조와 콘텐츠, 사용자 경험을 개선하는 데 중요한 역할을 했습니다. 이번 블로그 글에서는 HTML5의 주요 기능과 변화들을 살펴보며, 이들이 어떻게 웹 개발에 영향을 미쳤는지에 대해 설명하겠습니다.</p><hr><h2 id="HTML5의-주요-기능과-변화"><a href="#HTML5의-주요-기능과-변화" class="headerlink" title="HTML5의 주요 기능과 변화"></a>HTML5의 주요 기능과 변화</h2><p>HTML5는 웹 표준을 새롭게 정의하며, 그 이전 버전인 HTML4와 XHTML의 한계를 극복하고 다양한 혁신적인 기능들을 추가했습니다. HTML5의 도입으로 웹 애플리케이션과 사이트가 더 동적이고 풍부해졌으며, 사용자 경험을 향상시켰습니다. 이번 글에서는 HTML5의 주요 기능과 변화를 다뤄보겠습니다.</p><h3 id="1-시맨틱-태그-Semantic-Tags-의-도입"><a href="#1-시맨틱-태그-Semantic-Tags-의-도입" class="headerlink" title="1. 시맨틱 태그(Semantic Tags)의 도입"></a>1. <strong>시맨틱 태그(Semantic Tags)의 도입</strong></h3><p>HTML5에서는 의미 있는 문서 구조를 위해 다양한 <strong>시맨틱 태그</strong>들이 추가되었습니다. 이는 웹 페이지의 가독성을 높이고, 스크린 리더와 같은 보조 기술들이 페이지를 더 잘 이해하도록 돕는 역할을 합니다.</p><h4 id="주요-시맨틱-태그"><a href="#주요-시맨틱-태그" class="headerlink" title="주요 시맨틱 태그:"></a>주요 시맨틱 태그:</h4><ul><li><strong><code>&lt;header&gt;</code></strong>: 문서나 섹션의 머리글을 정의합니다.</li><li><strong><code>&lt;footer&gt;</code></strong>: 문서나 섹션의 바닥글을 정의합니다.</li><li><strong><code>&lt;article&gt;</code></strong>: 독립적인 콘텐츠 블록을 정의합니다. 예를 들어, 블로그 글이나 뉴스 기사를 나타낼 때 사용됩니다.</li><li><strong><code>&lt;section&gt;</code></strong>: 문서의 주제별 섹션을 구분하는 태그입니다.</li><li><strong><code>&lt;nav&gt;</code></strong>: 내비게이션 링크를 묶는 태그입니다.</li><li><strong><code>&lt;aside&gt;</code></strong>: 문서의 주요 내용과 간접적으로 관련된 부가적인 콘텐츠를 정의합니다.</li><li><strong><code>&lt;main&gt;</code></strong>: 문서의 주요 콘텐츠를 정의하는 태그입니다. 하나의 문서에서 하나만 사용해야 합니다.</li></ul><p><strong>예시 코드</strong>:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">article</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">header</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>HTML5의 주요 기능<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">header</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">section</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>HTML5는 다양한 시맨틱 태그들을 도입하여 웹 페이지의 구조를 더 명확하게 정의할 수 있습니다.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">footer</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>© 2024 웹 접근성 개선<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">footer</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">article</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="2-멀티미디어-지원-lt-video-gt-와-lt-audio-gt-태그"><a href="#2-멀티미디어-지원-lt-video-gt-와-lt-audio-gt-태그" class="headerlink" title="2. 멀티미디어 지원: &lt;video&gt;와 &lt;audio&gt; 태그"></a>2. <strong>멀티미디어 지원: <code>&lt;video&gt;</code>와 <code>&lt;audio&gt;</code> 태그</strong></h3><p>HTML5는 <strong>비디오</strong>와 <strong>오디오</strong> 콘텐츠를 웹 페이지에 삽입할 수 있는 새로운 태그인 <code>&lt;video&gt;</code>와 <code>&lt;audio&gt;</code>를 도입했습니다. 이 태그들은 플러그인 없이 네이티브 웹 브라우저에서 미디어를 재생할 수 있게 해 주며, 이를 통해 멀티미디어 콘텐츠의 사용이 훨씬 용이해졌습니다.</p><ul><li><strong><code>&lt;video&gt;</code></strong>: 비디오 파일을 웹 페이지에 삽입합니다.</li><li><strong><code>&lt;audio&gt;</code></strong>: 오디오 파일을 웹 페이지에 삽입합니다.</li></ul><p><strong>예시 코드</strong>:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">video</span> <span class="attr">controls</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">source</span> <span class="attr">src</span>=<span class="string">"movie.mp4"</span> <span class="attr">type</span>=<span class="string">"video/mp4"</span>&gt;</span></span><br><span class="line">  이 브라우저는 비디오를 지원하지 않습니다.</span><br><span class="line"><span class="tag">&lt;/<span class="name">video</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">audio</span> <span class="attr">controls</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">source</span> <span class="attr">src</span>=<span class="string">"audio.mp3"</span> <span class="attr">type</span>=<span class="string">"audio/mp3"</span>&gt;</span></span><br><span class="line">  이 브라우저는 오디오를 지원하지 않습니다.</span><br><span class="line"><span class="tag">&lt;/<span class="name">audio</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="3-폼-요소의-개선"><a href="#3-폼-요소의-개선" class="headerlink" title="3. 폼 요소의 개선"></a>3. <strong>폼 요소의 개선</strong></h3><p>HTML5는 폼 요소를 크게 개선하여 더 직관적이고 사용자 친화적인 폼을 만들 수 있도록 했습니다. 새로운 입력 타입과 속성들이 추가되었으며, 이를 통해 클라이언트 측에서 유효성 검사를 더 쉽게 할 수 있습니다.</p><h4 id="주요-개선-사항"><a href="#주요-개선-사항" class="headerlink" title="주요 개선 사항:"></a>주요 개선 사항:</h4><ul><li><strong><code>&lt;input type=&quot;email&quot;&gt;</code>, <code>&lt;input type=&quot;tel&quot;&gt;</code>, <code>&lt;input type=&quot;url&quot;&gt;</code></strong>: 이메일, 전화번호, URL 등의 입력을 위한 전용 타입이 추가되었습니다.</li><li><strong><code>&lt;input type=&quot;date&quot;&gt;</code>, <code>&lt;input type=&quot;time&quot;&gt;</code></strong>: 날짜 및 시간 입력을 위한 전용 UI가 제공됩니다.</li><li><strong><code>&lt;input type=&quot;number&quot;&gt;</code></strong>: 숫자만 입력할 수 있도록 제한할 수 있습니다.</li><li><strong><code>&lt;input type=&quot;range&quot;&gt;</code></strong>: 슬라이더를 사용하여 값의 범위를 선택할 수 있습니다.</li></ul><p><strong>예시 코드</strong>:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"email"</span>&gt;</span>이메일:<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"email"</span> <span class="attr">id</span>=<span class="string">"email"</span> <span class="attr">name</span>=<span class="string">"email"</span> <span class="attr">required</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"birthday"</span>&gt;</span>생일:<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"date"</span> <span class="attr">id</span>=<span class="string">"birthday"</span> <span class="attr">name</span>=<span class="string">"birthday"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"volume"</span>&gt;</span>볼륨:<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"range"</span> <span class="attr">id</span>=<span class="string">"volume"</span> <span class="attr">name</span>=<span class="string">"volume"</span> <span class="attr">min</span>=<span class="string">"0"</span> <span class="attr">max</span>=<span class="string">"100"</span>&gt;</span></span><br><span class="line">  </span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"제출"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="4-로컬-저장소-Local-Storage-와-세션-저장소-Session-Storage"><a href="#4-로컬-저장소-Local-Storage-와-세션-저장소-Session-Storage" class="headerlink" title="4. 로컬 저장소 (Local Storage)와 세션 저장소 (Session Storage)"></a>4. <strong>로컬 저장소 (Local Storage)와 세션 저장소 (Session Storage)</strong></h3><p>HTML5는 클라이언트 측에 데이터를 저장할 수 있는 <strong>로컬 저장소</strong>와 <strong>세션 저장소</strong>를 추가했습니다. 이를 통해 사용자가 웹사이트를 떠난 후에도 데이터를 유지하거나, 페이지 새로고침을 해도 데이터가 유지될 수 있습니다.</p><ul><li><strong><code>localStorage</code></strong>: 데이터가 브라우저에 영구적으로 저장되며, 브라우저를 닫아도 유지됩니다.</li><li><strong><code>sessionStorage</code></strong>: 데이터가 세션 동안만 저장되며, 브라우저나 탭을 닫으면 삭제됩니다.</li></ul><p><strong>예시 코드</strong>:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript">  <span class="comment">// 로컬 저장소에 데이터 저장</span></span></span><br><span class="line"><span class="javascript">  localStorage.setItem(<span class="string">'username'</span>, <span class="string">'홍길동'</span>);</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript">  <span class="comment">// 저장된 데이터 가져오기</span></span></span><br><span class="line"><span class="javascript">  <span class="keyword">var</span> username = localStorage.getItem(<span class="string">'username'</span>);</span></span><br><span class="line"><span class="javascript">  alert(username);  <span class="comment">// '홍길동' 출력</span></span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="5-캔버스-Canvas-와-그래픽-처리"><a href="#5-캔버스-Canvas-와-그래픽-처리" class="headerlink" title="5. 캔버스 (Canvas)와 그래픽 처리"></a>5. <strong>캔버스 (Canvas)와 그래픽 처리</strong></h3><p>HTML5의 <strong><code>&lt;canvas&gt;</code></strong> 태그는 웹에서 동적인 그래픽을 생성할 수 있는 강력한 도구입니다. 이 태그를 사용하면 2D 및 3D 그래픽, 애니메이션, 게임 등을 만들 수 있습니다.</p><p><strong>예시 코드</strong>:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">canvas</span> <span class="attr">id</span>=<span class="string">"myCanvas"</span> <span class="attr">width</span>=<span class="string">"200"</span> <span class="attr">height</span>=<span class="string">"200"</span>&gt;</span><span class="tag">&lt;/<span class="name">canvas</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript">  <span class="keyword">var</span> canvas = <span class="built_in">document</span>.getElementById(<span class="string">'myCanvas'</span>);</span></span><br><span class="line"><span class="javascript">  <span class="keyword">var</span> ctx = canvas.getContext(<span class="string">'2d'</span>);</span></span><br><span class="line"><span class="javascript">  ctx.fillStyle = <span class="string">"blue"</span>;</span></span><br><span class="line"><span class="undefined">  ctx.fillRect(20, 20, 150, 100);</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="6-Geolocation-API"><a href="#6-Geolocation-API" class="headerlink" title="6. Geolocation API"></a>6. <strong>Geolocation API</strong></h3><p>HTML5에서는 <strong>Geolocation API</strong>를 통해 사용자의 위치 정보를 얻을 수 있는 기능을 추가했습니다. 이 기능을 사용하면 사용자의 위치를 기반으로 맞춤형 콘텐츠를 제공하거나, 지도 서비스를 제공하는 웹 애플리케이션을 만들 수 있습니다.</p><p><strong>예시 코드</strong>:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">onclick</span>=<span class="string">"getLocation()"</span>&gt;</span>내 위치 보기<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">"demo"</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="javascript"><span class="function"><span class="keyword">function</span> <span class="title">getLocation</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">  <span class="keyword">if</span> (navigator.geolocation) &#123;</span></span><br><span class="line"><span class="undefined">    navigator.geolocation.getCurrentPosition(showPosition);</span></span><br><span class="line"><span class="javascript">  &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="javascript">    <span class="built_in">document</span>.getElementById(<span class="string">"demo"</span>).innerHTML = <span class="string">"이 브라우저는 위치 서비스를 지원하지 않습니다."</span>;</span></span><br><span class="line"><span class="undefined">  &#125;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="javascript"><span class="function"><span class="keyword">function</span> <span class="title">showPosition</span>(<span class="params">position</span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">  <span class="built_in">document</span>.getElementById(<span class="string">"demo"</span>).innerHTML = <span class="string">"위도: "</span> + position.coords.latitude + </span></span><br><span class="line"><span class="javascript">  <span class="string">"&lt;br&gt;경도: "</span> + position.coords.longitude; </span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="7-웹-소켓-WebSockets"><a href="#7-웹-소켓-WebSockets" class="headerlink" title="7. 웹 소켓 (WebSockets)"></a>7. <strong>웹 소켓 (WebSockets)</strong></h3><p>웹 소켓은 <strong>실시간 양방향 통신</strong>을 가능하게 해주는 HTML5의 기능으로, 서버와 클라이언트가 실시간으로 데이터를 주고받을 수 있도록 합니다. 이를 통해 채팅 애플리케이션, 실시간 데이터 피드, 온라인 게임 등 다양한 실시간 서비스를 구현할 수 있습니다.</p><h3 id="8-Web-Workers"><a href="#8-Web-Workers" class="headerlink" title="8. Web Workers"></a>8. <strong>Web Workers</strong></h3><p>Web Workers는 백그라운드에서 JavaScript 코드를 실행할 수 있게 해 주는 HTML5의 기능입니다. 이를 통해 페이지가 차단되지 않고, 비동기적으로 작업을 수행할 수 있습니다.</p><h3 id="9-웹-폰트-Web-Fonts-와-스타일링의-향상"><a href="#9-웹-폰트-Web-Fonts-와-스타일링의-향상" class="headerlink" title="9. 웹 폰트 (Web Fonts)와 스타일링의 향상"></a>9. <strong>웹 폰트 (Web Fonts)와 스타일링의 향상</strong></h3><p>HTML5에서는 웹 폰트를 쉽게 사용할 수 있게 되었습니다. CSS3와 결합하여, 다양한 웹 폰트를 스타일시트에 포함시켜 사용할 수 있습니다.</p><hr><h2 id="결론"><a href="#결론" class="headerlink" title="결론"></a>결론</h2><p>HTML5는 웹 개발에 엄청난 변화를 가져왔습니다. 다양한 <strong>시맨틱 태그</strong>, <strong>멀티미디어 지원</strong>, <strong>로컬 저장소</strong>와 <strong>세션 저장소</strong>, <strong>캔버스</strong>와 <strong>웹 소켓</strong> 등 HTML5는 웹 페이지의 구조를 더 의미 있게 만들고, 사용자 경험을 크게 향상시켰습니다. 또한, 개발자에게 더 많은 기능을 제공하여 더 복잡하고 동적인 웹 애플리케이션을 구축할 수 있게 되었습니다.</p><p>HTML5를 잘 활용하면 더 빠르고, 강력하며, 접근성이 좋은 웹 사이트를 만들 수 있습니다. 아직 HTML5를 활용하지 않았다면, 이제 바로 적용해 보세요!</p><h4 id="Related-Posts"><a href="#Related-Posts" class="headerlink" title="Related Posts"></a>Related Posts</h4><ul><li><a href="/2024/11/12/HTML-basic-grammer/" title="HTML의 기본문법 웹 페이지를 만드는 첫걸음">HTML의 기본문법 웹 페이지를 만드는 첫걸음</a></li><li><a href="/2019/08/07/HTML-table/" title="HTML 간단하게 표 만들기">HTML 간단하게 표 만들기</a></li><li><a href="/2018/08/29/HTML-Editor/" title="HTML 에디터 (jsFiddle,메모장)">HTML 에디터 (jsFiddle,메모장)</a></li><li><a href="/2019/08/07/HTML-buttonLink/" title="HTML-버튼에 링크 거는 방법">HTML-버튼에 링크 거는 방법</a></li><li><a href="/2021/10/25/HTML-comment/" title="HTML - 주석 태그 <!-- -->">HTML - 주석 태그 <!-- --></a></li><li><a href="/2018/08/30/HTML-imgLink/" title="HTML 이미지 링크거는 법">HTML 이미지 링크거는 법</a></li><li><a href="/2018/08/27/HTML-MailtoTag/" title="Mailto 태그">Mailto 태그</a></li><li><a href="/2024/01/04/HTML-enter/" title="HTML 줄바꿈 입력하기">HTML 줄바꿈 입력하기</a></li></ul><h4 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h4><ul><li><a href="https://chatgpt.com/" target="_blank" rel="noopener">https://chatgpt.com/</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;HTML5는 웹 기술의 큰 전환점이 되었으며, 웹 개발자들에게 더 강력하고 유연한 도구들을 제공했습니다. HTML5의 주요 기능과 변화는 웹의 구조와 콘텐츠, 사용자 경험을 개선하는 데 중요한 역할을 했습니다. 이번 블로그 글에서는 HTML5의 
      
    
    </summary>
    
      <category term="Programming" scheme="https://dullyshin.github.io/categories/Programming/"/>
    
      <category term="HTML" scheme="https://dullyshin.github.io/categories/Programming/HTML/"/>
    
    
      <category term="HTML5의 주요 기능과 변화" scheme="https://dullyshin.github.io/tags/HTML5%EC%9D%98-%EC%A3%BC%EC%9A%94-%EA%B8%B0%EB%8A%A5%EA%B3%BC-%EB%B3%80%ED%99%94/"/>
    
      <category term="시맨틱 태그" scheme="https://dullyshin.github.io/tags/%EC%8B%9C%EB%A7%A8%ED%8B%B1-%ED%83%9C%EA%B7%B8/"/>
    
      <category term="Semantic Tags" scheme="https://dullyshin.github.io/tags/Semantic-Tags/"/>
    
      <category term="멀티미디어 지원" scheme="https://dullyshin.github.io/tags/%EB%A9%80%ED%8B%B0%EB%AF%B8%EB%94%94%EC%96%B4-%EC%A7%80%EC%9B%90/"/>
    
      <category term="폼 요소의 개선" scheme="https://dullyshin.github.io/tags/%ED%8F%BC-%EC%9A%94%EC%86%8C%EC%9D%98-%EA%B0%9C%EC%84%A0/"/>
    
      <category term="Geolocation API" scheme="https://dullyshin.github.io/tags/Geolocation-API/"/>
    
      <category term="웹 소켓" scheme="https://dullyshin.github.io/tags/%EC%9B%B9-%EC%86%8C%EC%BC%93/"/>
    
      <category term="WebSockets" scheme="https://dullyshin.github.io/tags/WebSockets/"/>
    
      <category term="Web Fonts" scheme="https://dullyshin.github.io/tags/Web-Fonts/"/>
    
      <category term="Web Workers" scheme="https://dullyshin.github.io/tags/Web-Workers/"/>
    
  </entry>
  
  <entry>
    <title>웹 접근성 개선을 위한 HTML 태그 사용법</title>
    <link href="https://dullyshin.github.io/2024/11/12/HTML-webAccessibility/"/>
    <id>https://dullyshin.github.io/2024/11/12/HTML-webAccessibility/</id>
    <published>2024-11-12T02:44:23.000Z</published>
    <updated>2024-11-12T02:57:23.863Z</updated>
    
    <content type="html"><![CDATA[<p>웹 접근성(Accessibility)은 웹사이트나 웹 애플리케이션이 장애를 가진 사용자들도 원활하게 사용할 수 있도록 디자인하는 것입니다. HTML은 웹 접근성을 개선하는 데 중요한 역할을 합니다. 사용자가 다양한 장치, 화면 크기, 보조 기술을 사용하여 웹 페이지를 접근할 수 있도록 돕는 HTML 태그와 속성에 대해 알아보겠습니다.</p><hr><h2 id="웹-접근성-개선을-위한-HTML-태그-사용법"><a href="#웹-접근성-개선을-위한-HTML-태그-사용법" class="headerlink" title="웹 접근성 개선을 위한 HTML 태그 사용법"></a>웹 접근성 개선을 위한 HTML 태그 사용법</h2><p>웹 접근성(Accessibility)은 모든 사용자가 정보와 서비스를 동등하게 이용할 수 있도록 하는 중요한 개념입니다. 장애를 가진 사람들은 다양한 보조 기술(스크린 리더, 키보드 내비게이션 등)을 사용하여 웹 페이지에 접근합니다. 웹 개발자는 이를 고려하여 웹사이트를 설계하고 코딩해야 합니다. 오늘은 웹 접근성을 향상시키기 위한 HTML 태그와 속성들에 대해 알아보겠습니다.</p><h3 id="1-웹-접근성이란"><a href="#1-웹-접근성이란" class="headerlink" title="1. 웹 접근성이란?"></a>1. 웹 접근성이란?</h3><p>웹 접근성은 웹 페이지를 장애를 가진 사람들, 예를 들어 시각, 청각, 운동 장애가 있는 사용자들이 웹을 더 쉽게 이용할 수 있도록 돕는 설계 및 개발 기법입니다. 접근성 개선을 위한 방법은 여러 가지가 있지만, HTML을 잘 활용하면 큰 차이를 만들 수 있습니다.</p><h3 id="2-웹-접근성-개선을-위한-HTML-기본-요소들"><a href="#2-웹-접근성-개선을-위한-HTML-기본-요소들" class="headerlink" title="2. 웹 접근성 개선을 위한 HTML 기본 요소들"></a>2. 웹 접근성 개선을 위한 HTML 기본 요소들</h3><p>HTML 태그와 속성은 웹 접근성을 높이는 데 중요한 역할을 합니다. 웹 페이지가 시각 장애가 있는 사용자나 화면을 읽는 기술을 사용하는 사용자들에게 어떻게 더 친숙하게 다가갈 수 있을지 알아보겠습니다.</p><h4 id="2-1-의미-있는-HTML-구조-사용"><a href="#2-1-의미-있는-HTML-구조-사용" class="headerlink" title="2.1. 의미 있는 HTML 구조 사용"></a><strong>2.1. 의미 있는 HTML 구조 사용</strong></h4><p>HTML에서 의미 있는 태그를 사용하면 웹 페이지의 콘텐츠가 더 잘 구조화되어 사용자가 페이지를 더 쉽게 이해하고 탐색할 수 있습니다.</p><ul><li><strong>시맨틱 태그</strong>: HTML5에서는 <code>&lt;header&gt;</code>, <code>&lt;footer&gt;</code>, <code>&lt;main&gt;</code>, <code>&lt;article&gt;</code>, <code>&lt;section&gt;</code>, <code>&lt;nav&gt;</code> 등 시맨틱 태그를 사용하여 문서의 구조를 명확하게 정의할 수 있습니다. 이 태그들은 스크린 리더나 검색엔진에게 페이지 구조를 더 잘 이해할 수 있도록 돕습니다.</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">header</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h1</span>&gt;</span>웹 접근성 개선을 위한 가이드<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">header</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">main</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">section</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>HTML의 시맨틱 태그<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>시맨틱 태그는 웹 페이지의 구조를 명확히 정의합니다.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">main</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">footer</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>© 2024 웹 접근성 가이드<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">footer</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="2-2-alt-속성으로-이미지-설명-추가"><a href="#2-2-alt-속성으로-이미지-설명-추가" class="headerlink" title="2.2. alt 속성으로 이미지 설명 추가"></a><strong>2.2. <code>alt</code> 속성으로 이미지 설명 추가</strong></h4><p>시각 장애가 있는 사용자는 스크린 리더를 사용하여 웹 페이지의 콘텐츠를 듣습니다. 이미지는 이들에게는 정보로 전달되지 않기 때문에, <code>&lt;img&gt;</code> 태그에는 반드시 <strong><code>alt</code> 속성</strong>을 추가하여 이미지에 대한 설명을 제공해야 합니다.</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"flower.jpg"</span> <span class="attr">alt</span>=<span class="string">"색색의 꽃들이 피어있는 정원"</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><code>alt</code> 속성은 이미지의 내용을 설명합니다. 이미지가 로드되지 않거나 스크린 리더가 읽을 때 이 텍스트가 대신 제공됩니다.</li></ul><h4 id="2-3-폼-요소에-label-사용"><a href="#2-3-폼-요소에-label-사용" class="headerlink" title="2.3. 폼 요소에 label 사용"></a><strong>2.3. 폼 요소에 <code>label</code> 사용</strong></h4><p>폼 입력 필드에 대한 설명을 추가할 때 <code>label</code> 태그를 사용하는 것은 웹 접근성에 매우 중요합니다. <code>label</code> 태그는 해당 입력 필드를 설명하고, 사용자가 폼을 더 쉽게 이해하고 작성할 수 있게 도와줍니다.</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"name"</span>&gt;</span>이름:<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">id</span>=<span class="string">"name"</span> <span class="attr">name</span>=<span class="string">"name"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><code>label</code> 태그는 <code>for</code> 속성을 사용하여 특정 입력 필드와 연결됩니다. 이를 통해 화면 리더가 폼 필드를 올바르게 읽을 수 있습니다.</li></ul><h4 id="2-4-ARIA-Accessible-Rich-Internet-Applications-속성-사용"><a href="#2-4-ARIA-Accessible-Rich-Internet-Applications-속성-사용" class="headerlink" title="2.4. ARIA(Accessible Rich Internet Applications) 속성 사용"></a><strong>2.4. ARIA(Accessible Rich Internet Applications) 속성 사용</strong></h4><p>ARIA는 동적인 웹 콘텐츠와 애플리케이션을 보다 접근성 높게 만들 수 있는 HTML 속성입니다. 예를 들어, 동적인 콘텐츠가 업데이트될 때 이를 스크린 리더가 인식할 수 있도록 도와줍니다.</p><ul><li><strong><code>aria-label</code></strong>: 요소에 설명을 추가할 수 있는 속성입니다.</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">aria-label</span>=<span class="string">"닫기"</span>&gt;</span>X<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><strong><code>aria-live</code></strong>: 동적으로 변화하는 콘텐츠가 있을 때 이를 사용자에게 알리는 데 사용됩니다.</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">aria-live</span>=<span class="string">"polite"</span>&gt;</span>새로운 알림이 도착했습니다!<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="2-5-키보드-내비게이션-고려하기"><a href="#2-5-키보드-내비게이션-고려하기" class="headerlink" title="2.5. 키보드 내비게이션 고려하기"></a><strong>2.5. 키보드 내비게이션 고려하기</strong></h4><p>모든 사용자가 마우스를 사용할 수 있는 것은 아니므로, HTML 요소가 키보드 내비게이션을 지원하도록 해야 합니다. 예를 들어, 링크나 버튼은 기본적으로 키보드 내비게이션을 지원하지만, 다른 사용자 정의 요소들도 <strong><code>tabindex</code></strong> 속성을 사용해 포커스를 맞출 수 있습니다.</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">tabindex</span>=<span class="string">"0"</span>&gt;</span>누르세요<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><code>tabindex</code> 속성은 키보드 내비게이션 순서를 정의합니다. 0을 사용하면 기본 순서에 맞게 포커스가 설정됩니다.</li></ul><h4 id="2-6-텍스트의-명확한-구분"><a href="#2-6-텍스트의-명확한-구분" class="headerlink" title="2.6. 텍스트의 명확한 구분"></a><strong>2.6. 텍스트의 명확한 구분</strong></h4><p>웹 페이지에서 텍스트를 명확하게 구분하는 것은 중요한 접근성 요소입니다. 시각적으로 구분되는 텍스트는 스크린 리더 사용자가 텍스트를 정확히 이해할 수 있도록 돕습니다.</p><ul><li><strong><code>&lt;h1&gt;</code> ~ <code>&lt;h6&gt;</code></strong>: 제목 태그는 웹 페이지의 구조를 명확하게 정의합니다. 제목 태그는 콘텐츠의 계층 구조를 나타내어 스크린 리더가 콘텐츠를 잘 구분하도록 돕습니다.</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>주요 제목<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>부제목<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="2-7-콘텐츠의-색상-대비-강화"><a href="#2-7-콘텐츠의-색상-대비-강화" class="headerlink" title="2.7. 콘텐츠의 색상 대비 강화"></a><strong>2.7. 콘텐츠의 색상 대비 강화</strong></h4><p>시각적으로 콘텐츠를 읽기 어려운 사용자들을 위해 텍스트와 배경 간에 충분한 색상 대비가 필요합니다. HTML에서 색상 대비를 설정하는 것은 스타일링(CSS)에서 중요한 부분이지만, HTML에서 기본적인 이해는 필수입니다.</p><ul><li>텍스트와 배경 색상은 최소 4.5:1 이상의 대비를 유지해야 합니다. 이를 통해 색맹 사용자나 시력이 약한 사용자들이 콘텐츠를 읽기 더 수월하게 됩니다.</li></ul><h3 id="3-웹-접근성-테스트-도구-활용"><a href="#3-웹-접근성-테스트-도구-활용" class="headerlink" title="3. 웹 접근성 테스트 도구 활용"></a>3. 웹 접근성 테스트 도구 활용</h3><p>웹 접근성을 개선했다고 하더라도, 실제로 접근성 문제를 놓칠 수 있습니다. 다양한 웹 접근성 테스트 도구를 사용하여 웹사이트의 접근성을 점검하는 것이 중요합니다.</p><ul><li><strong>WAVE (Web Accessibility Evaluation Tool)</strong>: 웹 페이지에서 접근성 문제를 자동으로 분석해주는 도구입니다.</li><li><strong>axe</strong>: 크롬 확장 프로그램으로 웹 페이지의 접근성 문제를 검사할 수 있습니다.</li></ul><h3 id="4-결론"><a href="#4-결론" class="headerlink" title="4. 결론"></a>4. 결론</h3><p>웹 접근성은 단순히 장애를 가진 사람들을 위한 기능이 아니라, 모든 사용자가 편리하게 웹을 사용할 수 있도록 돕는 중요한 요소입니다. HTML에서 제공하는 다양한 태그와 속성들을 적절히 활용하면 웹 페이지의 접근성을 크게 향상시킬 수 있습니다. 올바른 HTML 작성은 웹 개발자에게 필요한 기본적인 책임이자, 더 나은 웹 환경을 만드는 첫 걸음입니다.</p><h4 id="Related-Posts"><a href="#Related-Posts" class="headerlink" title="Related Posts"></a>Related Posts</h4><ul><li><a href="/2024/11/12/HTML-basic-grammer/" title="HTML의 기본문법 웹 페이지를 만드는 첫걸음">HTML의 기본문법 웹 페이지를 만드는 첫걸음</a></li><li><a href="/2019/08/07/HTML-table/" title="HTML 간단하게 표 만들기">HTML 간단하게 표 만들기</a></li><li><a href="/2018/08/29/HTML-Editor/" title="HTML 에디터 (jsFiddle,메모장)">HTML 에디터 (jsFiddle,메모장)</a></li><li><a href="/2019/08/07/HTML-buttonLink/" title="HTML-버튼에 링크 거는 방법">HTML-버튼에 링크 거는 방법</a></li><li><a href="/2021/10/25/HTML-comment/" title="HTML - 주석 태그 <!-- -->">HTML - 주석 태그 <!-- --></a></li><li><a href="/2018/08/30/HTML-imgLink/" title="HTML 이미지 링크거는 법">HTML 이미지 링크거는 법</a></li><li><a href="/2018/08/27/HTML-MailtoTag/" title="Mailto 태그">Mailto 태그</a></li><li><a href="/2024/01/04/HTML-enter/" title="HTML 줄바꿈 입력하기">HTML 줄바꿈 입력하기</a></li></ul><h4 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h4><ul><li><a href="https://chatgpt.com/" target="_blank" rel="noopener">https://chatgpt.com/</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;웹 접근성(Accessibility)은 웹사이트나 웹 애플리케이션이 장애를 가진 사용자들도 원활하게 사용할 수 있도록 디자인하는 것입니다. HTML은 웹 접근성을 개선하는 데 중요한 역할을 합니다. 사용자가 다양한 장치, 화면 크기, 보조 기술을
      
    
    </summary>
    
      <category term="Programming" scheme="https://dullyshin.github.io/categories/Programming/"/>
    
      <category term="HTML" scheme="https://dullyshin.github.io/categories/Programming/HTML/"/>
    
    
      <category term="웹 접근성 개선" scheme="https://dullyshin.github.io/tags/%EC%9B%B9-%EC%A0%91%EA%B7%BC%EC%84%B1-%EA%B0%9C%EC%84%A0/"/>
    
      <category term="HTML 태그 사용법" scheme="https://dullyshin.github.io/tags/HTML-%ED%83%9C%EA%B7%B8-%EC%82%AC%EC%9A%A9%EB%B2%95/"/>
    
  </entry>
  
  <entry>
    <title>HTML의 기본문법 웹 페이지를 만드는 첫걸음</title>
    <link href="https://dullyshin.github.io/2024/11/12/HTML-basic-grammer/"/>
    <id>https://dullyshin.github.io/2024/11/12/HTML-basic-grammer/</id>
    <published>2024-11-12T02:38:13.000Z</published>
    <updated>2024-11-12T04:31:23.370Z</updated>
    
    <content type="html"><![CDATA[<h2 id="HTML의-기본문법-웹-페이지를-만드는-첫걸음"><a href="#HTML의-기본문법-웹-페이지를-만드는-첫걸음" class="headerlink" title="HTML의 기본문법: 웹 페이지를 만드는 첫걸음"></a>HTML의 기본문법: 웹 페이지를 만드는 첫걸음</h2><p>웹 페이지를 구성하는 데 필요한 가장 중요한 언어, <strong>HTML</strong>(HyperText Markup Language)은 웹 개발의 기초입니다. HTML은 웹 페이지의 구조를 정의하고, 웹 브라우저에게 콘텐츠가 어떻게 표시될지 알려주는 역할을 합니다. 이 글에서는 HTML의 기본적인 문법과 주요 요소들을 소개하고, HTML로 웹 페이지를 만드는 방법을 단계별로 설명합니다.</p><h3 id="1-HTML이란-무엇인가"><a href="#1-HTML이란-무엇인가" class="headerlink" title="1. HTML이란 무엇인가?"></a>1. HTML이란 무엇인가?</h3><p>HTML은 웹 페이지의 구조를 정의하는 언어로, <strong>태그(tag)</strong>를 사용해 콘텐츠를 구성합니다. HTML은 단순히 문서를 서술하는 마크업 언어로, 페이지에 포함될 텍스트, 이미지, 링크 등 다양한 요소들을 정의하는 데 사용됩니다.</p><h3 id="2-HTML-문서의-기본-구조"><a href="#2-HTML-문서의-기본-구조" class="headerlink" title="2. HTML 문서의 기본 구조"></a>2. HTML 문서의 기본 구조</h3><p>HTML 문서는 기본적으로 다음과 같은 구조를 가지고 있습니다:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"ko"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>HTML 기본 문법<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>HTML 문서의 기본 구조<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>HTML은 웹 페이지의 구조를 정의하는 마크업 언어입니다.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>이 코드에서는 HTML 문서가 어떻게 구성되는지 한눈에 볼 수 있습니다.</p><h4 id="1-1-DOCTYPE-선언"><a href="#1-1-DOCTYPE-선언" class="headerlink" title="1.1. DOCTYPE 선언"></a><strong>1.1. DOCTYPE 선언</strong></h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br></pre></td></tr></table></figure><ul><li>문서가 HTML5 형식임을 선언합니다. 이 선언은 HTML 문서의 맨 위에 반드시 있어야 하며, 브라우저에게 HTML5 표준을 사용한다고 알려주는 역할을 합니다.</li></ul><h4 id="1-2-lt-html-gt-태그"><a href="#1-2-lt-html-gt-태그" class="headerlink" title="1.2. &lt;html&gt; 태그"></a><strong>1.2. <code>&lt;html&gt;</code> 태그</strong></h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"ko"</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>HTML 문서의 시작을 알리는 태그입니다. <code>lang</code> 속성은 문서의 언어를 지정합니다. 여기서는 <code>&quot;ko&quot;</code>로 설정하여 한국어 웹 페이지임을 나타냅니다.</li></ul><h4 id="1-3-lt-head-gt-태그"><a href="#1-3-lt-head-gt-태그" class="headerlink" title="1.3. &lt;head&gt; 태그"></a><strong>1.3. <code>&lt;head&gt;</code> 태그</strong></h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>HTML 기본 문법<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>문서에 대한 메타데이터를 정의하는 영역입니다. 주로 제목, 문자 인코딩, 뷰포트 설정 등을 포함합니다.<ul><li><code>&lt;meta charset=&quot;UTF-8&quot;&gt;</code>: 문자 인코딩을 UTF-8로 설정하여 다양한 언어를 지원하도록 합니다.</li><li><code>&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;</code>: 반응형 디자인을 위해 화면 크기와 배율을 설정합니다.</li><li><code>&lt;title&gt;</code>: 웹 페이지의 제목을 정의합니다. 이 제목은 브라우저의 탭에 표시됩니다.</li></ul></li></ul><h4 id="1-4-lt-body-gt-태그"><a href="#1-4-lt-body-gt-태그" class="headerlink" title="1.4. &lt;body&gt; 태그"></a><strong>1.4. <code>&lt;body&gt;</code> 태그</strong></h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>HTML 문서의 기본 구조<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>HTML은 웹 페이지의 구조를 정의하는 마크업 언어입니다.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>실제 웹 페이지에 표시되는 콘텐츠가 들어가는 부분입니다. 제목, 단락, 이미지 등 다양한 요소들이 이곳에 포함됩니다.</li></ul><h3 id="3-주요-HTML-태그-소개"><a href="#3-주요-HTML-태그-소개" class="headerlink" title="3. 주요 HTML 태그 소개"></a>3. 주요 HTML 태그 소개</h3><h4 id="3-1-텍스트-관련-태그"><a href="#3-1-텍스트-관련-태그" class="headerlink" title="3.1. 텍스트 관련 태그"></a><strong>3.1. 텍스트 관련 태그</strong></h4><p>HTML에서는 텍스트를 구조화할 수 있는 다양한 태그들이 있습니다. 예를 들어:</p><ul><li><p><strong><code>&lt;h1&gt;</code> ~ <code>&lt;h6&gt;</code></strong>: 제목 태그로, 숫자가 클수록 작은 제목을 의미합니다.</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>큰 제목<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>작은 제목<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p><strong><code>&lt;p&gt;</code></strong>: 단락을 정의하는 태그입니다.</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>이것은 문단입니다.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h4 id="3-2-링크와-이미지"><a href="#3-2-링크와-이미지" class="headerlink" title="3.2. 링크와 이미지"></a><strong>3.2. 링크와 이미지</strong></h4><ul><li><p><strong><code>&lt;a&gt;</code></strong>: 링크를 만들 때 사용합니다.</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"https://www.example.com"</span>&gt;</span>Example 사이트로 가기<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><code>href</code> 속성은 링크의 대상 URL을 지정합니다.</li></ul></li><li><p><strong><code>&lt;img&gt;</code></strong>: 이미지를 삽입할 때 사용합니다.</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"image.jpg"</span> <span class="attr">alt</span>=<span class="string">"설명 텍스트"</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><code>src</code> 속성은 이미지 파일의 경로를 지정하고, <code>alt</code> 속성은 이미지가 로드되지 않았을 때 대신 표시되는 텍스트를 정의합니다.</li></ul></li></ul><h4 id="3-3-목록-만들기"><a href="#3-3-목록-만들기" class="headerlink" title="3.3. 목록 만들기"></a><strong>3.3. 목록 만들기</strong></h4><ul><li><p><strong><code>&lt;ul&gt;</code></strong>: 순서 없는 목록(점 목록)을 만들 때 사용합니다.</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>첫 번째 항목<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>두 번째 항목<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p><strong><code>&lt;ol&gt;</code></strong>: 순서 있는 목록(번호 목록)을 만들 때 사용합니다.</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ol</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>첫 번째 항목<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>두 번째 항목<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h4 id="3-4-테이블-만들기"><a href="#3-4-테이블-만들기" class="headerlink" title="3.4. 테이블 만들기"></a><strong>3.4. 테이블 만들기</strong></h4><ul><li><p><strong><code>&lt;table&gt;</code></strong>: 테이블을 만들 때 사용합니다.</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span>&gt;</span>이름<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span>&gt;</span>나이<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>홍길동<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>25<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><code>&lt;tr&gt;</code>: 테이블 행을 정의합니다.</li><li><code>&lt;th&gt;</code>: 테이블 제목 셀을 정의합니다.</li><li><code>&lt;td&gt;</code>: 테이블 데이터 셀을 정의합니다.</li></ul></li></ul><h3 id="4-HTML-문법의-규칙"><a href="#4-HTML-문법의-규칙" class="headerlink" title="4. HTML 문법의 규칙"></a>4. HTML 문법의 규칙</h3><p>HTML 문법에서 지켜야 할 기본적인 규칙도 있습니다:</p><ul><li><strong>태그는 쌍을 이룬다</strong>: 대부분의 HTML 태그는 열고 닫는 태그가 쌍으로 존재해야 합니다. 예를 들어, <code>&lt;p&gt;...&lt;/p&gt;</code>, <code>&lt;h1&gt;...&lt;/h1&gt;</code>처럼 사용합니다.</li><li><strong>속성은 따옴표로 감싸야 한다</strong>: 태그 속성 값은 항상 따옴표로 감싸야 합니다.</li><li><strong>대소문자를 구분하지 않지만 소문자로 사용하는 것이 좋다</strong>: HTML 태그와 속성은 대소문자를 구분하지 않지만, 일반적으로 소문자를 사용하는 것이 관례입니다.</li></ul><h3 id="5-결론"><a href="#5-결론" class="headerlink" title="5. 결론"></a>5. 결론</h3><p>HTML은 웹 페이지의 기초가 되는 중요한 언어로, 다양한 태그와 속성을 활용하여 웹 페이지를 만들 수 있습니다. 이 글에서 소개한 기본적인 HTML 문법을 통해 간단한 웹 페이지를 만들 수 있으며, 더 복잡한 페이지를 만들기 위해 CSS, JavaScript와 함께 활용하는 방법도 배워나갈 수 있습니다.</p><h4 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h4><ul><li><a href="https://chatgpt.com/" target="_blank" rel="noopener">https://chatgpt.com/</a></li></ul><h4 id="Related-Posts"><a href="#Related-Posts" class="headerlink" title="Related Posts"></a>Related Posts</h4><ul><li><a href="/2019/08/07/HTML-table/" title="HTML 간단하게 표 만들기">HTML 간단하게 표 만들기</a></li><li><a href="/2018/08/29/HTML-Editor/" title="HTML 에디터 (jsFiddle,메모장)">HTML 에디터 (jsFiddle,메모장)</a></li><li><a href="/2019/08/07/HTML-buttonLink/" title="HTML-버튼에 링크 거는 방법">HTML-버튼에 링크 거는 방법</a></li><li><a href="/2021/10/25/HTML-comment/" title="HTML - 주석 태그 <!-- -->">HTML - 주석 태그 <!-- --></a></li><li><a href="/2018/08/30/HTML-imgLink/" title="HTML 이미지 링크거는 법">HTML 이미지 링크거는 법</a></li><li><a href="/2018/08/27/HTML-MailtoTag/" title="Mailto 태그">Mailto 태그</a></li><li><a href="/2024/01/04/HTML-enter/" title="HTML 줄바꿈 입력하기">HTML 줄바꿈 입력하기</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;HTML의-기본문법-웹-페이지를-만드는-첫걸음&quot;&gt;&lt;a href=&quot;#HTML의-기본문법-웹-페이지를-만드는-첫걸음&quot; class=&quot;headerlink&quot; title=&quot;HTML의 기본문법: 웹 페이지를 만드는 첫걸음&quot;&gt;&lt;/a&gt;HTML의 기본문법
      
    
    </summary>
    
      <category term="Programming" scheme="https://dullyshin.github.io/categories/Programming/"/>
    
      <category term="HTML" scheme="https://dullyshin.github.io/categories/Programming/HTML/"/>
    
    
      <category term="HTML 기초" scheme="https://dullyshin.github.io/tags/HTML-%EA%B8%B0%EC%B4%88/"/>
    
      <category term="HTML 기초적인 구조" scheme="https://dullyshin.github.io/tags/HTML-%EA%B8%B0%EC%B4%88%EC%A0%81%EC%9D%B8-%EA%B5%AC%EC%A1%B0/"/>
    
      <category term="웹 브라우져" scheme="https://dullyshin.github.io/tags/%EC%9B%B9-%EB%B8%8C%EB%9D%BC%EC%9A%B0%EC%A0%B8/"/>
    
      <category term="DOCTYPE" scheme="https://dullyshin.github.io/tags/DOCTYPE/"/>
    
      <category term="DOCTYPE html" scheme="https://dullyshin.github.io/tags/DOCTYPE-html/"/>
    
  </entry>
  
  <entry>
    <title>HTML-블록과 인라인</title>
    <link href="https://dullyshin.github.io/2024/01/08/HTML-BlockAndInline/"/>
    <id>https://dullyshin.github.io/2024/01/08/HTML-BlockAndInline/</id>
    <published>2024-01-08T11:32:06.000Z</published>
    <updated>2024-01-08T11:51:42.381Z</updated>
    
    <content type="html"><![CDATA[<h2 id="HTML-블록과-인라인"><a href="#HTML-블록과-인라인" class="headerlink" title="HTML-블록과 인라인"></a>HTML-블록과 인라인</h2><p>HTML의 모든 요소는 해당 요소가 웹 브라우저에 어떻게 보이는가를 결정짓는 display 속성을 가집니다.</p><p>대부분의 HTML 요소는 이러한 display 속성값으로 다음 두 가지 값 중 하나를 가지게 됩니다.</p><blockquote><ol><li>블록(block)</li><li>인라인(inline)</li></ol></blockquote><p>블록은 새로운 라인에서 시작하고 모든 줄을 사용하고, 인라인은 내용만큼만 자리를 사용합니다.</p><h3 id="블록-block-타입의-요소"><a href="#블록-block-타입의-요소" class="headerlink" title="블록(block) 타입의 요소"></a>블록(block) 타입의 요소</h3><p>display 속성값이 블록(block)인 요소는 언제나 새로운 라인(line)에서 시작하며, 해당 라인의 모든 너비를 차지합니다.</p><p class="codepen" data-height="300" data-default-tab="html,result" data-slug-hash="MWxyMaK" data-user="Dully-Dully" style="height: 300px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;">  <span>See the Pen <a href="https://codepen.io/Dully-Dully/pen/MWxyMaK" target="_blank" rel="noopener">  Untitled</a> by Dully Dully (<a href="https://codepen.io/Dully-Dully" target="_blank" rel="noopener">@Dully-Dully</a>)  on <a href="https://codepen.io" target="_blank" rel="noopener">CodePen</a>.</span></p><script async src="https://cpwebassets.codepen.io/assets/embed/ei.js"></script><blockquote><p><code>&lt;p&gt;</code>, <code>&lt;div&gt;</code>, <code>&lt;h&gt;</code>, <code>&lt;ul&gt;</code>, <code>&lt;ol&gt;</code>, <code>&lt;form&gt;</code> 요소는 display 속성값이 블록(block)인 대표적인 요소입니다.</p></blockquote><h3 id="lt-div-gt-요소"><a href="#lt-div-gt-요소" class="headerlink" title="&lt;div&gt;요소"></a><code>&lt;div&gt;</code>요소</h3><p><code>&lt;div&gt;</code>요소는 다른 HTML 요소들을 하나로 묶는 데 자주 사용되는 대표적인 블록(block) 요소입니다.</p><p><code>&lt;div&gt;</code>요소는 주로 여러 요소들의 스타일을 한 번에 적용하기 위해 사용됩니다.</p><p class="codepen" data-height="300" data-default-tab="html,result" data-slug-hash="eYXZwZd" data-user="Dully-Dully" style="height: 300px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;">  <span>See the Pen <a href="https://codepen.io/Dully-Dully/pen/eYXZwZd" target="_blank" rel="noopener">  block div tag</a> by Dully Dully (<a href="https://codepen.io/Dully-Dully" target="_blank" rel="noopener">@Dully-Dully</a>)  on <a href="https://codepen.io" target="_blank" rel="noopener">CodePen</a>.</span></p><script async src="https://cpwebassets.codepen.io/assets/embed/ei.js"></script><h3 id="인라인-inline-타입의-요소"><a href="#인라인-inline-타입의-요소" class="headerlink" title="인라인(inline) 타입의 요소"></a>인라인(inline) 타입의 요소</h3><p>display 속성값이 인라인(inline)인 요소는 새로운 라인(line)에서 시작하지 않습니다.</p><p>또한, 요소의 너비도 해당 라인 전체가 아닌 해당 HTML 요소의 내용(content)만큼만 차지합니다.</p><p class="codepen" data-height="300" data-default-tab="html,result" data-slug-hash="eYXZwdB" data-user="Dully-Dully" style="height: 300px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;">  <span>See the Pen <a href="https://codepen.io/Dully-Dully/pen/eYXZwdB" target="_blank" rel="noopener">  Untitled</a> by Dully Dully (<a href="https://codepen.io/Dully-Dully" target="_blank" rel="noopener">@Dully-Dully</a>)  on <a href="https://codepen.io" target="_blank" rel="noopener">CodePen</a>.</span></p><script async src="https://cpwebassets.codepen.io/assets/embed/ei.js"></script><blockquote><p><code>&lt;span&gt;</code>, <code>&lt;a&gt;</code>, <code>&lt;img&gt;</code>요소는 display 속성값이 인라인(inline)인 대표적인 요소입니다.</p></blockquote><h3 id="lt-span-gt-요소"><a href="#lt-span-gt-요소" class="headerlink" title="&lt;span&gt;요소"></a><code>&lt;span&gt;</code>요소</h3><p><span>요소는 텍스트(text)의 특정 부분을 묶는 데 자주 사용되는 인라인(inline) 요소입니다.</span></p><p><span>요소는 주로 텍스트의 특정 부분에 따로 스타일을 적용하기 위해 사용됩니다.</span></p><p class="codepen" data-height="300" data-default-tab="html,result" data-slug-hash="poYyXRg" data-user="Dully-Dully" style="height: 300px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;">  <span>See the Pen <a href="https://codepen.io/Dully-Dully/pen/poYyXRg" target="_blank" rel="noopener">  inline span tag 2</a> by Dully Dully (<a href="https://codepen.io/Dully-Dully" target="_blank" rel="noopener">@Dully-Dully</a>)  on <a href="https://codepen.io" target="_blank" rel="noopener">CodePen</a>.</span></p><script async src="https://cpwebassets.codepen.io/assets/embed/ei.js"></script><h4 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h4><ul><li><a href="https://tcpschool.com/html/html_space_blockInline" target="_blank" rel="noopener">Tcpschool</a></li></ul><h4 id="Related-Posts"><a href="#Related-Posts" class="headerlink" title="Related Posts"></a>Related Posts</h4><ul><li><a href="/2019/08/07/HTML-table/" title="HTML 간단하게 표 만들기">HTML 간단하게 표 만들기</a></li><li><a href="/2018/08/29/HTML-Editor/" title="HTML 에디터 (jsFiddle,메모장)">HTML 에디터 (jsFiddle,메모장)</a></li><li><a href="/2019/08/07/HTML-buttonLink/" title="HTML-버튼에 링크 거는 방법">HTML-버튼에 링크 거는 방법</a></li><li><a href="/2021/10/25/HTML-comment/" title="HTML - 주석 태그 <!-- -->">HTML - 주석 태그 <!-- --></a></li><li><a href="/2018/08/30/HTML-imgLink/" title="HTML 이미지 링크거는 법">HTML 이미지 링크거는 법</a></li><li><a href="/2018/08/27/HTML-MailtoTag/" title="Mailto 태그">Mailto 태그</a></li><li><a href="/2024/01/04/HTML-enter/" title="HTML 줄바꿈 입력하기">HTML 줄바꿈 입력하기</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;HTML-블록과-인라인&quot;&gt;&lt;a href=&quot;#HTML-블록과-인라인&quot; class=&quot;headerlink&quot; title=&quot;HTML-블록과 인라인&quot;&gt;&lt;/a&gt;HTML-블록과 인라인&lt;/h2&gt;&lt;p&gt;HTML의 모든 요소는 해당 요소가 웹 브라우저에 어떻
      
    
    </summary>
    
      <category term="Programming" scheme="https://dullyshin.github.io/categories/Programming/"/>
    
      <category term="HTML" scheme="https://dullyshin.github.io/categories/Programming/HTML/"/>
    
    
      <category term="HTML 블록과 인라인" scheme="https://dullyshin.github.io/tags/HTML-%EB%B8%94%EB%A1%9D%EA%B3%BC-%EC%9D%B8%EB%9D%BC%EC%9D%B8/"/>
    
      <category term="HTML span" scheme="https://dullyshin.github.io/tags/HTML-span/"/>
    
      <category term="HTML div" scheme="https://dullyshin.github.io/tags/HTML-div/"/>
    
      <category term="HTML 블록" scheme="https://dullyshin.github.io/tags/HTML-%EB%B8%94%EB%A1%9D/"/>
    
      <category term="HTML 인라인" scheme="https://dullyshin.github.io/tags/HTML-%EC%9D%B8%EB%9D%BC%EC%9D%B8/"/>
    
  </entry>
  
  <entry>
    <title>HTML 줄바꿈 입력하기</title>
    <link href="https://dullyshin.github.io/2024/01/04/HTML-enter/"/>
    <id>https://dullyshin.github.io/2024/01/04/HTML-enter/</id>
    <published>2024-01-04T11:32:16.000Z</published>
    <updated>2024-01-08T11:32:53.228Z</updated>
    
    <content type="html"><![CDATA[<h1 id="HTML-줄바꿈-사용하기"><a href="#HTML-줄바꿈-사용하기" class="headerlink" title="HTML 줄바꿈 사용하기"></a>HTML 줄바꿈 사용하기</h1><p>HTML에서는 줄바꿈을 사용할때 태그를 이용하여 줄을 변경할 수 있습니다.</p><blockquote><p><code>&lt;br&gt;</code><br><code>&lt;p&gt;&lt;/p&gt;</code><br><code>&lt;pre&gt;&lt;/pre&gt;</code></p></blockquote><p>더 자세한 설명은 아래에서 확인 할 수 있습니다.</p><h2 id="lt-br-gt"><a href="#lt-br-gt" class="headerlink" title="&lt;br&gt;"></a><code>&lt;br&gt;</code></h2><p>br 태그는 ‘break’(휴식)의 약자로 단순히 HTML에서 줄바꿈을 할 때 사용됩니다.여러개의 <code>&lt;br&gt;</code> 태그를 입력하면 입력된 갯수만큼 줄바꿈이 실행되죠.다른 태그들과 달리 열고<code>&lt;br&gt;</code> 닫는<code>&lt;/br&gt;</code> 태그가 존재하지 않고 그냥 <code>&lt;br&gt;</code> 태그만 써 주어도 무방합니다.</p><p class="codepen" data-height="300" data-default-tab="html,result" data-slug-hash="abMdVvq" data-user="Dully-Dully" style="height: 300px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;">  <span>See the Pen <a href="https://codepen.io/Dully-Dully/pen/abMdVvq" target="_blank" rel="noopener">  HTML br tag</a> by Dully Dully (<a href="https://codepen.io/Dully-Dully" target="_blank" rel="noopener">@Dully-Dully</a>)  on <a href="https://codepen.io" target="_blank" rel="noopener">CodePen</a>.</span></p><script async src="https://cpwebassets.codepen.io/assets/embed/ei.js"></script><p>문단 사이에 여백을 두기 위한  용도로 <br>을 사용하지 마세요. 대신 </p><p> 요소로 감싼 후 CSS의 margin 속성으로 여백의 크기를 조절하세요.</p><h2 id="lt-p-gt-lt-p-gt"><a href="#lt-p-gt-lt-p-gt" class="headerlink" title="&lt;p&gt;&lt;/p&gt;"></a><code>&lt;p&gt;&lt;/p&gt;</code></h2><p>p 태그는 ‘paragraph’(단락)의 약자로, html에서 문단을 표현 할 때 사용됩니다. <code>&lt;p&gt;</code>와  <code>&lt;/p&gt;</code> 태그로 내용을 감싸면, 내용의 위와 아래쪽에 일정 크기의 공백이 생깁니다.</p><p class="codepen" data-height="300" data-default-tab="html,result" data-slug-hash="zYbrPrP" data-user="Dully-Dully" style="height: 300px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;">  <span>See the Pen <a href="https://codepen.io/Dully-Dully/pen/zYbrPrP" target="_blank" rel="noopener">  HTML p tag</a> by Dully Dully (<a href="https://codepen.io/Dully-Dully" target="_blank" rel="noopener">@Dully-Dully</a>)  on <a href="https://codepen.io" target="_blank" rel="noopener">CodePen</a>.</span></p><script async src="https://cpwebassets.codepen.io/assets/embed/ei.js"></script><p>이것은 </p><p>와 </p> 태그 위와 아래쪽에 일정 크기의 공백이 생긴 것으로이 공백의 크기는 css의 margin 속성을 이용하여 조정할 수도 있습니다.<p></p><h2 id="lt-pre-gt-lt-pre-gt"><a href="#lt-pre-gt-lt-pre-gt" class="headerlink" title="&lt;pre&gt;&lt;/pre&gt;"></a><code>&lt;pre&gt;&lt;/pre&gt;</code></h2><p>pre는 ‘preformatted’(먼저 포멧 된) 약자로, <code>&lt;pre&gt;&lt;/pre&gt;</code> 태그 내에 있는 엔터와 스페이스가 그대로 웹 브라우저에 적용되어 보여지게 됩니다.</p><p class="codepen" data-height="300" data-default-tab="html,result" data-slug-hash="poYgdyN" data-user="Dully-Dully" style="height: 300px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;">  <span>See the Pen <a href="https://codepen.io/Dully-Dully/pen/poYgdyN" target="_blank" rel="noopener">  HTML pre tag</a> by Dully Dully (<a href="https://codepen.io/Dully-Dully" target="_blank" rel="noopener">@Dully-Dully</a>)  on <a href="https://codepen.io" target="_blank" rel="noopener">CodePen</a>.</span></p><script async src="https://cpwebassets.codepen.io/assets/embed/ei.js"></script><p>위의 예에서 <code>&lt;pre&gt;&lt;/pre&gt;</code> 태그 안에서는 <code>&lt;p&gt;</code>태그나 <code>&lt;br&gt;</code>, <code>&amp;nbsp;</code> 태그를 사용하지 않아도 공백과 줄바꿈이 태그 안에 입력된 대로 적용되는 것을 볼 수 있습니다.이 태그는 보통 컴퓨터 소스 코드와 같은 특별한 내용을 표현하기 위해서 종종 사용됩니다.</p><h4 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h4><ul><li><a href="https://hianna.tistory.com/300" target="_blank" rel="noopener">어제 오늘 내일:티스토리</a></li><li><a href="https://developer.mozilla.org/ko/docs/Web/HTML/Element/br" target="_blank" rel="noopener">Mozilla</a></li></ul><h4 id="Related-Posts"><a href="#Related-Posts" class="headerlink" title="Related Posts"></a>Related Posts</h4><ul><li><a href="/2019/08/07/HTML-table/" title="HTML 간단하게 표 만들기">HTML 간단하게 표 만들기</a></li><li><a href="/2018/08/29/HTML-Editor/" title="HTML 에디터 (jsFiddle,메모장)">HTML 에디터 (jsFiddle,메모장)</a></li><li><a href="/2019/08/07/HTML-buttonLink/" title="HTML-버튼에 링크 거는 방법">HTML-버튼에 링크 거는 방법</a></li><li><a href="/2021/10/25/HTML-comment/" title="HTML - 주석 태그 <!-- -->">HTML - 주석 태그 <!-- --></a></li><li><a href="/2018/08/30/HTML-imgLink/" title="HTML 이미지 링크거는 법">HTML 이미지 링크거는 법</a></li><li><a href="/2018/08/27/HTML-MailtoTag/" title="Mailto 태그">Mailto 태그</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;HTML-줄바꿈-사용하기&quot;&gt;&lt;a href=&quot;#HTML-줄바꿈-사용하기&quot; class=&quot;headerlink&quot; title=&quot;HTML 줄바꿈 사용하기&quot;&gt;&lt;/a&gt;HTML 줄바꿈 사용하기&lt;/h1&gt;&lt;p&gt;HTML에서는 줄바꿈을 사용할때 태그를 이용하여
      
    
    </summary>
    
      <category term="Programming" scheme="https://dullyshin.github.io/categories/Programming/"/>
    
      <category term="HTML" scheme="https://dullyshin.github.io/categories/Programming/HTML/"/>
    
    
      <category term="HTML 줄바꿈" scheme="https://dullyshin.github.io/tags/HTML-%EC%A4%84%EB%B0%94%EA%BF%88/"/>
    
      <category term="HTML br" scheme="https://dullyshin.github.io/tags/HTML-br/"/>
    
      <category term="HTML p" scheme="https://dullyshin.github.io/tags/HTML-p/"/>
    
      <category term="HTML pre" scheme="https://dullyshin.github.io/tags/HTML-pre/"/>
    
  </entry>
  
  <entry>
    <title>JSTL-HTML안에서 IF문을 사용하고 싶을때</title>
    <link href="https://dullyshin.github.io/2024/01/03/JSTL-comment/"/>
    <id>https://dullyshin.github.io/2024/01/03/JSTL-comment/</id>
    <published>2024-01-03T12:15:56.000Z</published>
    <updated>2024-01-03T12:33:47.257Z</updated>
    
    <content type="html"><![CDATA[<h3 id="JSTL에서-주석-사용하기"><a href="#JSTL에서-주석-사용하기" class="headerlink" title="JSTL에서 주석 사용하기"></a>JSTL에서 주석 사용하기</h3><p>JSP 특성상 HTML ,Java ,JSP 코드가 모두 섞여 있으므로 주석도 혼용해서 사용할 수 있습니다.<br>그래서 때로는 JSTL 태그 안에 HTML 주석을 사용하면 <code>org.apache.jasper.JasperException</code> 오류가 발생할 수 있어서 JSTL 태그 안에는 JSP 주석을 사용하는 것이 좋다.</p><h3 id="HTML-주석"><a href="#HTML-주석" class="headerlink" title="HTML 주석"></a>HTML 주석</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 이것은 HTML 주석입니다. --&gt;</span><br></pre></td></tr></table></figure><p>HTML 주석은 원래 HTML 문서에 사용하는 주석이지만 JSP 문서에서도 사용할 수 있다.</p><p>웹 브라우저에서 소스보기를 (F12 ) 를 했을 때 주석 내용을 확인할 수 있으므로 주석의 내용이 외부로 노출되어도 상관없을 경우에 사용한다.</p><h3 id="JSP-주석"><a href="#JSP-주석" class="headerlink" title="JSP 주석"></a>JSP 주석</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;%-- 이것은 JSP 주석입니다 --%&gt;</span><br></pre></td></tr></table></figure><p>프로그램 코드와 관련한 주석이 필요할 때, HTML 주석과 달리 클라이언트로 전달되지 않는 주석이다.</p><h3 id="자바-스크립트릿-부분"><a href="#자바-스크립트릿-부분" class="headerlink" title="자바 스크립트릿 부분"></a>자바 스크립트릿 부분</h3><p>JSP 에서 순수 자바 코드를 기술하고자 할 때 <code>&lt; % ... %&gt;</code>를 사용해서 자바를 사용할 수 있다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt; %</span><br><span class="line">//이것은 자바 주석입니다.</span><br><span class="line">/*이것도 자바 주석입니다.*/</span><br><span class="line">%&gt;</span><br></pre></td></tr></table></figure><h4 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h4><ul><li><a href="https://jitolit.tistory.com/21" target="_blank" rel="noopener">jitolit</a></li></ul><h4 id="Related-Posts"><a href="#Related-Posts" class="headerlink" title="Related Posts"></a>Related Posts</h4><ul><li><a href="/2019/02/25/JSTL-ForEach/" title="(jstl) ForEach 문">(jstl) ForEach 문</a></li><li><a href="/2019/08/08/JSTL-substring/" title="JSTL-substring 뒤에서 문자 자르기">JSTL-substring 뒤에서 문자 자르기</a></li><li><a href="/2024/01/03/JSTL-htmltojstl/" title="JSTL-HTML안에서 IF문을 사용하고 싶을때">JSTL-HTML안에서 IF문을 사용하고 싶을때</a></li><li><a href="/2018/08/29/HTML-basic/" title="HTML 기초 알아봅시다!">HTML 기초 알아봅시다!</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;JSTL에서-주석-사용하기&quot;&gt;&lt;a href=&quot;#JSTL에서-주석-사용하기&quot; class=&quot;headerlink&quot; title=&quot;JSTL에서 주석 사용하기&quot;&gt;&lt;/a&gt;JSTL에서 주석 사용하기&lt;/h3&gt;&lt;p&gt;JSP 특성상 HTML ,Java ,JS
      
    
    </summary>
    
      <category term="Programming" scheme="https://dullyshin.github.io/categories/Programming/"/>
    
      <category term="JSTL" scheme="https://dullyshin.github.io/categories/Programming/JSTL/"/>
    
    
      <category term="HTML 주석" scheme="https://dullyshin.github.io/tags/HTML-%EC%A3%BC%EC%84%9D/"/>
    
      <category term="jstl 주석" scheme="https://dullyshin.github.io/tags/jstl-%EC%A3%BC%EC%84%9D/"/>
    
      <category term="jstl" scheme="https://dullyshin.github.io/tags/jstl/"/>
    
      <category term="org.apache.jasper.JasperException" scheme="https://dullyshin.github.io/tags/org-apache-jasper-JasperException/"/>
    
      <category term="JSP 주석" scheme="https://dullyshin.github.io/tags/JSP-%EC%A3%BC%EC%84%9D/"/>
    
      <category term="java 주석" scheme="https://dullyshin.github.io/tags/java-%EC%A3%BC%EC%84%9D/"/>
    
      <category term="자바 주석" scheme="https://dullyshin.github.io/tags/%EC%9E%90%EB%B0%94-%EC%A3%BC%EC%84%9D/"/>
    
  </entry>
  
  <entry>
    <title>JSTL-HTML안에서 IF문을 사용하고 싶을때</title>
    <link href="https://dullyshin.github.io/2024/01/03/JSTL-htmltojstl/"/>
    <id>https://dullyshin.github.io/2024/01/03/JSTL-htmltojstl/</id>
    <published>2024-01-03T11:57:13.000Z</published>
    <updated>2024-01-03T12:18:21.565Z</updated>
    
    <content type="html"><![CDATA[<h3 id="HTML안에서-IF문을-사용하고-싶을때"><a href="#HTML안에서-IF문을-사용하고-싶을때" class="headerlink" title="HTML안에서 IF문을 사용하고 싶을때"></a>HTML안에서 IF문을 사용하고 싶을때</h3><p>JSP 파일안에 HTML 코드인 IF문을 사용하고 싶어요.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">if (condition 1) &#123;</span><br><span class="line">    Some HTML code specific for condition 1</span><br><span class="line">&#125;</span><br><span class="line">else if (condition 2) &#123;</span><br><span class="line">    Some HTML code specific for condition 2</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>어떻게 해야 사용할 수 있나요? JSTL을 사용해야 하나요??</p><h3 id="HTML안에서-IF문을-사용하는-방법"><a href="#HTML안에서-IF문을-사용하는-방법" class="headerlink" title="HTML안에서 IF문을 사용하는 방법"></a>HTML안에서 IF문을 사용하는 방법</h3><p>네~ JSTL을 이용해서 &lt;c:if&gt;, &lt;c:choose&gt; 태그를 사용해서 위의 if문을 만들수 있습니다.</p><p><code>if</code>문을 사용한다면 이렇게 쓸 수 있습니다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;c:if test=&quot;condition&quot;&gt;&lt;/c:if&gt;</span><br></pre></td></tr></table></figure><p><code>if...else</code>문을 사용한다면 아래와 같죠.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;c:choose&gt;</span><br><span class="line">    &lt;c:when test=&quot;$&#123;param.enter==&apos;1&apos;&#125;&quot;&gt;</span><br><span class="line">        pizza.</span><br><span class="line">        &lt;br /&gt;</span><br><span class="line">    &lt;/c:when&gt;</span><br><span class="line">    &lt;c:otherwise&gt;</span><br><span class="line">        pizzas.</span><br><span class="line">        &lt;br /&gt;</span><br><span class="line">    &lt;/c:otherwise&gt;</span><br><span class="line">&lt;/c:choose&gt;</span><br></pre></td></tr></table></figure><p>만약 <code>&lt;c:choose&gt;</code>태그를 더 줄여서 사용하고 싶다면 아래와 같이 사용할 수 있어요.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$&#123;condition ? &apos;some text when true&apos; : &apos;some text when false&apos;&#125;</span><br><span class="line"></span><br><span class="line">&lt;!-- 위의 피자 choose 예시를 사용해 줄여봅시다. --&gt;</span><br><span class="line">$&#123;param.enter==&apos;1&apos; ? &apos;pizza.&apos; : &apos;pizzas.&apos;&#125;</span><br></pre></td></tr></table></figure><h4 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h4><ul><li><a href="https://stackoverflow.com/questions/5935892/if-else-within-jsp-or-jstl" target="_blank" rel="noopener">StackOverFlow</a></li></ul><h4 id="Related-Posts"><a href="#Related-Posts" class="headerlink" title="Related Posts"></a>Related Posts</h4><ul><li><a href="/2019/02/25/JSTL-ForEach/" title="(jstl) ForEach 문">(jstl) ForEach 문</a></li><li><a href="/2019/08/08/JSTL-substring/" title="JSTL-substring 뒤에서 문자 자르기">JSTL-substring 뒤에서 문자 자르기</a></li><li><a href="/2024/01/03/JSTL-comment/" title="JSTL-HTML안에서 IF문을 사용하고 싶을때">JSTL-HTML안에서 IF문을 사용하고 싶을때</a></li><li><a href="/2018/08/29/HTML-basic/" title="HTML 기초 알아봅시다!">HTML 기초 알아봅시다!</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;HTML안에서-IF문을-사용하고-싶을때&quot;&gt;&lt;a href=&quot;#HTML안에서-IF문을-사용하고-싶을때&quot; class=&quot;headerlink&quot; title=&quot;HTML안에서 IF문을 사용하고 싶을때&quot;&gt;&lt;/a&gt;HTML안에서 IF문을 사용하고 싶을때&lt;/
      
    
    </summary>
    
      <category term="Programming" scheme="https://dullyshin.github.io/categories/Programming/"/>
    
      <category term="JSTL" scheme="https://dullyshin.github.io/categories/Programming/JSTL/"/>
    
    
      <category term="jstl" scheme="https://dullyshin.github.io/tags/jstl/"/>
    
      <category term="JSTL if" scheme="https://dullyshin.github.io/tags/JSTL-if/"/>
    
      <category term="JSTL if문" scheme="https://dullyshin.github.io/tags/JSTL-if%EB%AC%B8/"/>
    
      <category term="jstl if else" scheme="https://dullyshin.github.io/tags/jstl-if-else/"/>
    
      <category term="jstl if else문" scheme="https://dullyshin.github.io/tags/jstl-if-else%EB%AC%B8/"/>
    
      <category term="if" scheme="https://dullyshin.github.io/tags/if/"/>
    
  </entry>
  
  <entry>
    <title>PostgreSQL - MySQL과 PostgreSQL의 차이점</title>
    <link href="https://dullyshin.github.io/2024/01/02/PostgreSQL-postgresql-vs-mysql/"/>
    <id>https://dullyshin.github.io/2024/01/02/PostgreSQL-postgresql-vs-mysql/</id>
    <published>2024-01-02T11:21:42.000Z</published>
    <updated>2024-01-02T12:16:00.233Z</updated>
    
    <content type="html"><![CDATA[<h3 id="MySQL과-PostgreSQL의-차이점"><a href="#MySQL과-PostgreSQL의-차이점" class="headerlink" title="MySQL과 PostgreSQL의 차이점"></a>MySQL과 PostgreSQL의 차이점</h3><blockquote><p>MySQL은 데이터를 행과 열이 있는 테이블로 저장할 수 있는 관계형 데이터베이스 관리 시스템입니다. 많은 웹 애플리케이션, 동적 웹 사이트 및 임베디드 시스템을 지원하는 널리 사용되는 시스템입니다.<br>PostgreSQL은 MySQL보다 더 많은 기능을 제공하는 <a href="http://https://ko.wikipedia.org/wiki/%EA%B0%9D%EC%B2%B4_%EA%B4%80%EA%B3%84_%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%B2%A0%EC%9D%B4%EC%8A%A4" target="_blank" rel="noopener">객체 관계 데이터베이스</a> 관리 시스템입니다. 데이터 유형, 확장성, 동시성 및 데이터 무결성에 있어 유연성이 더 뛰어납니다.</p></blockquote><iframe src="https://giphy.com/embed/5iWX6XFTndU0YP0Yut" width="480" height="480" frameborder="0" class="giphy-embed" allowfullscreen></iframe><p><a href="https://giphy.com/gifs/matrix-christopher-pindling-spaced-out-bandits-5iWX6XFTndU0YP0Yut" target="_blank" rel="noopener">via GIPHY</a></p><p><a href="https://aws.amazon.com/ko/compare/the-difference-between-mysql-vs-postgresql/" target="_blank" rel="noopener">AWS</a> 확인하면 위의 문구를 먼저 확인할 수 있습니다. 하지만 너무 복잡한 단어가 많이 사용되어 이해하기 어려웠습니다.. 결국 무엇을 사용할지 고민하는 과정에서 비교하는 것이니 바로 결론을 확인하자면 아래와 같습니다.</p><h3 id="결론"><a href="#결론" class="headerlink" title="결론"></a>결론</h3><p>결론적으로, PostgreSQL과 MySQL 중에서 하나를 선택하려면 다음과 같은 질문으로 정리할 수 있습니다.</p><p>복잡한 쿼리와 대규모 데이터베이스를 처리할 수 있는 풍부한 기능을 갖춘 데이터베이스가 필요하신가요? 확장성 면에서 <code>PostgreSQL</code>를 선택하는 것이 좋습니다.<br>설정 및 관리가 쉽고, 빠르고, 안정적이며, 이해도가 높은 더 간단한 데이터베이스가 필요하신가요? <code>MySQL</code>이 최적입니다.</p><p>PostgreSQL과 MySQL은 모두 고유한 특징과 기능을 갖춘 강력한 데이터베이스입니다. 어떤 것이 애플리케이션에 적합한지 결정할 때는 모든 요소를 고려하는 것이 중요합니다. 조금더 자세하게 확인하려면 아래에서 더 많은 정보를 확인할 수 있습니다.</p><h3 id="PostgreSQL과-MySQL의-유사점"><a href="#PostgreSQL과-MySQL의-유사점" class="headerlink" title="PostgreSQL과 MySQL의 유사점"></a>PostgreSQL과 MySQL의 유사점</h3><ul><li>둘 다 구조화된 쿼리 언어(SQL)를 인터페이스로 사용하여 데이터를 읽고 편집 가능</li><li>둘 다 오픈 소스이며 강력한 개발자 커뮤니티 지원 제공</li><li>두 제품 모두 데이터 백업, 복제 및 액세스 제어 기능이 내장되어 있음</li></ul><h3 id="PostgreSQL과-MySQL의-코딩은-어떻게-다른가요"><a href="#PostgreSQL과-MySQL의-코딩은-어떻게-다른가요" class="headerlink" title="PostgreSQL과 MySQL의 코딩은 어떻게 다른가요?"></a>PostgreSQL과 MySQL의 코딩은 어떻게 다른가요?</h3><p>다음은 PostgreSQL을 사용한 코딩과 MySQL을 사용한 코딩의 세 가지 차이점입니다.</p><ol><li><p>대소문자 구분<br>MySQL은 대소문자를 구분하지 않습니다. 쿼리 작성 시 데이터베이스에 표시되는 대로 문자열을 대문자로 표기할 필요가 없습니다. PostgreSQL은 대소문자를 구분합니다. 데이터베이스에 표시되는 것과 동일하게 문자열을 대문자로 표기하지 않으면 쿼리가 실패합니다.</p></li><li><p>기본 문자 집합 및 문자열<br>특정 MySQL 버전의 경우 문자 집합과 문자열을 UTF-8로 변환해야 합니다. PostgreSQL 경우 문자 집합과 문자열을 UTF-8로 변환할 필요가 없습니다. 게다가 UTF-8 구문은 PostgreSQL에서 허용되지 않습니다.</p></li><li><p>IF 및 IFNULL 문과 CASE 문의 비교<br>MySQL에서 IF 및 IFNULL 문을 사용해도 아무런 문제가 되지 않습니다. PostgreSQL에서는 IF 및 IFNULL 문은 사용할 수 없습니다. 대신 CASE 문을 사용해야 합니다.</p></li></ol><h3 id="PostgreSQL-속도와-MySQL-속도-어느-쪽이-더-빠를까요"><a href="#PostgreSQL-속도와-MySQL-속도-어느-쪽이-더-빠를까요" class="headerlink" title="PostgreSQL 속도와 MySQL 속도: 어느 쪽이 더 빠를까요?"></a>PostgreSQL 속도와 MySQL 속도: 어느 쪽이 더 빠를까요?</h3><p>PostgreSQL과 MySQL은 모두 빠른 것으로 알려져 있습니다. 그러나 데이터베이스가 서로 다른 사용 사례에 최적화되어 있기 때문에 어느 것이 더 빠르다고 말하기는 어렵습니다.</p><p>자세한 테스트 결과, Windows Skills는 MySQL이 더 빠르다고 말했고, Benchw는 PostgreSQL이 더 빠르다고 말했습니다. 결론적으로 대규모 데이터 세트, 복잡한 쿼리 및 읽기-쓰기 작업을 처리할 때 PostgreSQL이 더 빠르고, 읽기 전용 명령을 사용할 때는 MySQL이 더 빠릅니다.</p><h3 id="결정적인-차이점들"><a href="#결정적인-차이점들" class="headerlink" title="결정적인 차이점들"></a>결정적인 차이점들</h3><table><thead><tr><th>카테고리</th><th>MySQL</th><th>PostgreSQL</th></tr></thead><tbody><tr><td>데이터베이스 기술</td><td>MySQL은 순수 관계형 데이터베이스 관리 시스템입니다.</td><td>PostgreSQL은 객체 관계형 데이터베이스 관리 시스템입니다.</td></tr><tr><td>기능</td><td>MySQL은 보기, 트리거 및 프로시저와 같은 데이터베이스 기능을 제한적으로 지원합니다.</td><td>PostgreSQL은 구체화된 뷰, INSTEAD OF 트리거, 여러 언어의 저장 프로시저와 같은 최고급 데이터베이스 기능을 지원합니다.</td></tr><tr><td>데이터 유형</td><td>MySQL은 숫자, 문자, 날짜 및 시간, 공간, JSON 데이터 유형을 지원합니다.</td><td>PostgreSQL은 기하학, 열거형, 네트워크 주소, 배열, 범위, XML, hstore, 복합을 포함하여 모든 MySQL 데이터 유형을 지원합니다.</td></tr><tr><td>ACID 규정 준수</td><td>MySQL은 InnoDB 및 NDB 클러스터 스토리지 엔진에서만 ACID를 준수합니다.</td><td>PostgreSQL은 항상 ACID와 호환됩니다.</td></tr><tr><td>인덱스</td><td>MySQL은 B-트리 및 R-트리 인덱스를 지원합니다.</td><td>PostgreSQL은 트리와 함께 표현식 인덱스, 부분 인덱스, 해시 인덱스와 같은 여러 인덱스 유형을 지원합니다.</td></tr><tr><td>성능</td><td>MySQL은 높은 빈도의 읽기 작업 성능을 개선했습니다.</td><td>PostgreSQL은 높은 빈도의 쓰기 작업 성능을 개선했습니다.</td></tr><tr><td>초보자 지원</td><td>MySQL은 시작하기가 더 쉽습니다. 기술 지식이 없는 사용자를 위한 광범위한 도구 세트가 있습니다.</td><td>PostgreSQL은 시작하기가 더 복잡합니다. 기술 지식이 없는 사용자를 위한 제한된 도구 세트가 있습니다.</td></tr></tbody></table><h4 id="동시성-제어"><a href="#동시성-제어" class="headerlink" title="동시성 제어"></a>동시성 제어</h4><p>다중 버전 동시성 제어(MVCC)는 레코드의 중복 사본을 생성하여 동일한 데이터를 병렬로 안전하게 읽고 업데이트하는 고급 데이터베이스 기능입니다. MVCC를 사용하면 여러 사용자가 데이터 무결성을 손상시키지 않고 동일한 데이터를 동시에 읽고 수정할 수 있습니다.</p><p>MySQL 데이터베이스는 MVCC를 제공하지 않지만 PostgreSQL은 이 기능을 지원합니다.</p><h4 id="데이터-유형-지원"><a href="#데이터-유형-지원" class="headerlink" title="데이터 유형 지원"></a>데이터 유형 지원</h4><p>MySQL은 순수 관계형 데이터베이스입니다. 데이터 유형이 더 제한적이지만 지리 정보 시스템(GIS) 데이터를 위한 공간 확장 기능을 제공합니다.</p><p>반면 PostgreSQL은 객체 관계형 데이터베이스입니다. 즉, PostgreSQL에서는 데이터를 속성을 가진 객체로 저장할 수 있습니다. 객체는 Java 및 .NET과 같은 여러 프로그래밍 언어의 일반적인 데이터 유형입니다. 객체는 상위-하위 관계 및 상속과 같은 패러다임을 지원합니다.<br>더해서 PostgreSQL에는 배열, hstore, XML, JSON 및 기하학적 유형에 대한 지원을 포함하여 보다 광범위한 기본 제공 데이터 유형 집합이 있습니다. 따라서 이러한 데이터 유형이 필요한 특정 유형의 애플리케이션에 PostgreSQL을 더욱 다양하게 활용할 수 있습니다.</p><p>PostgreSQL을 사용하는 것은 데이터베이스 개발자에게 더 직관적입니다.</p><h4 id="ACID-규정-준수"><a href="#ACID-규정-준수" class="headerlink" title="ACID 규정 준수"></a>ACID 규정 준수</h4><p>원자성, 일관성, 격리성, 지속성(ACID)은 예상치 못한 오류가 발생한 후에도 데이터베이스를 유효한 상태로 유지하는 데이터베이스 속성입니다. 예를 들어, 많은 수의 행을 업데이트했는데 중간에 시스템이 실패하는 경우 행을 수정해서는 안 됩니다.</p><p>MySQL은 InnoDB 및 NDB 클러스터 스토리지 엔진 또는 소프트웨어 모듈과 함께 사용하는 경우에만 ACID 규정 준수를 제공합니다. PostgreSQL은 모든 구성에서 ACID와 완벽하게 호환됩니다.</p><h4 id="SQL-규정-준수"><a href="#SQL-규정-준수" class="headerlink" title="SQL 규정 준수"></a>SQL 규정 준수</h4><p>PostgreSQL은 높은 수준의 SQL 표준 준수로 잘 알려져 있습니다. SQL 표준을 엄격하게 준수하므로 다양한 플랫폼과 애플리케이션에서 보다 예측 가능한 동작을 구현할 수 있습니다.<br>MySQL은 전통적으로 엄격한 SQL 표준에서 약간의 편차가 있었지만, 최신 버전에서는 규정 준수가 개선되었으며 계속해서 그 격차를 해소하고 있습니다.</p><h4 id="성능"><a href="#성능" class="headerlink" title="성능"></a>성능</h4><p>MySQL은 역사적으로 읽기가 많은 워크로드에 선호되어 웹 애플리케이션과 웹사이트에 널리 사용되어 왔습니다.<br>PostgreSQL의 아키텍처는 복잡한 쿼리 및 분석 워크로드에 더 적합합니다. 고급 SQL 기능이 필요한 시나리오에서 우수한 성능을 발휘합니다.</p><h4 id="복제-및-고가용성"><a href="#복제-및-고가용성" class="headerlink" title="복제 및 고가용성"></a>복제 및 고가용성</h4><p>MySQL은 마스터-슬레이브 복제를 비롯한 다양한 복제 방법을 제공하지만 일부 클러스터링 솔루션에는 타사 도구가 필요할 수 있습니다.<br>PostgreSQL은 동기식 복제가 기본으로 제공되므로 고가용성과 데이터 이중화를 쉽게 달성할 수 있습니다.</p><h4 id="전체-텍스트-검색"><a href="#전체-텍스트-검색" class="headerlink" title="전체 텍스트 검색"></a>전체 텍스트 검색</h4><p>PostgreSQL에는 강력한 전체 텍스트 검색 기능이 기본으로 포함되어 있어 복잡한 텍스트 검색 작업을 수행할 수 있습니다.<br>MySQL도 전체 텍스트 검색을 지원하지만, 추가 구성과 InnoDB 또는 MyISAM과 같은 외부 엔진이 필요할 수 있습니다.</p><h4 id="저장-프로시저"><a href="#저장-프로시저" class="headerlink" title="저장 프로시저"></a>저장 프로시저</h4><p>저장 프로시저는 미리 작성하고 저장할 수 있는 구조화된 쿼리 언어(SQL) 쿼리 또는 코드 명령문입니다. 동일한 코드를 반복해서 재사용할 수 있으므로 데이터베이스 관리 작업이 더 효율적입니다.</p><p>MySQL과 PostgreSQL 모두 저장 프로시저를 지원하지만 PostgreSQL을 사용하면 SQL 이외의 언어로 작성된 저장 프로시저를 호출할 수 있습니다.</p><h4 id="외부-키-제약-조건-및-트리거"><a href="#외부-키-제약-조건-및-트리거" class="headerlink" title="외부 키 제약 조건 및 트리거"></a>외부 키 제약 조건 및 트리거</h4><p>트리거는 데이터베이스 관리 시스템에서 관련 이벤트가 발생할 때 자동으로 실행되는 저장 프로시저입니다.</p><p>PostgreSQL은 외부 키 제약 조건 및 트리거에 대한 고급 지원을 제공하므로 복잡한 데이터 무결성 및 비즈니스 규칙이 필요한 애플리케이션에 적합합니다.<br>MySQL은 외부 키 제약 조건과 트리거도 지원하지만, 역사적으로 이를 적용하는 데는 덜 엄격했습니다. SQL INSERT, UPDATE 및 DELETE 문에 AFTER 및 BEFORE 트리거만 사용할 수 있습니다. 즉, 사용자가 데이터를 수정하기 전이나 후에 프로시저가 자동으로 실행됩니다.</p><h4 id="라이선스"><a href="#라이선스" class="headerlink" title="라이선스"></a>라이선스</h4><p>PostgreSQL과 MySQL은 모두 오픈 소스이며 서로 다른 라이선스로 제공됩니다. PostgreSQL은 일반적으로 PostgreSQL 라이선스를 사용하며, MySQL은 과거에는 GNU 일반 공중 사용 허가서(GPL)에 따라 사용되었지만 현재는 상용 라이선스 옵션도 제공하고 있습니다.</p><p>충분한 비교를 한 후에 좋은 선택이 되었으면 좋겠네요! 좋은 하루 보내세요~</p><iframe src="https://giphy.com/embed/WIdK1v48oT0nC" width="480" height="480" frameborder="0" class="giphy-embed" allowfullscreen></iframe><p><a href="https://giphy.com/gifs/WIdK1v48oT0nC" target="_blank" rel="noopener">via GIPHY</a></p><h4 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h4><ul><li><a href="https://www.integrate.io/ko/blog/postgresql-vs-mysql-which-one-is-better-for-your-use-case-ko/" target="_blank" rel="noopener">Integrate</a></li><li><a href="https://aws.amazon.com/ko/compare/the-difference-between-mysql-vs-postgresql/" target="_blank" rel="noopener">AWS</a></li><li><a href="http://https://ko.wikipedia.org/wiki/%EA%B0%9D%EC%B2%B4_%EA%B4%80%EA%B3%84_%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%B2%A0%EC%9D%B4%EC%8A%A4" target="_blank" rel="noopener">위키백과</a></li></ul><h4 id="Related-Posts"><a href="#Related-Posts" class="headerlink" title="Related Posts"></a>Related Posts</h4><ul><li><a href="/2018/08/27/PostgreSQL-Basic/" title="PostgreSql 란?">PostgreSql 란?</a></li><li><a href="/2019/07/25/PostgreSQL-CDATA/" title="[java error]The content of elements must consist of well-formed character data or markup.">[java error]The content of elements must consist of well-formed character data or markup.</a></li><li><a href="/2019/02/20/MSSQL-InsertPlusOne/" title="(MS SQL) 삽입시Insert 최대값 추가 +1">(MS SQL) 삽입시Insert 최대값 추가 +1</a></li><li><a href="/2018/05/11/SQL-sqlBasic/" title="SQL basic">SQL basic</a></li><li><a href="/2021/02/04/PostgreSQL-Vacuum/" title="PostgreSQL - 베큠 `Vacuum` 간단한 소개">PostgreSQL - 베큠 `Vacuum` 간단한 소개</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;MySQL과-PostgreSQL의-차이점&quot;&gt;&lt;a href=&quot;#MySQL과-PostgreSQL의-차이점&quot; class=&quot;headerlink&quot; title=&quot;MySQL과 PostgreSQL의 차이점&quot;&gt;&lt;/a&gt;MySQL과 PostgreSQL의 차
      
    
    </summary>
    
      <category term="Programming" scheme="https://dullyshin.github.io/categories/Programming/"/>
    
      <category term="SQL" scheme="https://dullyshin.github.io/categories/Programming/SQL/"/>
    
    
      <category term="SQL" scheme="https://dullyshin.github.io/tags/SQL/"/>
    
      <category term="PostgreSQL_Basic" scheme="https://dullyshin.github.io/tags/PostgreSQL-Basic/"/>
    
      <category term="PostgreSQL" scheme="https://dullyshin.github.io/tags/PostgreSQL/"/>
    
      <category term="ostgresql-vs-mysql" scheme="https://dullyshin.github.io/tags/ostgresql-vs-mysql/"/>
    
      <category term="postgresql vs mysql" scheme="https://dullyshin.github.io/tags/postgresql-vs-mysql/"/>
    
      <category term="postgresql mysql 차이점" scheme="https://dullyshin.github.io/tags/postgresql-mysql-%EC%B0%A8%EC%9D%B4%EC%A0%90/"/>
    
      <category term="MySQL과 PostgreSQL의 차이점" scheme="https://dullyshin.github.io/tags/MySQL%EA%B3%BC-PostgreSQL%EC%9D%98-%EC%B0%A8%EC%9D%B4%EC%A0%90/"/>
    
  </entry>
  
  <entry>
    <title>Hexo - commands 코멘드</title>
    <link href="https://dullyshin.github.io/2023/08/22/Hexo-commands/"/>
    <id>https://dullyshin.github.io/2023/08/22/Hexo-commands/</id>
    <published>2023-08-22T11:33:01.000Z</published>
    <updated>2023-08-22T11:55:06.362Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Hexo-Commands-코멘드"><a href="#Hexo-Commands-코멘드" class="headerlink" title="Hexo - Commands 코멘드"></a>Hexo - Commands 코멘드</h1><h3 id="init"><a href="#init" class="headerlink" title="init"></a>init</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo init [folder]</span><br></pre></td></tr></table></figure><p>웹 사이트를 초기화합니다. <code>folder</code>가 준비되어 있지 않다면 Hexo는 현재 디렉토리에 웹 사이트를 세팅합니다.</p><h3 id="new"><a href="#new" class="headerlink" title="new"></a>new</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new [layout] &lt;title&gt;</span><br></pre></td></tr></table></figure><p>새 글(article)을 생성합니다. layout이 준비되어 있지 않다면, Hexo는 _config.yml에 정의된 default_layout을 사용합니다. 만약 title에 공백이 포함된다면 따옴표로 감싸주세요.</p><h3 id="generate"><a href="#generate" class="headerlink" title="generate"></a>generate</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>정적 파일들을 생성합니다.</p><table><thead><tr><th>옵션</th><th>설명</th></tr></thead><tbody><tr><td>-d, –deploy</td><td>생성이 종료된 후 deploy 합니다.</td></tr><tr><td>-w, –watch</td><td>파일의 변경사항을 감시(watch)합니다.</td></tr></tbody></table><p>위의 옵션을 사용하여 제가 주로 줄여서 사용하는 코맨드는 <code>$hexo g -d</code> 입니다.<br>그리하면 <code>g</code>로 정적파일을 생성한 후에 바로 <code>-d</code>배포되는 거지요.</p><h3 id="publish"><a href="#publish" class="headerlink" title="publish"></a>publish</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo publish [layout] &lt;filename&gt;</span><br></pre></td></tr></table></figure><p>작성한 내용을 배포합니다. 여기서 <code>[layout] &lt;filename&gt;</code>는 필수 인자는 아닙니다.</p><h3 id="server"><a href="#server" class="headerlink" title="server"></a>server</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>로컬 서버를 구동시킵니다. 기본적으로 <code>http://localhost:4000/</code> 를 사용합니다.</p><table><thead><tr><th>옵션</th><th>설명</th></tr></thead><tbody><tr><td>-p, –port</td><td>기본 포트를 덮어씁니다.</td></tr><tr><td>-s, –static</td><td>정적인 파일만 구동합니다.</td></tr><tr><td>-l, –log</td><td>Logger를 활성화 시킵니다. Logger 형식을 덮어씁니다.</td></tr></tbody></table><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$hexo server -p1234</span><br></pre></td></tr></table></figure><p>위와 같이 사용하면 <code>http://localhost:1234</code>의 주소로 포트를 변경할 수 있습니다.</p><h3 id="deploy"><a href="#deploy" class="headerlink" title="deploy"></a>deploy</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>웹 사이트를 deploy 합니다.</p><table><thead><tr><th>옵션</th><th>설명</th></tr></thead><tbody><tr><td>-g, –generate</td><td>Deploy 하기 전에 generate를 수행합니다.</td></tr></tbody></table><h3 id="render"><a href="#render" class="headerlink" title="render"></a>render</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo render &lt;file1&gt; [file2] ...</span><br></pre></td></tr></table></figure><p>파일을 렌더링합니다.</p><table><thead><tr><th>옵션</th><th>설명</th></tr></thead><tbody><tr><td>-o, –output</td><td>Output destination</td></tr></tbody></table><h3 id="migrate"><a href="#migrate" class="headerlink" title="migrate"></a>migrate</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo migrate &lt;type&gt;</span><br></pre></td></tr></table></figure><p>다른 블로그 시스템의 내용을 Hexo로 마이그레이션 합니다.</p><h3 id="clean"><a href="#clean" class="headerlink" title="clean"></a>clean</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo clean</span><br></pre></td></tr></table></figure><p>캐시 파일 (<code>db.json</code>) 및 생성된 파일들 (<code>public</code>) 을 삭제합니다.</p><h3 id="list"><a href="#list" class="headerlink" title="list"></a>list</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo list &lt;type&gt;</span><br></pre></td></tr></table></figure><p>경로(route) 목록을 보여줍니다.</p><h3 id="version"><a href="#version" class="headerlink" title="version"></a>version</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo version</span><br></pre></td></tr></table></figure><p>버전 정보를 보여줍니다.</p><p>#옵션</p><h3 id="안전-모드"><a href="#안전-모드" class="headerlink" title="안전 모드"></a>안전 모드</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo --safe</span><br></pre></td></tr></table></figure><p>플러그인과 스크립트를 불러오지 않습니다. 새로운 플러그인을 설치한 후 문제가 생기면 이 모드를 사용해 보시기 바랍니다.</p><h3 id="디버그-모드"><a href="#디버그-모드" class="headerlink" title="디버그 모드"></a>디버그 모드</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo --debug</span><br></pre></td></tr></table></figure><p>터미널에 verbose 로그 메시지를 출력하고 <code>debug.log</code> 파일에 저장합니다. Hexo에 문제 발생 시 사용해 보시기 바랍니다. 에러 발견 시 <a href="https://github.com/hexojs/hexo/issues/new" target="_blank" rel="noopener">raise a GitHub issue</a>에 등록해 주세요.</p><h3 id="Silent-모드"><a href="#Silent-모드" class="headerlink" title="Silent 모드"></a>Silent 모드</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo --silent</span><br></pre></td></tr></table></figure><p>터미널에 내용을 출력하지 않습니다.</p><h3 id="설정-파일의-변경-customizing"><a href="#설정-파일의-변경-customizing" class="headerlink" title="설정 파일의 변경(customizing)"></a>설정 파일의 변경(customizing)</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo --config custom.yml</span><br></pre></td></tr></table></figure><p><code>_config.yml</code> 대신 커스터미이징한 설정 파일을 사용할 수 있습니다.</p><h3 id="Draft-포스트-표시"><a href="#Draft-포스트-표시" class="headerlink" title="Draft 포스트 표시"></a>Draft 포스트 표시</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo --draft</span><br></pre></td></tr></table></figure><p>Draft 포스트를 보여줍니다(<code>source/_drafts</code> 폴더에 저장되어 있습니다).</p><h3 id="현재-작업-디렉토리의-변경-customizing"><a href="#현재-작업-디렉토리의-변경-customizing" class="headerlink" title="현재 작업 디렉토리의 변경(customizing)"></a>현재 작업 디렉토리의 변경(customizing)</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo --cwd /path/to/cwd</span><br></pre></td></tr></table></figure><p>현재 작업 디렉토리의 경로를 변경할 수 있습니다.</p><h4 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h4><ul><li><a href="https://hexo.io/ko/docs/commands.html" target="_blank" rel="noopener">https://hexo.io/ko/docs/commands.html</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Hexo-Commands-코멘드&quot;&gt;&lt;a href=&quot;#Hexo-Commands-코멘드&quot; class=&quot;headerlink&quot; title=&quot;Hexo - Commands 코멘드&quot;&gt;&lt;/a&gt;Hexo - Commands 코멘드&lt;/h1&gt;&lt;h3 id=&quot;i
      
    
    </summary>
    
      <category term="Hexo" scheme="https://dullyshin.github.io/categories/Hexo/"/>
    
    
      <category term="commands" scheme="https://dullyshin.github.io/tags/commands/"/>
    
      <category term="hexo commands" scheme="https://dullyshin.github.io/tags/hexo-commands/"/>
    
      <category term="헥소 코멘드" scheme="https://dullyshin.github.io/tags/%ED%97%A5%EC%86%8C-%EC%BD%94%EB%A9%98%EB%93%9C/"/>
    
      <category term="헥소 코맨드" scheme="https://dullyshin.github.io/tags/%ED%97%A5%EC%86%8C-%EC%BD%94%EB%A7%A8%EB%93%9C/"/>
    
      <category term="hexo 코멘드" scheme="https://dullyshin.github.io/tags/hexo-%EC%BD%94%EB%A9%98%EB%93%9C/"/>
    
      <category term="hexo 코맨드" scheme="https://dullyshin.github.io/tags/hexo-%EC%BD%94%EB%A7%A8%EB%93%9C/"/>
    
  </entry>
  
  <entry>
    <title>PostgreSQL 주석 (comment 코멘트)</title>
    <link href="https://dullyshin.github.io/2023/08/21/PostgreSQL-comment/"/>
    <id>https://dullyshin.github.io/2023/08/21/PostgreSQL-comment/</id>
    <published>2023-08-21T13:37:36.000Z</published>
    <updated>2023-08-21T14:04:28.460Z</updated>
    
    <content type="html"><![CDATA[<h1 id="PostgreSQL-주석-남기기"><a href="#PostgreSQL-주석-남기기" class="headerlink" title="PostgreSQL - 주석 남기기"></a>PostgreSQL - 주석 남기기</h1><p>다른 개발자들과 협업을 위해서나 자신이 무엇을 위해 쿼리를 적어 놓았는지 기억 및 구분하기 위해서 주로 사용합니다. 회사에 따른 주석 표준이 있을 수 있습니다.</p><p><code>--</code>으로 한줄을 주석 처리할때 사용합니다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-- 여기 밑에 직원 테이블 조회하는 쿼리 작업해주세요~</span><br></pre></td></tr></table></figure><p>여러 줄의 코멘트를 작성 하려면 <code>/*</code>으로 시작해서 <code>*/</code>으로 닫아주면 됩니다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">/*</span><br><span class="line">각 도시의 일평균 기온을 구하는 방법</span><br><span class="line">여기서 AS 예약어는 생략되어도 되고, 이것은 그 칼럼의 새로운 이름을 지정할 때 사용합니다.</span><br><span class="line">*/</span><br><span class="line"></span><br><span class="line">SELECT city, (temp_hi+temp_lo)/2 AS temp_avg, date FROM weather;</span><br></pre></td></tr></table></figure><h4 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h4><ul><li><a href="https://www.postgresql.kr/docs/13/tutorial-select.html" target="_blank" rel="noopener">https://www.postgresql.kr/docs/13/tutorial-select.html</a></li><li><a href="https://www.devkuma.com/docs/postgresql/%EC%A3%BC%EC%84%9D-comment-%EC%9E%91%EC%84%B1/" target="_blank" rel="noopener">https://www.devkuma.com/docs/postgresql/%EC%A3%BC%EC%84%9D-comment-%EC%9E%91%EC%84%B1/</a></li></ul><h4 id="Related-Posts"><a href="#Related-Posts" class="headerlink" title="Related Posts"></a>Related Posts</h4><ul><li><a href="/2018/08/27/PostgreSQL-Basic/" title="PostgreSql 란?">PostgreSql 란?</a></li><li><a href="/2019/07/25/PostgreSQL-CDATA/" title="[java error]The content of elements must consist of well-formed character data or markup.">[java error]The content of elements must consist of well-formed character data or markup.</a></li><li><a href="/2019/02/20/MSSQL-InsertPlusOne/" title="(MS SQL) 삽입시Insert 최대값 추가 +1">(MS SQL) 삽입시Insert 최대값 추가 +1</a></li><li><a href="/2018/05/11/SQL-sqlBasic/" title="SQL basic">SQL basic</a></li><li><a href="/2021/02/04/PostgreSQL-Vacuum/" title="PostgreSQL - 베큠 `Vacuum` 간단한 소개">PostgreSQL - 베큠 `Vacuum` 간단한 소개</a></li><li><a href="/2023/08/12/PostgreSQL-nvl/" title="PostgreSQL-coalesce함수 (오라클 nvl함수 대체)">PostgreSQL-coalesce함수 (오라클 nvl함수 대체)</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;PostgreSQL-주석-남기기&quot;&gt;&lt;a href=&quot;#PostgreSQL-주석-남기기&quot; class=&quot;headerlink&quot; title=&quot;PostgreSQL - 주석 남기기&quot;&gt;&lt;/a&gt;PostgreSQL - 주석 남기기&lt;/h1&gt;&lt;p&gt;다른 개발자
      
    
    </summary>
    
      <category term="Programming" scheme="https://dullyshin.github.io/categories/Programming/"/>
    
      <category term="SQL" scheme="https://dullyshin.github.io/categories/Programming/SQL/"/>
    
    
      <category term="SQL" scheme="https://dullyshin.github.io/tags/SQL/"/>
    
      <category term="PostgreSQL_Basic" scheme="https://dullyshin.github.io/tags/PostgreSQL-Basic/"/>
    
      <category term="PostgreSQL" scheme="https://dullyshin.github.io/tags/PostgreSQL/"/>
    
      <category term="PostgreSQL 주석" scheme="https://dullyshin.github.io/tags/PostgreSQL-%EC%A3%BC%EC%84%9D/"/>
    
      <category term="포스트그레스 주석" scheme="https://dullyshin.github.io/tags/%ED%8F%AC%EC%8A%A4%ED%8A%B8%EA%B7%B8%EB%A0%88%EC%8A%A4-%EC%A3%BC%EC%84%9D/"/>
    
      <category term="PostgreSQL 주석 남기기" scheme="https://dullyshin.github.io/tags/PostgreSQL-%EC%A3%BC%EC%84%9D-%EB%82%A8%EA%B8%B0%EA%B8%B0/"/>
    
      <category term="PostgreSQL 주석 달기" scheme="https://dullyshin.github.io/tags/PostgreSQL-%EC%A3%BC%EC%84%9D-%EB%8B%AC%EA%B8%B0/"/>
    
      <category term="포스트그레스 주석 남기기" scheme="https://dullyshin.github.io/tags/%ED%8F%AC%EC%8A%A4%ED%8A%B8%EA%B7%B8%EB%A0%88%EC%8A%A4-%EC%A3%BC%EC%84%9D-%EB%82%A8%EA%B8%B0%EA%B8%B0/"/>
    
      <category term="포스트그레스 주석 달기" scheme="https://dullyshin.github.io/tags/%ED%8F%AC%EC%8A%A4%ED%8A%B8%EA%B7%B8%EB%A0%88%EC%8A%A4-%EC%A3%BC%EC%84%9D-%EB%8B%AC%EA%B8%B0/"/>
    
      <category term="PostgreSQL 코멘트" scheme="https://dullyshin.github.io/tags/PostgreSQL-%EC%BD%94%EB%A9%98%ED%8A%B8/"/>
    
      <category term="PostgreSQL comment" scheme="https://dullyshin.github.io/tags/PostgreSQL-comment/"/>
    
  </entry>
  
  <entry>
    <title>PostgreSQL-coalesce함수 (오라클 nvl함수 대체)</title>
    <link href="https://dullyshin.github.io/2023/08/12/PostgreSQL-nvl/"/>
    <id>https://dullyshin.github.io/2023/08/12/PostgreSQL-nvl/</id>
    <published>2023-08-12T14:24:31.000Z</published>
    <updated>2023-08-12T15:33:20.742Z</updated>
    
    <content type="html"><![CDATA[<h1 id="PostgreSQL-coalesce함수-오라클-nvl함수-대체"><a href="#PostgreSQL-coalesce함수-오라클-nvl함수-대체" class="headerlink" title="PostgreSQL-coalesce함수 (오라클 nvl함수 대체)"></a>PostgreSQL-coalesce함수 (오라클 nvl함수 대체)</h1><p>데이터를 조회할 시에 결과에 <code>NULL</code> 이 결과로 나오게 된다면 아주 당혹스러울 상황이 생기게 되는되요.<br>그때 사용할 수 있는 함수가 오라클에서는 nvl 함수, PostgreSQL에서는 coalesce함수를 대체하여 사용할 수 있습니다.</p><h3 id="PostgreSQL-coalesce-함수"><a href="#PostgreSQL-coalesce-함수" class="headerlink" title="PostgreSQL coalesce 함수"></a>PostgreSQL coalesce 함수</h3><p>우선 PostgreSQL coalesce함수를 예시를 들어본다면 아래와 같습니다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">-- COALESCE(A, B);</span><br><span class="line">-- A값이 NULL일 경우 B로 반환합니다.</span><br><span class="line"></span><br><span class="line">SELECT empno</span><br><span class="line">     , ename</span><br><span class="line">     , COALESCE(salary, 0) AS salary</span><br><span class="line">  FROM emp;</span><br></pre></td></tr></table></figure><p>위와같이 조회한다면 <code>COALESCE(salary, 0) AS salary</code> 에서 salary(급여) 값이 NULL이 나온다면 무조건 0으로 표시할 수 있게됩니다.<br>좀 더 예시를 확인한다면 아래와 같습니다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">-- COALESCE(A, B, C);</span><br><span class="line">-- A값이 NULL일 경우 B로 반환합니다. A와 B 모두 NULL일 경우 C로 반환합니다.</span><br><span class="line"></span><br><span class="line">SELECT COALESCE(description, short_description, &apos;none&apos;)</span><br><span class="line">FROM paint;</span><br></pre></td></tr></table></figure><p>위의 상황에서 description에 NULL이라면 short_description의 결과를 가져오고 short_description 마저 NULL이라면 ‘none’이라는 결과를 가지고 올 수 있습니다.</p><h3 id="Oracle-NVL-함수"><a href="#Oracle-NVL-함수" class="headerlink" title="Oracle NVL 함수"></a>Oracle NVL 함수</h3><p>위의 쿼리를 오라클의 nvl을 사용하려면 아래와 같이 사용할 수 있습니다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">-- NVL(A, B);</span><br><span class="line">-- A값이 NULL일 경우 B로 반환합니다.</span><br><span class="line"></span><br><span class="line">SELECT empno</span><br><span class="line">     , ename</span><br><span class="line">     , NVL(salary, 0) AS salary</span><br><span class="line">  FROM emp;</span><br></pre></td></tr></table></figure><h3 id="Oracle-NVL2-함수"><a href="#Oracle-NVL2-함수" class="headerlink" title="Oracle NVL2 함수"></a>Oracle NVL2 함수</h3><p>오라클의 NVL2 함수는 NULL이 아닌 경우 지정값1을  출력하고, NULL인 경우 지정값2를 출력한다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">-- NVL2(A, B, C);</span><br><span class="line">-- A값이 NULL이 아니라면 B로 반환, NULL일 경우 C로 반환합니다.</span><br><span class="line">-- NVL2(&quot;값&quot;, &quot;NOT NULL&quot;, &quot;NULL&quot;)</span><br><span class="line"></span><br><span class="line">SELECT empno</span><br><span class="line">     , ename</span><br><span class="line">     , NVL(salary, 0) AS salary</span><br><span class="line">     , NVL2(salary, &apos;Y&apos;, &apos;N&apos;) AS salary_yn</span><br><span class="line">  FROM emp;</span><br></pre></td></tr></table></figure><p>여기서 <code>NVL2(salary, &#39;Y&#39;, &#39;N&#39;) AS salary_yn</code> 급여가 있을경우에는 ‘Y’ 없을 경우에는 ‘N’으로 결과가 조회되도록 만들 수 있었습니다.</p><hr><h4 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h4><ul><li><a href="https://www.postgresql.kr/docs/13/functions-conditional.html#FUNCTIONS-COALESCE-NVL-IFNULL" target="_blank" rel="noopener">https://www.postgresql.kr/docs/13/functions-conditional.html#FUNCTIONS-COALESCE-NVL-IFNULL</a></li></ul><h4 id="Related-Posts"><a href="#Related-Posts" class="headerlink" title="Related Posts"></a>Related Posts</h4><ul><li><a href="/2018/08/27/PostgreSQL-Basic/" title="PostgreSql 란?">PostgreSql 란?</a></li><li><a href="/2019/07/25/PostgreSQL-CDATA/" title="[java error]The content of elements must consist of well-formed character data or markup.">[java error]The content of elements must consist of well-formed character data or markup.</a></li><li><a href="/2019/02/20/MSSQL-InsertPlusOne/" title="(MS SQL) 삽입시Insert 최대값 추가 +1">(MS SQL) 삽입시Insert 최대값 추가 +1</a></li><li><a href="/2018/05/11/SQL-sqlBasic/" title="SQL basic">SQL basic</a></li><li><a href="/2021/02/04/PostgreSQL-Vacuum/" title="PostgreSQL - 베큠 `Vacuum` 간단한 소개">PostgreSQL - 베큠 `Vacuum` 간단한 소개</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;PostgreSQL-coalesce함수-오라클-nvl함수-대체&quot;&gt;&lt;a href=&quot;#PostgreSQL-coalesce함수-오라클-nvl함수-대체&quot; class=&quot;headerlink&quot; title=&quot;PostgreSQL-coalesce함수 (오
      
    
    </summary>
    
      <category term="Programming" scheme="https://dullyshin.github.io/categories/Programming/"/>
    
      <category term="SQL" scheme="https://dullyshin.github.io/categories/Programming/SQL/"/>
    
    
      <category term="SQL" scheme="https://dullyshin.github.io/tags/SQL/"/>
    
      <category term="PostgreSQL_Basic" scheme="https://dullyshin.github.io/tags/PostgreSQL-Basic/"/>
    
      <category term="PostgreSQL" scheme="https://dullyshin.github.io/tags/PostgreSQL/"/>
    
      <category term="PostgreSQL COALESCE" scheme="https://dullyshin.github.io/tags/PostgreSQL-COALESCE/"/>
    
      <category term="오라클 NVL" scheme="https://dullyshin.github.io/tags/%EC%98%A4%EB%9D%BC%ED%81%B4-NVL/"/>
    
      <category term="Oracle PostgreSQL변환" scheme="https://dullyshin.github.io/tags/Oracle-PostgreSQL%EB%B3%80%ED%99%98/"/>
    
      <category term="Oracle의 nvl함수" scheme="https://dullyshin.github.io/tags/Oracle%EC%9D%98-nvl%ED%95%A8%EC%88%98/"/>
    
      <category term="PostgreSQL의 coalesce함수" scheme="https://dullyshin.github.io/tags/PostgreSQL%EC%9D%98-coalesce%ED%95%A8%EC%88%98/"/>
    
  </entry>
  
  <entry>
    <title>Hexo-github token</title>
    <link href="https://dullyshin.github.io/2021/10/25/Hexo-github-token/"/>
    <id>https://dullyshin.github.io/2021/10/25/Hexo-github-token/</id>
    <published>2021-10-25T07:31:08.000Z</published>
    <updated>2021-10-25T12:00:47.371Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Hexo-Github-Token-사용법"><a href="#Hexo-Github-Token-사용법" class="headerlink" title="Hexo Github Token 사용법"></a>Hexo Github Token 사용법</h2><p>이번에 포스팅을 하면서 github에서 이메일이 왔습니다. 새로운 권한관리로 토큰을 사용해야 한다고 합니다.<br>deploy를 사용하면서 토큰을 사용해야하기 때문에 아래의 파일을 수정해야 합니다.</p><p><code>[블로그 디렉토리]/_config.yml</code></p><p>파일 안에 <code>deploy</code> 라는 부분이 있습니다. 그 중 url 부분을 수정해야 하는데 기존에 있는 url은 주석 처리를 한 후에 아래와 같이 수정하도록 합니다.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  //#수정 전 repo: https://github.com/DullyShin/dullyshin.github.io.git</span><br><span class="line">  repo: https://$&#123;GITHUB_TOKEN&#125;@github.com/DullyShin/dullyshin.github.io.git</span><br></pre></td></tr></table></figure><p>${GITHUB_TOKEN} 부분에 Github에서 받은 token을 사용하면 됩니다.</p><p>github에서 토큰을 받기 위해서는 github에서 로그인을 한 뒤에 오른쪽 상단에 <code>자신의 설정버튼</code>을 클릭한 후에 <code>Setting</code>을 클릭합니다.</p><p><img src="/images/git1.PNG" alt="Setting 버튼을 클릭"></p><p>그 다음 왼쪽 하단에 있는 <code>Developer setting</code>을 클릭합니다.</p><p><img src="/images/git2.PNG" alt="Developer setting 버튼을 클릭"></p><p>그 후 왼쪽에 있는 <code>Personal access token</code>을 클릭합니다. 오른쪽에 있는 <code>Generate new token</code>을 클릭해 새로운 토큰을 생성합니다.</p><p><img src="/images/git3.PNG" alt="Generate new token 버튼을 클릭"></p><p>다시 말하면 Github의 Settings &gt; Developer Settings &gt; Personal access tokens &gt; Generate new token 순으로 버튼을 누르면 됩니다.</p><p>다음 토큰에 부여할 권한을 설정한 후 <code>Generate token</code>을 클릭하여 토큰을 생성합니다. (아래의 권한선택은 예시이므로 필요시에 변경하여 사용하면 됩니다.)</p><p><img src="/images/git4.PNG" alt="권한선택 예시"></p><p>여기서 중요한게 <strong>생성된 토큰을 반드시 복사하여 다른곳에 저장해야 합니다.</strong> 다시는 볼 수 없을 것 입니다.<br>아래의 이미지에서 검은색으로 칠해진 부분입니다.</p><p><img src="/images/git5.PNG" alt="토큰 생성"></p><p>다시 한번 말하지만 <strong>생성된 토큰을 반드시 복사하여 다른곳에 저장해야 합니다.</strong></p><p>그 후 Hexo deploy 에서 사용하려면 위의 부분을 참고하시면 됩니다.</p><h4 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h4><ul><li><a href="https://hexo.io/ko/docs/one-command-deployment.html" target="_blank" rel="noopener">https://hexo.io/ko/docs/one-command-deployment.html</a></li></ul><h4 id="Related-Posts"><a href="#Related-Posts" class="headerlink" title="Related Posts"></a>Related Posts</h4><ul><li><a href="/2018/08/25/Github-markdown/" title="markdown">markdown</a></li><li><a href="/2018/08/27/Github-MarkdownEditor/" title="MarkdownEditor">MarkdownEditor</a></li><li><a href="/2018/08/26/Hexo-error/" title="Hexo error">Hexo error</a></li><li><a href="/2018/08/28/Hexo-tags/" title="Hexo에서 사용 가능한 태그들">Hexo에서 사용 가능한 태그들</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Hexo-Github-Token-사용법&quot;&gt;&lt;a href=&quot;#Hexo-Github-Token-사용법&quot; class=&quot;headerlink&quot; title=&quot;Hexo Github Token 사용법&quot;&gt;&lt;/a&gt;Hexo Github Token 사용법&lt;/
      
    
    </summary>
    
      <category term="Hexo" scheme="https://dullyshin.github.io/categories/Hexo/"/>
    
    
      <category term="Hexo" scheme="https://dullyshin.github.io/tags/Hexo/"/>
    
      <category term="github token" scheme="https://dullyshin.github.io/tags/github-token/"/>
    
      <category term="hexo github token" scheme="https://dullyshin.github.io/tags/hexo-github-token/"/>
    
      <category term="깃헙 토큰" scheme="https://dullyshin.github.io/tags/%EA%B9%83%ED%97%99-%ED%86%A0%ED%81%B0/"/>
    
      <category term="헥소 깃헙 토큰" scheme="https://dullyshin.github.io/tags/%ED%97%A5%EC%86%8C-%EA%B9%83%ED%97%99-%ED%86%A0%ED%81%B0/"/>
    
      <category term="깃헙 토큰 사용법" scheme="https://dullyshin.github.io/tags/%EA%B9%83%ED%97%99-%ED%86%A0%ED%81%B0-%EC%82%AC%EC%9A%A9%EB%B2%95/"/>
    
      <category term="깃헙 토큰 사용" scheme="https://dullyshin.github.io/tags/%EA%B9%83%ED%97%99-%ED%86%A0%ED%81%B0-%EC%82%AC%EC%9A%A9/"/>
    
      <category term="헥소" scheme="https://dullyshin.github.io/tags/%ED%97%A5%EC%86%8C/"/>
    
      <category term="깃헙 token" scheme="https://dullyshin.github.io/tags/%EA%B9%83%ED%97%99-token/"/>
    
      <category term="헥소 깃헙 token" scheme="https://dullyshin.github.io/tags/%ED%97%A5%EC%86%8C-%EA%B9%83%ED%97%99-token/"/>
    
  </entry>
  
</feed>
